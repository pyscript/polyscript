{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../esm/workers.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/proxy-target/esm/types.js","../node_modules/js-proxy/esm/heap.js","../node_modules/sabayon/src/shared.js","../node_modules/sabayon/src/main.js","../node_modules/coincident/src/shared.js","../node_modules/coincident/src/main.js","../node_modules/coincident/src/window/types.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/window/symbol.js","../node_modules/coincident/src/window/constants.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/window/main.js","../esm/worker/xworker.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","import { NUMBER } from 'proxy-target/types';\n\nlet uid = 0;\nconst ids = new Map;\nconst values = new Map;\n\n/**\n * Remove by id or value any previously stored reference.\n * @param {number | unknown} id the held value by id or the value itself.\n * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n */\nexport const drop = id => {\n  const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n  const had = a.has(id);\n  if (had) {\n    b.delete(a.get(id));\n    a.delete(id);\n  }\n  return had;\n};\n\n/**\n * Return the held value reference by its unique identifier.\n * @param {number} id the unique identifier for the value reference.\n * @returns {unknown} the related value / reference or undefined.\n */\nexport const get = id => values.get(id);\n\n/**\n * Create once a unique number id for a generic value reference.\n * @param {unknown} value a reference used to create a unique identifier.\n * @returns {number} a unique identifier for that reference.\n */\nexport const hold = value => {\n  if (!ids.has(value)) {\n    let id;\n    // a bit apocalyptic scenario but if this thread runs forever\n    // and the id does a whole int32 roundtrip we might have still\n    // some reference dangling around\n    while (/* c8 ignore next */ values.has(id = uid++));\n    ids.set(value, id);\n    values.set(id, value);\n  }\n  return ids.get(value);\n};\n","// (c) Andrea Giammarchi - MIT\n\nconst ACTION_INIT = 0;\nconst ACTION_NOTIFY = 1;\nconst ACTION_WAIT = 2;\nconst ACTION_SW = 3;\n\nconst { ArrayBuffer, Atomics: $Atomics, Promise } = globalThis;\nconst { isArray } = Array;\nconst { create, getPrototypeOf, values } = Object;\n\nconst TypedArray = getPrototypeOf(Int32Array);\nconst Atomics = create($Atomics);\n\nconst dispatch = ({ currentTarget, type, origin, lastEventId, source, ports }, data) =>\n  currentTarget.dispatchEvent(new MessageEvent(type, { data, origin, lastEventId, source, ports }));\n\nconst withResolvers = () => Promise.withResolvers();\n\nlet id = 0;\nconst views = new Map;\nconst extend = (Class, SharedArrayBuffer) => class extends Class {\n  constructor(value, ...rest) {\n    super(value, ...rest);\n    if (value instanceof SharedArrayBuffer)\n      views.set(this, [id++, 0, withResolvers()]);\n  }\n};\n\nconst ignoreList = new WeakSet;\n\n/**\n * @template {T}\n * @callback PassThrough\n * @param {T} value\n * @returns {T}\n */\n\n/** @type {PassThrough} */\nconst ignoreDirect = value => value;\n\n/** @type {PassThrough} */\nconst ignorePatch = value => {\n  ignoreList.add(value);\n  return value;\n};\n\nconst isChannel = (event, channel) => {\n  const { data } = event;\n  const yes = isArray(data) && (\n    data.at(0) === channel ||\n    (data.at(1) === ACTION_INIT && !channel)\n  );\n  if (yes) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  return yes;\n};\n\nconst isObject = value => (\n  value !== null &&\n  typeof value === 'object' &&\n  !ignoreList.has(value)\n);\n\nconst transferred = new WeakMap;\nconst transferViews = (data, transfer, visited) => {\n  if (views.has(data))\n    transfer.set(data, views.get(data)[0]);\n  else if (!(data instanceof TypedArray || data instanceof ArrayBuffer)) {\n    for (const value of values(data)) {\n      if (isObject(value) && !visited.has(value)) {\n        visited.add(value);\n        transferViews(value, transfer, visited);\n      }\n    }\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync#browser_compatibility\nconst waitAsyncPatch = (...args) => ({\n  value: new Promise(resolve => {\n    // encodeURIComponent('onmessage=e=>postMessage(!Atomics.wait(...e.data))')\n    let w = new Worker('data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))');\n    w.onmessage = () => resolve('ok');\n    w.postMessage(args);\n  })\n});\n\nconst waitAsyncPoly = (view, index) => {\n  const value = views.get(view), [id, _, { promise }] = value;\n  value[1] = index;\n  return [id, promise];\n};\n\nconst actionNotify = (_view, _id, _index) => {\n  for (const [view, [id, index, { resolve }]] of views) {\n    if (_id === id && _index === index) {\n      for (let i = 0; i < _view.length; i++) view[i] = _view[i];\n      views.delete(view);\n      resolve('ok');\n      break;\n    }\n  }\n};\n\nconst actionWait = (event, transfer, data) => {\n  for (const [view, id] of transfer)\n    transferred.set(view, [id, event.currentTarget]);\n  dispatch(event, data);\n};\n\nconst postData = (CHANNEL, data) => {\n  const transfer = new Map;\n  if (isObject(data)) transferViews(data, transfer, new Set);\n  return transfer.size ? [CHANNEL, ACTION_WAIT, transfer, data] : data;\n};\n\nconst getData = view => transferred.get(view);\n\nexport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics, TypedArray,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  dispatch,\n  extend,\n  isChannel,\n  views,\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  extend,\n  isChannel,\n  withResolvers,\n} from './shared.js';\n\nlet {\n  BigInt64Array,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker,\n} = globalThis;\n\nlet ignore = ignoreDirect;\nlet polyfill = false;\n\nconst asModule = options => ({ ...options, type: 'module' });\n\ntry {\n  new SharedArrayBuffer(4);\n\n  Worker = class extends Worker {\n    constructor(url, options) {\n      super(url, asModule(options));\n    }\n  }\n\n  if (!Atomics.waitAsync)\n    Atomics.waitAsync = waitAsyncPatch;\n}\ncatch (_) {\n  const CHANNEL = crypto.randomUUID();\n\n  const sync = new Map;\n\n  const addListener = (self, type, handler, ...rest) => {\n    self.addEventListener(type, handler, ...rest);\n  };\n\n  const register = ({ serviceWorker: s }, sw, done) => {\n    let w, c = true;\n    addListener(s, 'message', event => {\n      if (isChannel(event, CHANNEL)) {\n        const [_, id, index] = event.data;\n        const uid = [id, index].join(',');\n        const done = view => {\n          sync.delete(uid);\n          w.postMessage([ CHANNEL, id, index, view ]);\n        };\n        const view = sync.get(uid);\n        if (view) done(view);\n        else {\n          const { promise, resolve } = withResolvers();\n          sync.set(uid, resolve);\n          promise.then(done);\n        }\n      }\n    });\n    // use previous registration, if any, before registering it\n    s.getRegistration(sw)\n      .then(r => (r ?? s.register(sw)))\n      .then(function ready(r) {\n        c = c && !!s.controller;\n        w = (r.installing || r.waiting || r.active);\n        if (w.state === 'activated') {\n          if (c) done();\n          else location.reload();\n        }\n        else\n          addListener(w, 'statechange', () => ready(r), { once: true });\n      });\n  };\n\n  ignore = ignorePatch;\n  polyfill = true;\n\n  Atomics.notify = (view, index) => {\n    const [id, worker] = getData(view);\n    const uid = [id, index].join(',');\n    const known = sync.get(uid);\n    if (known) known(view);\n    else sync.set(uid, view);\n    worker.postMessage([CHANNEL, ACTION_NOTIFY, view, id, index]);\n    return 0;\n  };\n\n  Atomics.waitAsync = (view, ...rest) => {\n    const [_, value] = waitAsyncPoly(view, ...rest);\n    return { value };\n  };\n\n  SharedArrayBuffer = class extends ArrayBuffer {}\n  BigInt64Array = extend(BigInt64Array, SharedArrayBuffer);\n  Int32Array = extend(Int32Array, SharedArrayBuffer);\n\n  let serviceWorker = null;\n  Worker = class extends Worker {\n    constructor(url, options) {\n      let sw = options?.serviceWorker || '';\n      if (sw) {\n        sw = new URL(sw, location.href).href;\n        options = { ...options, serviceWorker: sw };\n        if (!serviceWorker) {\n          const { promise, resolve } = withResolvers();\n          register(navigator, sw, resolve);\n          serviceWorker = promise;\n        }\n        serviceWorker.then(\n          () => super.postMessage([CHANNEL, ACTION_SW])\n        );\n      }\n      super(url, asModule(options));\n      super.postMessage([CHANNEL, ACTION_INIT, options]);\n      addListener(this, 'message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_NOTIFY: {\n              actionNotify(...rest);\n              break;\n            }\n            case ACTION_WAIT: {\n              actionWait(event, ...rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n    postMessage(data, ...rest) {\n      return super.postMessage(postData(CHANNEL, data), ...rest);\n    }\n  }\n}\n\nexport {\n  /** @type {globalThis.Atomics} */ Atomics,\n  /** @type {globalThis.BigInt64Array} */ BigInt64Array,\n  /** @type {globalThis.Int32Array} */ Int32Array,\n  /** @type {globalThis.SharedArrayBuffer} */ SharedArrayBuffer,\n  /** @type {globalThis.Worker} */ Worker,\n  ignore,\n  polyfill,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT,\n  ACTION_NOTIFY,\n  ACTION_WAIT,\n  Atomics,\n  isChannel,\n  withResolvers,\n} from 'sabayon/shared';\n\nconst { BYTES_PER_ELEMENT: I32_BYTES } = Int32Array;\nconst { BYTES_PER_ELEMENT: UI16_BYTES } = Uint16Array;\n\nconst { notify } = Atomics;\n\nconst decoder = new TextDecoder('utf-16');\n\nconst buffers = new WeakSet;\n\nconst transfer = (...args) => (buffers.add(args), args);\n\nlet seppuku = '';\nconst actionLength = (stringify, transform) => async (callback, results, [name, id, sb, args, isSync]) => {\n  if (isSync) seppuku = name;\n  try {\n    const result = await callback(...args);\n    if (result !== void 0) {\n      const serialized = stringify(transform ? transform(result) : result);\n      results.set(id, serialized);\n      sb[1] = serialized.length;\n    }\n  }\n  finally {\n    if (isSync) seppuku = '';\n    sb[0] = 1;\n    notify(sb, 0);\n  }\n};\nconst actionFill = (results, [id, sb]) => {\n  const result = results.get(id);\n  results.delete(id);\n  for (let ui16a = new Uint16Array(sb.buffer), i = 0, { length } = result; i < length; i++)\n    ui16a[i] = result.charCodeAt(i);\n  notify(sb, 0);\n};\nconst actionWait = (waitLength, results, map, rest) => {\n  const [name] = rest;\n  const callback = map.get(name);\n  if (!callback) throw new Error(`Unknown proxy.${name}()`);\n  waitLength(callback, results, rest);\n};\n\nconst warn = (name, seppuku) => setTimeout(\n  console.warn,\n  3e3,\n  `💀🔒 - proxy.${name}() in proxy.${seppuku}()`\n);\n\nlet uid = 0;\nconst invoke = (\n  [\n    CHANNEL,\n    i32View,\n    ignore,\n    isSync,\n    parse,\n    polyfill,\n    postMessage,\n    transform,\n    waitAsync,\n  ],\n  name,\n) => (...args) => {\n  let deadlock = seppuku !== '', timer = 0;\n  // slow operations between main and worker should likely not\n  // be tracked as the dance there would never deadlock, it just\n  // eventually slow down and that's it\n  if (deadlock && seppuku[0] !== '=' && seppuku[0] !== '-')\n    timer = warn(name, seppuku);\n  const id = uid++;\n  const transfer = [];\n  if (buffers.has(args.at(-1) || transfer))\n    buffers.delete(transfer = args.pop());\n  const data = ignore(transform ? args.map(transform) : args);\n  let sb = i32View(I32_BYTES * 2);\n  postMessage([CHANNEL, ACTION_WAIT, name, id, sb, data, isSync], { transfer });\n  return waitAsync(sb, 0).value.then(() => {\n    if (deadlock) clearTimeout(timer);\n    const length = sb[1];\n    if (!length) return;\n    const bytes = UI16_BYTES * length;\n    sb = i32View(bytes + (bytes % I32_BYTES));\n    postMessage([CHANNEL, ACTION_NOTIFY, id, sb]);\n    return waitAsync(sb, 0).value.then(() =>{\n      const ui16a = new Uint16Array(sb.buffer);\n      const sub = polyfill ? ui16a.subarray(0, length) : ui16a.slice(0, length);\n      return parse(decoder.decode(sub));\n    });\n  });\n};\n\nconst createProxy = (details, map) => new Proxy(map, {\n  get: (map, name) => {\n    let cb;\n    // the curse of potentially awaiting proxies in the wild\n    // requires this ugly guard around `then`\n    if (name !== 'then') {\n      cb = map.get(name);\n      if (!cb) {\n        cb = invoke(details, name);\n        map.set(name, cb);\n      }\n    }\n    return cb;\n  },\n  set: (map, name, callback) => (\n    name !== 'then' &&\n    !!map.set(name, callback)\n  ),\n});\n\nexport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  Atomics,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker as $Worker,\n  ignore,\n  polyfill,\n} from 'sabayon/main';\n\nimport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n} from './shared.js';\n\n/**\n * @typedef {Object} MainOptions\n * @prop {(text: string, ...args:any) => any} [parse=JSON.parse]\n * @prop {(value: any, ...args:any) => string} [stringify=JSON.stringify]\n * @prop {(value: any) => any} [transform]\n */\n\n/**\n * @callback Coincident\n * @param {MainOptions} [options]\n * @returns {{Worker: import('./ts.js').CoincidentWorker, polyfill: boolean, transfer: (...args: Transferable[]) => Transferable[]}}\n */\n\nexport default /** @type {Coincident} */ ({\n  parse,\n  stringify,\n  transform,\n} = JSON) => {\n  const waitLength = actionLength(stringify, transform);\n\n  const CHANNEL = crypto.randomUUID();\n\n  class Worker extends $Worker {\n    constructor(url, options) {\n      const map = new Map;\n      const results = new Map;\n      super(url, options);\n      this.proxy = createProxy(\n        [\n          CHANNEL,\n          bytes => new Int32Array(new SharedArrayBuffer(bytes)),\n          ignore,\n          false,\n          parse,\n          polyfill,\n          (...args) => this.postMessage(...args),\n          transform,\n          Atomics.waitAsync,\n        ],\n        map,\n      );\n      this.postMessage(ignore([CHANNEL, ACTION_INIT, options]));\n      this.addEventListener('message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_WAIT: {\n              actionWait(waitLength, results, map, rest);\n              break;\n            }\n            case ACTION_NOTIFY: {\n              actionFill(results, rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  return {\n    Worker,\n    polyfill,\n    transfer,\n  };\n};\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n].map((k, i) => [k, i]));\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","import { OWN_KEYS } from 'js-proxy/traps';\nimport { SYMBOL } from 'js-proxy/types';\n\nconst { [OWN_KEYS]: ownKeys } = Reflect;\n\nconst known = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const fromSymbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of known) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const toSymbol = value => (\n  known.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = '960fd6fe-ad03-40d1-a314-e58d84bce14f';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import { drop, get, hold } from 'js-proxy/heap';\nimport { TypedArray } from 'sabayon/shared';\n\nimport coincident from '../main.js';\nimport numeric from './types.js';\nimport { fromSymbol, toSymbol } from './symbol.js';\n\nimport {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from './events.js';\n\nimport DEBUG from '../debug.js';\n\nconst { isArray } = Array;\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  const exports = coincident(options);\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        return [numeric[OBJECT], value instanceof TypedArray ? value : hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n      const { [WORKER]: __worker__ } = proxy;\n\n      const proxies = new Map;\n      const onGC = ref => {\n        proxies.delete(ref);\n        __worker__(DESTRUCT, ref);\n      }\n\n      const fromEntry = ([numericTYPE, value]) => {\n        switch (numericTYPE) {\n          case numeric[OBJECT]: {\n            if (value === null) return globalThis;\n            if (typeof value === NUMBER) return get(value);\n            if (!(value instanceof TypedArray)) {\n              for (const key in value)\n                value[key] = fromEntry(value[key]);\n            }\n            return value;\n          };\n          case numeric[ARRAY]: {\n            if (typeof value === NUMBER) return get(value);\n            return value.map(fromEntry);\n          };\n          case numeric[FUNCTION]: {\n            switch (typeof value) {\n              case NUMBER: return get(value);\n              case STRING: {\n                let fn = proxies.get(value)?.deref();\n                if (!fn) {\n                  fn = create(value, onGC, {\n                    token: false,\n                    return: function (...args) {\n                      if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                      return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                    }\n                  });\n                  proxies.set(value, new WeakRef(fn));\n                }\n                return fn;\n              }\n            }\n          };\n          case numeric[SYMBOL]: return fromSymbol(value);\n          default: return value;\n        }\n      };\n\n      const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n\n      proxy[MAIN] = (TRAP, ref, ...args) => {\n        if (TRAP === DESTRUCT) drop(ref);\n        else {\n          const method = Reflect[TRAP];\n          const target = ref == null ? globalThis : get(ref);\n          switch (TRAP) {\n            case DEFINE_PROPERTY: {\n              const [name, descriptor] = args.map(fromEntry);\n              return toEntry(method(target, name, descriptor));\n            }\n            case GET_OWN_PROPERTY_DESCRIPTOR: {\n              const descriptor = method(target, ...args.map(fromEntry));\n              if (descriptor) {\n                const { get, set, value } = descriptor;\n                if (get) descriptor.get = toEntry(get);\n                if (set) descriptor.set = toEntry(set);\n                if (value) descriptor.value = toEntry(value);\n              }\n              return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n            }\n            case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n            default: return asEntry(method, target, args);\n          }\n        }\n      };\n\n      if (DEBUG) {\n        const debug = proxy[MAIN];\n        proxy[MAIN] = (TRAP, ...args) => {\n          const destructing = TRAP === DESTRUCT;\n          const method = destructing ? console.warn : console.log;\n          method('Main before', TRAP, ...args);\n          const result = debug(TRAP, ...args);\n          if (!destructing) method('Main after', TRAP, result);\n          return result;\n        };\n      }\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident(JSON);\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const t=\\\"object\\\"==typeof self?self:globalThis,e=e=>((e,n)=>{const r=(t,n)=>(e.set(n,t),t),s=o=>{if(e.has(o))return e.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const t=r([],o);for(const e of i)t.push(s(e));return t}case 2:{const t=r({},o);for(const[e,n]of i)t[s(e)]=s(n);return t}case 3:return r(new Date(i),o);case 4:{const{source:t,flags:e}=i;return r(new RegExp(t,e),o)}case 5:{const t=r(new Map,o);for(const[e,n]of i)t.set(s(e),s(n));return t}case 6:{const t=r(new Set,o);for(const e of i)t.add(s(e));return t}case 7:{const{name:e,message:n}=i;return r(new t[e](n),o)}case 8:return r(BigInt(i),o);case\\\"BigInt\\\":return r(Object(BigInt(i)),o)}return r(new t[a](i),o)};return s})(new Map,e)(0),n=\\\"\\\",{toString:r}={},{keys:s}=Object,o=t=>{const e=typeof t;if(\\\"object\\\"!==e||!t)return[0,e];const s=r.call(t).slice(8,-1);switch(s){case\\\"Array\\\":return[1,n];case\\\"Object\\\":return[2,n];case\\\"Date\\\":return[3,n];case\\\"RegExp\\\":return[4,n];case\\\"Map\\\":return[5,n];case\\\"Set\\\":return[6,n]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([t,e])=>0===t&&(\\\"function\\\"===e||\\\"symbol\\\"===e),i=(t,{json:e,lossy:n}={})=>{const r=[];return((t,e,n,r)=>{const i=(t,e)=>{const s=r.push(t)-1;return n.set(e,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,u]=o(r);switch(l){case 0:{let e=r;switch(u){case\\\"bigint\\\":l=8,e=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(t)throw new TypeError(\\\"unable to serialize \\\"+u);e=null;break;case\\\"undefined\\\":return i([-1],r)}return i([l,e],r)}case 1:{if(u)return i([u,[...r]],r);const t=[],e=i([l,t],r);for(const e of r)t.push(c(e));return e}case 2:{if(u)switch(u){case\\\"BigInt\\\":return i([u,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([u,r.valueOf()],r)}if(e&&\\\"toJSON\\\"in r)return c(r.toJSON());const n=[],p=i([l,n],r);for(const e of s(r))!t&&a(o(r[e]))||n.push([c(e),c(r[e])]);return p}case 3:return i([l,r.toISOString()],r);case 4:{const{source:t,flags:e}=r;return i([l,{source:t,flags:e}],r)}case 5:{const e=[],n=i([l,e],r);for(const[n,s]of r)(t||!a(o(n))&&!a(o(s)))&&e.push([c(n),c(s)]);return n}case 6:{const e=[],n=i([l,e],r);for(const n of r)!t&&a(o(n))||e.push(c(n));return n}}const{message:p}=r;return i([l,{name:u,message:p}],r)};return c})(!(e||n),!!e,new Map,r)(t),r},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var p=Object.freeze({__proto__:null,parse:t=>e(c(t)),stringify:t=>l(i(t,u))});const f=\\\"array\\\",d=\\\"function\\\",h=\\\"null\\\",y=\\\"number\\\",w=\\\"object\\\",g=\\\"symbol\\\",m=\\\"undefined\\\",_=\\\"apply\\\",A=\\\"construct\\\",b=\\\"defineProperty\\\",E=\\\"deleteProperty\\\",v=\\\"get\\\",j=\\\"getOwnPropertyDescriptor\\\",x=\\\"getPrototypeOf\\\",k=\\\"has\\\",S=\\\"isExtensible\\\",$=\\\"ownKeys\\\",B=\\\"preventExtensions\\\",P=\\\"set\\\",T=\\\"setPrototypeOf\\\";var O=Object.freeze({__proto__:null,APPLY:_,CONSTRUCT:A,DEFINE_PROPERTY:b,DELETE_PROPERTY:E,GET:v,GET_OWN_PROPERTY_DESCRIPTOR:j,GET_PROTOTYPE_OF:x,HAS:k,IS_EXTENSIBLE:S,OWN_KEYS:$,PREVENT_EXTENSION:B,SET:P,SET_PROTOTYPE_OF:T});function R(){return this}const M=new FinalizationRegistry((([t,e,n])=>{n&&console.debug(`Held value ${String(e)} not relevant anymore`),t(e)})),F=Object.create(null),{Object:C,Proxy:D,Reflect:I}=globalThis,{isArray:W}=Array,{ownKeys:H}=I,{create:N,hasOwn:J,values:q}=C,z=(t,e)=>e===f?t[0]:e===d?t():e===w?t.$:t,U=(t,e,n,r)=>{const s={type:{value:e}},o=J(t,\\\"valueOf\\\");for(const a of q(O)){let i=r(t[a]||I[a]);if(o&&a===v){const{valueOf:r}=t,{value:s}=i;i={value(t,o,...a){return o===n?r.call(this,z(t,e)):s.call(this,t,o,...a)}}}s[a]=i}return N(t,s)},L=(t,e,n,r=t)=>{if(r===t)switch(typeof t){case w:case m:r||(r=!1);case d:break;default:r=!1,e===t&&(e=C(t))}const s=new D(e,n),{destruct:o}=n;return o?((t,e,{debug:n,handler:r,return:s,token:o=t}=F)=>{const a=s||new Proxy(t,r||F),i=[a,[e,t,!!n]];return!1!==o&&i.push(o),M.register(...i),a})(t,o,{token:r,return:s}):s},K=t=>e=>{const n=typeof e;return n===w?e?t.get(e)?.[0]??(t=>W(t)?f:w)(e):h:n},G=t=>e=>{let n=typeof e;switch(n){case w:if(!e){n=h;break}case d:const r=t.get(e);r&&([n,e]=r)}return[n,e]},Y=t=>((t=>{M.unregister(t)})(t),t);var X=t=>{const e=new WeakMap,n=Symbol(),r={},s=(t,n,r)=>(e.set(t,[n,r]),t),o={proxy:r,release:Y,pair:G(e),typeOf:K(e),isProxy:t=>e.has(t),valueOf:t=>t[n]??t.valueOf()};for(const e of H(t)){if(J(o,e))continue;const a=t[e];switch(e){case f:{const t=U(a,e,n,(t=>({value([e],...n){return t.call(this,e,...n)}})));r[e]=(e,...n)=>s(L(e,[e],t,...n),f,e);break}case d:{const t=U(a,e,n,(t=>({value(e,...n){return t.call(this,e(),...n)}})));r[e]=(e,...n)=>{return s(L(e,(r=e,R.bind(r)),t,...n),d,e);var r};break}case w:{const t=U(a,e,n,(t=>({value({$:e},...n){return t.call(this,e,...n)}})));r[e]=(e,...n)=>s(L(e,{$:e},t,...n),w,e);break}default:{const t=U(a,e,n,(t=>({value:t})));r[e]=(n,...r)=>s(L(n,n,t,...r),e,n);break}}}return o};let Z=0;const V=new Map,Q=new Map,tt=t=>Q.get(t),et=t=>{if(!V.has(t)){let e;for(;Q.has(e=Z++););V.set(t,e),Q.set(e,t)}return V.get(t)},{ArrayBuffer:nt,Atomics:rt,Promise:st}=globalThis,{isArray:ot}=Array,{create:at,getPrototypeOf:it,values:ct}=Object,lt=it(Int32Array),ut=at(rt),pt=({currentTarget:t,type:e,origin:n,lastEventId:r,source:s,ports:o},a)=>t.dispatchEvent(new MessageEvent(e,{data:a,origin:n,lastEventId:r,source:s,ports:o})),ft=()=>st.withResolvers();let dt=0;const ht=new Map,yt=(t,e)=>class extends t{constructor(t,...n){super(t,...n),t instanceof e&&ht.set(this,[dt++,0,ft()])}},wt=new WeakSet,gt=t=>(wt.add(t),t),mt=(t,e)=>{const{data:n}=t,r=ot(n)&&(n.at(0)===e||0===n.at(1)&&!e);return r&&(t.stopImmediatePropagation(),t.preventDefault()),r},_t=t=>null!==t&&\\\"object\\\"==typeof t&&!wt.has(t),At=new WeakMap,bt=(t,e,n)=>{if(ht.has(t))e.set(t,ht.get(t)[0]);else if(!(t instanceof lt||t instanceof nt))for(const r of ct(t))_t(r)&&!n.has(r)&&(n.add(r),bt(r,e,n))},Et=(...t)=>({value:new st((e=>{let n=new Worker(\\\"data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))\\\");n.onmessage=()=>e(\\\"ok\\\"),n.postMessage(t)}))}),vt=(t,e)=>{const n=ht.get(t),[r,s,{promise:o}]=n;return n[1]=e,[r,o]};let{BigInt64Array:jt,Int32Array:xt,SharedArrayBuffer:kt,addEventListener:St,postMessage:$t}=globalThis,Bt=!0,Pt=t=>t,Tt=!1;const Ot=ft();try{new kt(4),ut.waitAsync||(ut.waitAsync=Et),Ot.resolve()}catch(t){const e=$t,n=St,r=[];let s=\\\"\\\",o=\\\"\\\";kt=class extends nt{},jt=yt(jt,kt),xt=yt(xt,kt),Pt=gt,Tt=!0,ut.notify=(t,n)=>{const[r]=(t=>At.get(t))(t);return e([s,1,t,r,n]),0},ut.waitAsync=(...t)=>{const[e,n]=vt(...t);return{value:n}},ut.wait=(t,e,...n)=>{const[r]=vt(t,e,...n),a=new XMLHttpRequest;a.responseType=\\\"json\\\",a.open(\\\"POST\\\",`${o}?sabayon`,!1),a.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),a.send(`[\\\"${s}\\\",${r},${e}]`);const{response:i}=a;ht.delete(t);for(let e=0;e<i.length;e++)t[e]=i[e];return\\\"ok\\\"},n(\\\"message\\\",(t=>{if(mt(t,s)){const[e,n,...r]=t.data;switch(n){case 0:s=e,o=r.at(0)?.serviceWorker||\\\"\\\",o||(ut.wait=null,Ot.resolve());break;case 1:((t,e,n)=>{for(const[r,[s,o,{resolve:a}]]of ht)if(e===s&&n===o){for(let e=0;e<t.length;e++)r[e]=t[e];ht.delete(r),a(\\\"ok\\\");break}})(...r);break;case 2:((t,e,n)=>{for(const[n,r]of e)At.set(n,[r,t.currentTarget]);pt(t,n)})(t,...r);break;case 3:Ot.resolve()}}else if(Bt){const{currentTarget:e,type:n,origin:s,lastEventId:o,source:a,ports:i}=t;r.push([{currentTarget:e,type:n,origin:s,lastEventId:o,source:a,ports:i},t.data])}})),St=(t,...e)=>{if(n(t,...e),r.length)for(const t of r.splice(0))pt(...t)},$t=(t,...n)=>e(((t,e)=>{const n=new Map;return _t(e)&&bt(e,n,new Set),n.size?[t,2,n,e]:e})(s,t),...n)}await Ot.promise,Bt=!1;const{BYTES_PER_ELEMENT:Rt}=Int32Array,{BYTES_PER_ELEMENT:Mt}=Uint16Array,{notify:Ft}=ut,Ct=new TextDecoder(\\\"utf-16\\\"),Dt=new WeakSet,It=(...t)=>(Dt.add(t),t);let Wt=\\\"\\\";const Ht=(t,e,n,r)=>{const[s]=r,o=n.get(s);if(!o)throw new Error(`Unknown proxy.${s}()`);t(o,e,r)};let Nt=0;const Jt=([t,e,n,r,s,o,a,i,c],l)=>(...u)=>{let p=\\\"\\\"!==Wt,f=0;p&&\\\"=\\\"!==Wt[0]&&\\\"-\\\"!==Wt[0]&&(f=((t,e)=>setTimeout(console.warn,3e3,`💀🔒 - proxy.${t}() in proxy.${e}()`))(l,Wt));const d=Nt++,h=[];Dt.has(u.at(-1)||h)&&Dt.delete(h=u.pop());const y=n(i?u.map(i):u);let w=e(2*Rt);return a([t,2,l,d,w,y,r],{transfer:h}),c(w,0).value.then((()=>{p&&clearTimeout(f);const n=w[1];if(!n)return;const r=Mt*n;return w=e(r+r%Rt),a([t,1,d,w]),c(w,0).value.then((()=>{const t=new Uint16Array(w.buffer),e=o?t.subarray(0,n):t.slice(0,n);return s(Ct.decode(e))}))}))},qt=(t,e)=>new Proxy(e,{get:(e,n)=>{let r;return\\\"then\\\"!==n&&(r=e.get(n),r||(r=Jt(t,n),e.set(n,r))),r},set:(t,e,n)=>\\\"then\\\"!==e&&!!t.set(e,n)}),{wait:zt,waitAsync:Ut}=ut;var Lt=({parse:t,stringify:e,transform:n,interrupt:r}=JSON)=>{const s=((t,e)=>async(n,r,[s,o,a,i,c])=>{c&&(Wt=s);try{const s=await n(...i);if(void 0!==s){const n=t(e?e(s):s);r.set(o,n),a[1]=n.length}}finally{c&&(Wt=\\\"\\\"),a[0]=1,Ft(a,0)}})(e,n),o=ft(),a=new Map,i=new Map;let c=\\\"\\\",l=zt;if(zt&&r){const{handler:t,timeout:e=42}=r;l=(n,r,s)=>{for(;\\\"timed-out\\\"===(s=zt(n,r,0,e));)t();return s}}return St(\\\"message\\\",(e=>{if(mt(e,c)){const[r,u,...p]=e.data;switch(u){case 0:{const e=!!zt;c=r,o.resolve({polyfill:Tt,sync:e,transfer:It,proxy:qt([c,t=>new xt(new kt(t)),Pt,e,t,Tt,$t,n,e?(...t)=>({value:{then:e=>e(l(...t))}}):Ut],a)});break}case 2:a.size?Ht(s,i,a,p):setTimeout(Ht,0,s,i,a,p);break;case 1:((t,[e,n])=>{const r=t.get(e);t.delete(e);for(let t=new Uint16Array(n.buffer),e=0,{length:s}=r;e<s;e++)t[e]=r.charCodeAt(e);Ft(n,0)})(i,p)}}})),o.promise},Kt=Object.fromEntries([f,\\\"bigint\\\",\\\"boolean\\\",d,h,y,w,\\\"string\\\",g,m].map(((t,e)=>[t,e])));const Gt=\\\"destruct\\\",{[$]:Yt}=Reflect,Xt=new Map(Yt(Symbol).filter((t=>typeof Symbol[t]===g)).map((t=>[Symbol[t],t]))),Zt=t=>Xt.get(t)||`.${Symbol.keyFor(t)||\\\"\\\"}`,Vt=\\\"960fd6fe-ad03-40d1-a314-e58d84bce14f\\\",Qt=\\\"=\\\"+Vt,te=\\\"-\\\"+Vt,{[_]:ee}=Reflect;const ne={object(...t){return this.string(function(t){for(var e=t[0],n=1,r=arguments.length;n<r;n++)e+=arguments[n]+t[n];return e}(...t))},string(t){for(const e of t.split(/[\\\\r\\\\n]+/))if(e.trim().length){/^(\\\\s+)/.test(e)&&(t=t.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return t}},re=new WeakMap,se=t=>{const e=t||console,n={buffered:ae,stderr:(e.stderr||console.error).bind(e),stdout:(e.stdout||console.log).bind(e)};return{stderr:(...t)=>n.stderr(...t),stdout:(...t)=>n.stdout(...t),async get(t){const e=await t;return re.set(e,n),e}}},oe=new TextDecoder,ae=(t,e=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===e?t(oe.decode(new Uint8Array(n.splice(0)))):n.push(s);else t(r)}},ie=(t,...e)=>ne[typeof t](t,...e),{isArray:ce}=Array,{assign:le,create:ue,defineProperties:pe,defineProperty:fe,entries:de}=Object,{all:he,resolve:ye}=new Proxy(Promise,{get:(t,e)=>t[e].bind(t)}),we=(t,e=location.href)=>new URL(t,e.replace(/^blob:/,\\\"\\\")).href,ge=(t,e,n,r=!1,s=CustomEvent)=>{t.dispatchEvent(new s(`${e}:${n}`,{bubbles:!0,detail:{worker:r}}))},me=t=>Function(`'use strict';return (${t})`)(),_e=t=>t.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Ae=Symbol.for(\\\"polyscript.js_modules\\\"),be=new Map;fe(globalThis,Ae,{value:be}),new Proxy(be,{get:(t,e)=>t.get(e),has:(t,e)=>t.has(e),ownKeys:t=>[...t.keys()]});const Ee=(t,e)=>!e.startsWith(\\\"_\\\"),ve=(t,e)=>new Proxy(t,{has:Ee,get:(t,n)=>t[e][n]}),je=(t,e)=>import(t).then((t=>{be.set(e,{...t})})),xe=t=>new Promise(((e,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${t}\\\"]`)?e():document.head.append(le(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:t,onload:e,onerror:n}))})),ke=t=>/\\\\.css$/i.test(new URL(t).pathname),Se=(t,e)=>t.has(e),$e=t=>[...t.keys()];var Be=(t,e,n,r)=>{const s=globalThis[Ae];if(n)for(let[t,e]of de(n)){let n=s.get(e);n&&!ce(n)||(s.set(e,n||(n=[])),n.push(t))}return((t,e,n,r)=>new Proxy(t,{has:Se,ownKeys:$e,get:(t,s)=>{let o=t.get(s);if(ce(o)){let a=o;o=null;for(let t of a)t=we(t,r),ke(t)?n.importCSS(t):(n.importJS(t,s),o=e[Ae].get(s));t.set(s,o)}return o}}))(s,t,e,r)};const Pe=new Map,Te=t=>Pe.get(t),Oe=(t,e)=>{try{return Function(\\\"require\\\",e)(Te)}catch(e){re.get(t).stderr(e)}};var Re={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:t=>se().get(t),registerJSModule(t,e,n){Pe.set(e,n)},run:Oe,runAsync:Oe,runEvent:async(t,e,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${e}(e)`)(Te,n)}catch(e){re.get(t).stderr(e)}},transform:(t,e)=>e,writeFile(){}};const Me=Object.getOwnPropertyDescriptors(Response.prototype),Fe=t=>\\\"function\\\"==typeof t,Ce={get:(t,e)=>Me.hasOwnProperty(e)?((t,e,{get:n,value:r})=>n||!Fe(r)?t.then((t=>t[e])):(...n)=>t.then((t=>t[e](...n))))(t,e,Me[e]):((t,e)=>Fe(e)?e.bind(t):e)(t,t[e])};var De=(t,...e)=>new Proxy(fetch(t,...e),Ce);Promise.withResolvers||(Promise.withResolvers=function(){var t,e,n=new this((function(n,r){t=n,e=r}));return{resolve:t,reject:e,promise:n}});const Ie=!globalThis.window,We=({FS:t,PATH:e,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=e.dirname(o);return t.mkdirTree?t.mkdirTree(a):Ne(t,a),t.writeFile(o,new Uint8Array(s),{canOwn:!0})},He=t=>{const e=t.split(\\\"/\\\");return e.pop(),e.join(\\\"/\\\")},Ne=(t,e)=>{const n=[];for(const r of e.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&t.mkdir(n.join(\\\"/\\\")))},Je=(t,e)=>{const n=[];for(const t of e.split(\\\"/\\\"))switch(t){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(t)}return[t.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},qe=t=>{const e=t.map((t=>t.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((t=>\\\"\\\"!==t&&\\\".\\\"!==t)).join(\\\"/\\\");return t[0].startsWith(\\\"/\\\")?`/${e}`:e},ze=(t,e)=>De(we(t,e)).arrayBuffer(),Ue=(t,e,n,r)=>he((t=>{for(const{files:e,to_file:n,from:r=\\\"\\\"}of t){if(void 0!==e&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===e&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return t.flatMap((({from:t=\\\"\\\",to_folder:e=\\\".\\\",to_file:n,files:r})=>{if(ce(r))return r.map((n=>({url:qe([t,n]),path:qe([e,n])})));const s=n||t.slice(1+t.lastIndexOf(\\\"/\\\"));return[{url:t,path:qe([e,s])}]}))})(n).map((({url:n,path:s})=>ze(n,r).then((n=>t.writeFile(e,s,n)))))),Le=(t,e)=>e.endsWith(\\\"/\\\")?`${e}${t.split(\\\"/\\\").pop()}`:e,Ke=(t,e)=>t.replace(/\\\\{.+?\\\\}/g,(t=>{if(!e.has(t))throw new SyntaxError(`Invalid template: ${t}`);return e.get(t)})),Ge=(t,e,n,r)=>he((t=>{const e=new Map,n=new Set,r=[];for(const[s,o]of de(t))if(/^\\\\{.+\\\\}$/.test(s)){if(e.has(s))throw new SyntaxError(`Duplicated template: ${s}`);e.set(s,Ke(o,e))}else{const t=Ke(s,e),a=Le(t,Ke(o||\\\"./\\\",e));if(n.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:t,path:a})}return r})(n).map((({url:n,path:s})=>ze(n,r).then((r=>t.writeFile(e,s,r,n)))))),Ye=({main:t,worker:e},n)=>{const r=[];if(e&&Ie)for(let[t,s]of de(e))t=we(t,n),r.push(je(t,s));if(t&&!Ie)for(let[e,s]of de(t))e=we(e,n),ke(e)?xe(e):r.push(je(e,s));return he(r)},{assign:Xe}=Object,Ze=\\\"entries\\\",Ve=\\\"readonly\\\",Qe=\\\"readwrite\\\",tn={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},en=({target:{result:t}})=>t;class nn extends EventTarget{#t;#e;#n;async#r(t,e){const n=(await this.#t).transaction(Ze,e,this.#e);return new Promise(((e,r)=>Xe(t(n.objectStore(Ze)),{onsuccess:e,onerror:r})))}constructor(t,{durability:e=tn.durability,prefix:n=tn.prefix}=tn){super(),this.#n=n,this.#e={durability:e},this.#t=new Promise(((e,n)=>{Xe(indexedDB.open(`${this.#n}/${t}`),{onupgradeneeded({target:{result:t,transaction:n}}){t.objectStoreNames.length||t.createObjectStore(Ze),n.oncomplete=()=>e(t)},onsuccess(t){e(en(t))},onerror(t){n(t),this.dispatchEvent(t)}})})).then((t=>{const e=this.dispatchEvent.bind(this);for(const n in t)n.startsWith(\\\"on\\\")&&(t[n]=e);return t}))}dispatchEvent(t){const{type:e,message:n,isTrusted:r}=t;return super.dispatchEvent(r?Xe(new Event(e),{message:n}):t)}async close(){(await this.#t).close()}get size(){return this.#r((t=>t.count()),Ve).then(en)}async clear(){await this.#r((t=>t.clear()),Qe)}async delete(t){await this.#r((e=>e.delete(t)),Qe)}async entries(){const t=await this.keys();return Promise.all(t.map((t=>this.get(t).then((e=>[t,e])))))}async forEach(t,e=this){for(const[n,r]of await this.entries())await t.call(e,r,n,this)}async get(t){return await this.#r((e=>e.get(t)),Ve).then(en)}async has(t){return void 0!==await this.#r((e=>e.getKey(t)),Ve).then(en)}async keys(){return await this.#r((t=>t.getAllKeys()),Ve).then(en)}async set(t,e){return await this.#r((n=>n.put(e,t)),Qe),this}async values(){const t=await this.keys();return Promise.all(t.map((t=>this.get(t))))}get[Symbol.toStringTag](){return this.#n}}class rn extends Map{#s;#o;constructor(...t){super(),this.#s=new nn(...t),this.#o=this.#s.entries().then((t=>{for(const[e,n]of t)super.set(e,n)}))}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(t){return this.#o=this.#o.then((()=>this.#s.delete(t))),super.delete(t)}set(t,e){return this.#o=this.#o.then((()=>this.#s.set(t,e))),super.set(t,e)}}const sn=new WeakMap,on=(t,e,n)=>{\\\"polyscript\\\"===e&&(n.lazy_py_modules=async(...e)=>(await sn.get(t)(e),e.map((e=>t.pyimport(e)))),n.storage=async t=>{const e=new rn(t);return await e.sync(),e},n.JSON=p),t.registerJsModule(e,n)},an=(t,e)=>{if(t.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(e))return RegExp.$1;throw new Error(`Unsupported archive ${e}`)}return\\\"\\\"},cn=(t,e,...n)=>{try{return t.runPython(ie(e),...n)}catch(e){re.get(t).stderr(e)}},ln=async(t,e,...n)=>{try{return await t.runPythonAsync(ie(e),...n)}catch(e){re.get(t).stderr(e)}},un=async(t,e,n)=>{const[r,...s]=e.split(\\\".\\\");let o,a=t.globals.get(r);for(const t of s)[o,a]=[a,a[t]];try{await a.call(o,n)}catch(e){re.get(t).stderr(e)}};var pn=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const fn=async t=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(t),dn=(t,e)=>{try{t.mkdir(e)}catch(t){}};var hn={type:\\\"micropython\\\",module:(t=\\\"1.24.0-preview-114\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${t}/micropython.mjs`,async engine({loadMicroPython:t},e,n,r){const{stderr:s,stdout:o,get:a}=se({stderr:ae(console.error),stdout:ae(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\");const i=await a(t({linebuffer:!1,stderr:s,stdout:o,url:n})),c=yn.bind(this,i,r);return sn.set(i,c),e.files&&await Ge(this,i,e.files,r),e.fetch&&await Ue(this,i,e.fetch,r),e.js_modules&&await Ye(e.js_modules,r),this.writeFile(i,\\\"./mip.py\\\",pn),e.packages&&await c(e.packages),i},registerJSModule:on,run:cn,runAsync:ln,runEvent:un,transform:(t,e)=>t.PyProxy.toJs(e),writeFile:(t,e,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=t,i={FS:s,PATH:o,PATH_FS:a},c=an(e,r);if(c){const r=e.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const t=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DrwYHuF9.js\\\").then((async({BlobReader:e,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new e(t));for(const t of await i.getEntries()){const{directory:e,filename:a}=t,i=r+a;if(e)dn(s,i);else{dn(s,o.dirname(i));const e=await t.getData(new n);s.writeFile(i,e,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const e=\\\"./_.tar.gz\\\";return We(i,e,n),void t.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${e}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${e}\\\")\\\\n                    `)}}}return We(i,e,n)}};async function yn(t,e,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=we(s,e),r=await De(n).arrayBuffer();await this.writeFile(t,\\\"./*\\\",r,n)}else r||(r=t.pyimport(\\\"mip\\\")),r.install(s)}const wn=new FinalizationRegistry((([t,e,n])=>{n&&console.debug(`%c${String(e)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),t(e)})),gn=Object.create(null),mn=(t,e,{debug:n,handler:r,return:s,token:o=t}=gn)=>{const a=s||new Proxy(t,r||gn),i=[a,[e,t,!!n]];return!1!==o&&i.push(o),wn.register(...i),a},_n={dict_converter:Object.fromEntries};let An=!1;const bn=t=>(...e)=>{try{return An=!0,t(...e)}finally{An=!1}};let En=!1;const vn=()=>{if(En)return;En=!0;const t=new WeakMap,e=t=>t.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){An=!1;let o=t.get(s)?.deref();if(!o)try{o=mn(s.copy(),e),t.set(s,new WeakRef(o))}catch(t){console.error(t)}o&&(n[r]=o),An=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(t,e){return An&&n(e),s(this,t,e)}},call:{value(t,...e){return An&&n(e),s(this,t,e)}}})};var jn={type:\\\"pyodide\\\",module:(t=\\\"0.26.2\\\")=>`https://cdn.jsdelivr.net/pyodide/v${t}/full/pyodide.mjs`,async engine({loadPyodide:t},e,n,r){Ie||\\\"auto\\\"!==e.experimental_create_proxy||vn();const{stderr:s,stdout:o,get:a}=se(),i=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=await a(t({stderr:s,stdout:o,indexURL:i})),l=kn.bind(c);return sn.set(c,l),e.files&&await Ge(this,c,e.files,r),e.fetch&&await Ue(this,c,e.fetch,r),e.js_modules&&await Ye(e.js_modules,r),e.packages&&await l(e.packages),c},registerJSModule:on,run:bn(cn),runAsync:bn(ln),runEvent:bn(un),transform:(t,e)=>xn.call(t,e),writeFile:(t,e,n,r)=>{const s=an(e,r);if(s)return t.unpackArchive(n,s,{extractDir:e.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=t;return We({FS:o,PATH:a,PATH_FS:i},e,n)}};function xn(t){const{ffi:{PyProxy:e}}=this;if(t&&\\\"object\\\"==typeof t){if(t instanceof e)return t.toJs(_n);if(t instanceof Map)return new Map([...t.entries()]);if(ce(t))return t.map(xn,this)}return t}async function kn(t){await this.loadPackage(\\\"micropip\\\");const e=this.pyimport(\\\"micropip\\\");await e.install(t,{keep_going:!0}),e.destroy()}const Sn=\\\"ruby-wasm-wasi\\\",$n=Sn.replace(/\\\\W+/g,\\\"_\\\");var Bn={type:Sn,experimental:!0,module:(t=\\\"2.6.2\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${t}/dist/browser/+esm`,async engine({DefaultRubyVM:t},e,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await De(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await t(o);return e.files&&await Ge(this,a,e.files,r),e.fetch&&await Ue(this,a,e.fetch,r),e.js_modules&&await Ye(e.js_modules,r),a},registerJSModule(t,e,n){e=e.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${$n}_${e}`;globalThis[r]=n,this.run(t,`require \\\"js\\\";$${e}=JS.global[:${r}]`),delete globalThis[r]},run:(t,e,...n)=>t.eval(ie(e),...n),runAsync:(t,e,...n)=>t.evalAsync(ie(e),...n),async runEvent(t,e,n){if(/^xworker\\\\.(on\\\\w+)$/.test(e)){const{$1:e}=RegExp,r=`__module_${$n}_event`;globalThis[r]=n,this.run(t,`require \\\"js\\\";$xworker.call(\\\"${e}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(t,`method(:${e})`);await r.call(e,t.wrap(n))}},transform:(t,e)=>e,writeFile:()=>{throw new Error(`writeFile is not supported in ${Sn}`)}};var Pn={type:\\\"wasmoon\\\",module:(t=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${t}/+esm`,async engine({LuaFactory:t,LuaLibraries:e},n,r,s){const{stderr:o,stdout:a,get:i}=se(),c=await i((new t).createEngine());return c.global.getTable(e.Base,(t=>{c.global.setField(t,\\\"print\\\",a),c.global.setField(t,\\\"printErr\\\",o)})),n.files&&await Ge(this,c,n.files,s),n.fetch&&await Ue(this,c,n.fetch,s),n.js_modules&&await Ye(n.js_modules,s),c},registerJSModule:(t,e,n)=>{t.global.set(e,n)},run:(t,e,...n)=>{try{return t.doStringSync(ie(e),...n)}catch(e){re.get(t).stderr(e)}},runAsync:async(t,e,...n)=>{try{return await t.doString(ie(e),...n)}catch(e){re.get(t).stderr(e)}},runEvent:async(t,e,n)=>{const[r,...s]=e.split(\\\".\\\");let o,a=t.global.get(r);for(const t of s)[o,a]=[a,a[t]];try{await a.call(o,n)}catch(e){re.get(t).stderr(e)}},transform:(t,e)=>e,writeFile:({cmodule:{module:{FS:t}}},e,n)=>((t,e,n)=>(Ne(t,He(e)),e=Je(t,e),t.writeFile(e,new Uint8Array(n),{canOwn:!0})))(t,e,n)};const Tn=new WeakMap,On=async(t,e)=>{const{shelter:n,destroy:r,io:s}=Tn.get(t),{output:o,result:a}=await n.captureR(ie(e));for(const{type:t,data:e}of o)s[t](e);return mn(a,r,{token:!1})};var Rn={type:\\\"webr\\\",experimental:!0,module:(t=\\\"0.4.1\\\")=>`https://cdn.jsdelivr.net/npm/webr@${t}/dist/webr.mjs`,async engine(t,e,n,r){const{get:s}=se(),o=new t.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return Tn.set(o,{module:t,shelter:a,destroy:a.destroy.bind(a),io:re.get(o)}),e.files&&await Ge(this,o,e.files,r),e.fetch&&await Ue(this,o,e.fetch,r),e.js_modules&&await Ye(e.js_modules,r),o},registerJSModule(t,e){console.warn(`Experimental interpreter: module ${e} is not supported (yet)`)},run:On,runAsync:On,async runEvent(t,e,n){await t.evalRVoid(`${e}(event)`,{env:{event:{type:[n.type]}}})},transform:(t,e)=>(console.log(\\\"transforming\\\",e),e),writeFile:()=>{}};const Mn=new Map,Fn=new Map,Cn=new Proxy(new Map,{get(t,e){if(!t.has(e)){const[n,...r]=e.split(\\\"@\\\"),s=Mn.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|https?:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);t.set(e,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=t.get(e);return(t,o)=>r.then((r=>(Fn.set(e,t),s(r,t,n,o))))}}),Dn=t=>{for(const e of[].concat(t.type))Mn.set(e,t)};for(const t of[Re,hn,jn,Bn,Pn,Rn])Dn(t);const{parse:In}=JSON,Wn=(t,e,n={})=>{const[r,s]=((t,e=\\\"./config.txt\\\")=>{let n=typeof t;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(t)?n=RegExp.$1:t=e,[we(t),n]})(t,e);return\\\"json\\\"===s?n=De(r).json():\\\"toml\\\"===s?n=De(r).text().then(fn):\\\"string\\\"===s?n=Hn(t):\\\"object\\\"===s&&t?n=t:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=Hn(n)),[n,t=r]},Hn=t=>{try{return In(t)}catch(e){return fn(t)}},Nn=\\\"BeforeRun\\\",Jn=\\\"AfterRun\\\",qn=[`code${Nn}`,`code${Nn}Async`,`code${Jn}`,`code${Jn}Async`],zn=[\\\"onWorker\\\",\\\"onReady\\\",`on${Nn}`,`on${Nn}Async`,`on${Jn}`,`on${Jn}Async`];function Un(t,e){const{run:n,runAsync:r}=Mn.get(this.type);return{...t,run:n.bind(this,e),runAsync:r.bind(this,e)}}const Ln=(t,e,n,r,s,o)=>{if(s||o){const a=Un.bind(t,e),i=r?\\\"runAsync\\\":\\\"run\\\",c=t[i];t[i]=r?async function(t,e,...r){s&&await s.call(this,a(t),n);const i=await c.call(this,t,e,...r);return o&&await o.call(this,a(t),n),i}:function(t,e,...r){s&&s.call(this,a(t),n);const i=c.call(this,t,e,...r);return o&&o.call(this,a(t),n),i}}};let Kn,Gn,Yn;const Xn=(t,e)=>{addEventListener(t,e||(async e=>{try{await Kn,Gn(`xworker.on${t}`,e)}catch(t){postMessage(t)}}),!!e&&{once:!0})},{parse:Zn,stringify:Vn}=p,{proxy:Qn,sync:tr,polyfill:er,window:nr,isWindowProxy:rr}=await(async t=>{const e=await Lt(t),n=t?.transform||(t=>t),{[Qt]:r}=e.proxy,s=new Map,o=(t,e)=>{let n=s.get(t)?.deref();return n||s.set(t,new WeakRef(n=e(t))),n},a=([t,e])=>{switch(t){case Kt[w]:return null==e?globalThis:typeof e===y?o(e,p.object):e;case Kt[f]:return typeof e===y?o(e,p.array):e;case Kt[d]:return typeof e===y?o(e,p.function):tt(parseInt(e));case Kt[g]:return(t=>{if(t.startsWith(\\\".\\\"))return Symbol.for(t.slice(1));for(const[e,n]of Xt)if(n===t)return e})(e);default:return e}},i=t=>{let[e,r]=m(t);switch(e){case w:if(r==globalThis||null==r)r=null;else if(typeof r===w&&!(r instanceof lt)){r=n(r);for(const t in r)r[t]=i(r[t])}return[Kt[w],r];case f:return[Kt[f],typeof r===y?r:n(r).map(i)];case d:return[Kt[d],typeof r===d?String(et(n(r))):r];case g:return[Kt[g],Zt(t)];default:return[Kt[e],r]}},c=(...t)=>a(r(...t)),l={[b]:(t,e,n)=>c(b,t,i(e),i(n)),[E]:(t,e)=>c(E,t,i(e)),[v]:(t,e)=>c(v,t,i(e)),[x]:t=>c(x,t),[j]:(t,e)=>{const n=c(j,t,i(e));if(n){const{get:t,set:e,value:r}=n;t&&(n.get=a(t)),e&&(n.set=a(e)),r&&(n.value=a(r))}return n},[k]:(t,e)=>c(k,t,i(e)),[S]:t=>c(S,t),[$]:t=>c($,t).map(a),[B]:t=>c(B,t),[P]:(t,e,n)=>c(P,t,i(e),i(n)),[T]:(t,e)=>c(T,t,i(e)),[Gt](t){s.delete(t),r(Gt,t)}},u={object:l,array:l,function:{...l,[_]:(t,...e)=>c(_,t,...e.map(i)),[A]:(t,...e)=>c(A,t,...e.map(i))}},{proxy:p,isProxy:h,pair:m}=X(u),O=p.object(null);return e.proxy[te]=async(t,e,...n)=>{const r=parseInt(e);switch(t){case _:{const[t,e]=n;return i(await ee(tt(r),a(t),e.map(a)))}case Gt:(t=>{const[e,n]=typeof t===y?[Q,V]:[V,Q],r=e.has(t);r&&(n.delete(e.get(t)),e.delete(t))})(r)}},{...e,window:O,isWindowProxy:h}})({parse:Zn,stringify:Vn,transform:t=>Yn?Yn(t):t}),sr={polyfill:er,sync:Qn,window:tr?nr:null,isWindowProxy:rr,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Xn(\\\"message\\\",(({data:{options:t,config:e,configURL:n,code:r,hooks:s}})=>{Kn=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:u,async:p}=t,f=((t,e=\\\"\\\")=>`${t}@${e}`.replace(/@$/,\\\"\\\"))(i,l),d=await((t,e,n,r={})=>(e&&([r,e]=Wn(e,n,r)),ye(r).then((n=>Cn[t](n,e)))))(f,e,n,u),{js_modules:h}=Fn.get(f),y=h?.main,w=ue(Mn.get(i)),g=((t,e,n,r)=>({type:e,config:n,interpreter:r,io:re.get(r),run:(e,...n)=>t.run(r,e,...n),runAsync:(e,...n)=>t.runAsync(r,e,...n),runEvent:(...e)=>t.runEvent(r,...e)}))(w,c||i,u||{},d);let m=\\\"run\\\";if(p&&(m+=\\\"Async\\\"),s){let t,e,n=\\\"\\\",r=\\\"\\\";for(const t of qn){const e=s[t];if(e){const s=t.endsWith(\\\"Async\\\");(s&&p||!s&&!p)&&(t.startsWith(\\\"codeBefore\\\")?n=e:r=e)}}(n||r)&&((t,e,n,r)=>{const s=t[e].bind(t);t[e]=\\\"run\\\"===e?(t,e,...o)=>{n&&s(t,n,...o);const a=s(t,_e(e),...o);return r&&s(t,r,...o),a}:async(t,e,...o)=>{n&&await s(t,n,...o);const a=await s(t,_e(e),...o);return r&&await s(t,r,...o),a}})(w,m,n,r);for(const n of zn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&p||!s&&!p){const s=me(r);n.startsWith(\\\"onBefore\\\")?t=s:e=s}}}Ln(w,g,sr,p,t,e)}let _,A,b,E=null,v=\\\"\\\";tr&&(({CustomEvent:_,document:A}=nr),E=o&&A.getElementById(o)||null,b=t=>ge(E,c||i,t,!0,_));const j=Be(nr,Qn,y,e);if(((t,e,n,r)=>{if(\\\"pyodide\\\"===t)return;const s=\\\"polyscript.js_modules\\\";for(const t of Reflect.ownKeys(r))e.registerJSModule(n,`${s}.${t}`,ve(r,t));e.registerJSModule(n,s,r)})(i,w,d,j),w.registerJSModule(d,\\\"polyscript\\\",{xworker:sr,currentScript:E,config:g.config,js_modules:j,get target(){return!v&&E&&(\\\"SCRIPT\\\"===a?E.after(le(A.createElement(`script-${c||i}`),{id:v=`${o}-target`})):(v=o,E.replaceChildren(),E.style.display=\\\"block\\\")),v}}),Gn=w.runEvent.bind(w,d),Yn=w.transform.bind(w,d),E&&b(\\\"ready\\\"),s?.onReady&&me(s?.onReady).call(w,Un.call(w,g,d),sr),await w[m](d,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(w.type)){const t=\\\"polyscript\\\",e=`__${t}_workers__`,n=\\\"__export__\\\";d.runPython([`import js as ${e}`,`${e}.${e} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${e}`].join(\\\"\\\\n\\\"));const r=[...globalThis[e]];delete globalThis[e],r.length&&d.runPython([`from ${t} import xworker as ${e}`,...r.map((t=>`${e}.sync.${t} = ${t}`)),`del ${e}`].join(\\\"\\\\n\\\"))}return E&&b(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),d}catch(t){postMessage(t)}})(),Xn(\\\"error\\\"),Xn(\\\"message\\\"),Xn(\\\"messageerror\\\")}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n/* c8 ignore stop */\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","import * as JSON from '@ungap/structured-clone/json';\nimport IDBMapSync from '@webreflection/idb-map/sync';\nimport { dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { getFormat, loader, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nexport default {\n    type,\n    module: (version = '1.24.0-preview-114') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) await py_imports(config.packages);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { getFormat, loader, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { isArray } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n/* c8 ignore stop */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '0.26.2') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        const { stderr, stdout, get } = stdio();\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, indexURL }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        loader.set(interpreter, py_imports);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        if (config.packages) await py_imports(config.packages);\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages) {\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    await micropip.install(packages, { keep_going: true });\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.6.2') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.1') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(rest) \n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    const cfg = node.getAttribute('config') || config || {};\n                    if (!v) {\n                        const [o] = resolveConfig(cfg, configURL);\n                        const details = await o;\n                        v = details.version || details.interpreter;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","workers","Map","map","name","has","set","Promise","withResolvers","ignore","Set","workersHandler","freeze","_","promise","w","sync","env","self","globalThis","deserialize","serialized","$","as","out","index","unpair","type","arr","object","key","Date","source","flags","RegExp","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","uid","ids","values","id","hold","ArrayBuffer","Atomics","$Atomics","isArray","Array","create","getPrototypeOf","TypedArray","Int32Array","views","extend","Class","SharedArrayBuffer","constructor","rest","super","this","ignoreList","WeakSet","ignorePatch","isChannel","event","channel","data","yes","at","stopImmediatePropagation","preventDefault","isObject","transferred","WeakMap","transferViews","transfer","visited","waitAsyncPatch","resolve","Worker","onmessage","postMessage","actionWait","view","currentTarget","origin","lastEventId","ports","dispatchEvent","MessageEvent","dispatch","BigInt64Array","polyfill","asModule","url","waitAsync","CHANNEL","crypto","randomUUID","addListener","addEventListener","register","serviceWorker","s","sw","done","c","join","delete","getRegistration","ready","controller","installing","waiting","active","state","location","reload","once","notify","worker","getData","known","waitAsyncPoly","URL","href","navigator","ACTION","_view","_id","_index","length","actionNotify","size","postData","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","Uint16Array","decoder","TextDecoder","buffers","seppuku","invoke","i32View","isSync","transform","deadlock","timer","setTimeout","console","warn","pop","sb","clearTimeout","bytes","ui16a","buffer","sub","subarray","decode","coincident$1","waitLength","async","callback","results","actionLength","$Worker","proxy","details","cb","createProxy","Error","charCodeAt","actionFill","numeric","fromEntries","OWN_KEYS","DESTRUCT","ownKeys","Reflect","Symbol","filter","toSymbol","keyFor","MAIN","WORKER","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","return","token","target","EventTarget","eventsHandler","defineProperty","listener","concat","re","place","q","f","exports","coincident","toEntry","__worker__","proxies","onGC","ref","fromEntry","numericTYPE","fn","deref","Event","methods","method","handleEvent","WeakRef","startsWith","for","symbol","fromSymbol","TRAP","a","b","had","drop","descriptor","asEntry","io","stdio","context","localIO","buffered","stderr","error","stdout","log","engine","interpreter","EOL","maybeUI8","Uint8Array","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","reject","dedent","string","t","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","assign","defineProperties","all","absoluteURL","base","nodeInfo","node","tag","tagName","what","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","import","esm","importCSS","onload","onerror","querySelector","head","append","createElement","rel","isCSS","pathname","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","IDBMap","db","transaction","how","onsuccess","objectStore","indexedDB","open","onupgradeneeded","objectStoreNames","createObjectStore","oncomplete","boundDispatch","isTrusted","close","store","count","clear","forEach","getKey","getAllKeys","put","toStringTag","IDBMapSync","queue","loader","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","globals","mip","TextEncoder","encode","toml","text","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","PyProxy","toJs","_module","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","apply","pyodide","loadPyodide","experimental_create_proxy","indexURL","unpackArchive","ffi","loadPackage","micropip","keep_going","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","createObjectURL","service_worker","isHook","Hook","resolver","bootstrap","writable","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handle","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","body","wn","versionValue","configValue","workerName","targetValue","currentScript","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","v","cfg","o","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","$customObserver","dontBother","indexOf","remove","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,31,32,43]}