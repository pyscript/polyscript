{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/@webreflection/utils/src/with-resolvers.js","../esm/workers.js","../node_modules/coincident/src/proxy/traps.js","../node_modules/coincident/src/utils/encoder.js","../node_modules/coincident/src/json/encoder.js","../node_modules/proxy-target/esm/types.js","../node_modules/coincident/src/utils/shared.js","../node_modules/coincident/src/window/types.js","../node_modules/coincident/src/proxy/encoder.js","../node_modules/coincident/src/window/constants.js","../node_modules/coincident/src/transfer.js","../node_modules/coincident/src/utils.js","../node_modules/coincident/src/main.js","../node_modules/next-resolver/index.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/window/symbol.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/_nativefs.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","//@ts-check\r\n\r\n/**\r\n * @template T\r\n * @typedef {{promise: Promise<T>, resolve: (value: T) => void, reject: (reason?: any) => void}} Resolvers\r\n */\r\n\r\n//@ts-ignore\r\nconst withResolvers = Promise.withResolvers;\r\n\r\n/**\r\n * @template T\r\n * @type {() => Resolvers<T>}\r\n */\r\nexport default withResolvers.bind(Promise);\r\n","import withResolvers from '@webreflection/utils/with-resolvers';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","export const DESTROY = 'destroy';\n","export default encode => ({ byteOffset = 0 } = {}) => (value, buffer) => {\r\n  const string = encode(value);\r\n  const length = string.length;\r\n  const size = length * 2 + byteOffset;\r\n  if (buffer.byteLength < size) buffer.grow(size);\r\n  const ui16a = new Uint16Array(buffer, byteOffset, length);\r\n  for (let i = 0; i < length; i++)\r\n    ui16a[i] = string.charCodeAt(i);\r\n  return length;\r\n};\r\n","import createEncoder from '../utils/encoder.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => stringify(value);\r\n\r\nexport const encoder = createEncoder(stringify);\r\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","const { getPrototypeOf } = Object;\r\nexport const toConstructorName = constructor => {\r\n  while (!(constructor.name in globalThis))\r\n    constructor = getPrototypeOf(constructor);\r\n  return constructor.name;\r\n};\r\n\r\nexport const toSymbolName = value => {\r\n  const name = String(value).slice(7, -1);\r\n  return name.startsWith('Symbol.') || Symbol.keyFor(value) ? name : '';\r\n};\r\n\r\nexport const toSymbolValue = name => name.startsWith('Symbol.') ?\r\n  Symbol[name.slice(name.indexOf('.') + 1)] :\r\n  Symbol.for(name)\r\n;\r\n\r\nexport const toType = value => {\r\n  const type = typeof value;\r\n  switch (type) {\r\n    case 'function':\r\n    case 'undefined':\r\n      return '';\r\n    case 'object':\r\n      return value === null ? 'null' : 'object';\r\n    default:\r\n      return type;\r\n  }\r\n};\r\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default {\n  [ARRAY]: 0,\n  [BIGINT]: 1,\n  [BOOLEAN]: 2,\n  [FUNCTION]: 3,\n  [NULL]: 4,\n  [NUMBER]: 5,\n  [OBJECT]: 6,\n  [STRING]: 7,\n  [SYMBOL]: 8,\n  [UNDEFINED]: 9,\n  view: 10,\n};\n","import { BIGINT } from 'js-proxy/types';\r\n\r\nimport { toConstructorName } from '../utils/shared.js';\r\nimport createEncoder from '../utils/encoder.js';\r\nimport numeric from '../window/types.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => {\r\n  switch (value[0]) {\r\n    case numeric.view: {\r\n      const { constructor, buffer } = value[1];\r\n      value[1] = [toConstructorName(constructor), [...new Uint8Array(buffer)]];\r\n      break;\r\n    }\r\n    case numeric[BIGINT]: {\r\n      value[1] = value[1].toString();\r\n      break;\r\n    }\r\n  }\r\n  return stringify(value);\r\n};\r\n\r\nexport const encoder = createEncoder(encode);\r\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = '940beb37';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","//@ts-check\r\n\r\n/** @type {ArrayBuffer[]} */\r\nconst nothing = [];\r\n\r\n/** @type {WeakSet<ArrayBuffer[]>} */\r\nconst buffers = new WeakSet;\r\n\r\n/**\r\n * @param {boolean} check\r\n * @param {any[]} args\r\n * @returns\r\n */\r\nexport const get = (check, args) => {\r\n  let transfer = nothing;\r\n  if (check && buffers.has(args.at(-1) || nothing)) {\r\n    transfer = args.pop();\r\n    buffers.delete(transfer);\r\n  }\r\n  return transfer;\r\n};\r\n\r\n/**\r\n * @param  {...ArrayBuffer} args\r\n * @returns\r\n */\r\nexport const set = (...args) => (buffers.add(args), args);\r\n","const {\r\n  assign,\r\n  create,\r\n} = Object;\r\n\r\n/* c8 ignore start */\r\nlet ID = 'coincident-', native = true;\r\ntry {\r\n  new SharedArrayBuffer(4, { maxByteLength: 8 });\r\n  ID += crypto.randomUUID();\r\n}\r\ncatch (_) {\r\n  native = false;\r\n  ID += Math.random().toString(36).substring(2);\r\n}\r\n/* c8 ignore end */\r\n\r\nconst byteOffset = 2 * Int32Array.BYTES_PER_ELEMENT;\r\nconst minByteLength = 0x7FFF; // throws at 0xFFFF via .apply(...)\r\nconst maxByteLength = 0x1000000;\r\n\r\nconst defaults = {\r\n  // ⚠️ mandatory: first int32 to notify, second one to store the written length\r\n  byteOffset,\r\n  // ⚠️ mandatory: to encode *into* a SharedArrayBuffer\r\n  useUTF16: true,\r\n  // ⚠️ mandatory: to satisfy circular/cyclic data\r\n  circular: true,\r\n};\r\n\r\nconst result = async (data, proxied, transform) => {\r\n  try {\r\n    const result = await proxied[data[1]].apply(null, data[2]);\r\n    data[1] = transform ? transform(result) : result;\r\n    data[2] = null;\r\n  }\r\n  catch (error) { data[2] = error }\r\n};\r\n\r\nconst set = (proxied, name, callback) => {\r\n  const ok = name !== 'then';\r\n  if (ok) proxied[name] = callback;\r\n  return ok;\r\n};\r\n\r\n/** @param {Event} event */\r\nconst stop = event => {\r\n  event.stopImmediatePropagation();\r\n  event.preventDefault();\r\n};\r\n\r\nexport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  maxByteLength,\r\n  minByteLength,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n};\r\n","import nextResolver from 'next-resolver';\r\n\r\nimport { encoder } from './json/encoder.js';\r\n\r\nimport * as transferred from './transfer.js';\r\n\r\nimport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n} from './utils.js';\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n// Note: InstallTrigger is deprecated so once it's gone I do hope\r\n//       this workaround would be gone too!\r\nconst UID = 'InstallTrigger' in globalThis ? ID : '';\r\n\r\nconst { notify } = Atomics;\r\n\r\nconst Number = value => value;\r\n\r\nexport default options => {\r\n  const transform = options?.transform;\r\n  const encode = (options?.encoder || encoder)(defaults);\r\n  const checkTransferred = options?.transfer !== false;\r\n\r\n  class Worker extends globalThis.Worker {\r\n    constructor(url, options) {\r\n      const { port1: channel, port2 } = new MessageChannel;\r\n      const [ next, resolve ] = nextResolver(Number);\r\n      const callbacks = new Map;\r\n      const proxied = create(null);\r\n\r\n      let resolving = '';\r\n\r\n      const deadlock = (promise, name) => {\r\n        if (resolving) {\r\n          const t = setTimeout(\r\n            console.warn,\r\n            3e3,\r\n            `💀🔒 - is proxy.${resolving}() awaiting proxy.${name}() ?`\r\n          );\r\n          promise = promise.then(\r\n            result => {\r\n              clearTimeout(t);\r\n              return result;\r\n            },\r\n            error => {\r\n              clearTimeout(t);\r\n              return Promise.reject(error);\r\n            },\r\n          );\r\n        }\r\n        return promise;\r\n      };\r\n\r\n      super(url, assign({ type: 'module' }, options)).proxy = new Proxy(proxied, {\r\n        get: (_, name) => {\r\n          // the curse of potentially awaiting proxies in the wild\r\n          // requires this ugly guard around `then`\r\n          if (name === 'then') return;\r\n          let cb = callbacks.get(name);\r\n          if (!cb) {\r\n            callbacks.set(name, cb = (...args) => {\r\n              const transfer = transferred.get(checkTransferred, args);\r\n              const [uid, promise] = next();\r\n              channel.postMessage(\r\n                [uid, name, transform ? args.map(transform) : args],\r\n                transfer\r\n              );\r\n              return deadlock(promise, name);\r\n            });\r\n          }\r\n          return cb;\r\n        },\r\n        set\r\n      });\r\n\r\n      super.postMessage(UID, [port2]);\r\n\r\n      // @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n      if (native && UID) {\r\n        super.addEventListener('message', event => {\r\n          const { data } = event;\r\n          if (data?.ID === UID) {\r\n            stop(event);\r\n            channel.onmessage(data);\r\n          }\r\n        });\r\n      }\r\n\r\n      channel.onmessage = async ({ data }) => {\r\n        const i32 = data[0];\r\n        const type = typeof i32;\r\n        if (type === 'number')\r\n          resolve.apply(null, data);\r\n        else {\r\n          resolving = data[1];\r\n          await result(data, proxied, transform);\r\n          resolving = '';\r\n          if (type === 'string')\r\n            channel.postMessage(data);\r\n          else {\r\n            const result = data[2] || data[1];\r\n            // at index 1 we store the written length or 0, if undefined\r\n            i32[1] = result === void 0 ? 0 : encode(result, i32.buffer);\r\n            // at index 0 we set the SharedArrayBuffer as ready\r\n            i32[0] = 1;\r\n            notify(i32, 0);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    Worker,\r\n    native,\r\n    transfer: transferred.set,\r\n  };\r\n};\r\n","//@ts-check\r\n\r\nimport withResolvers from '@webreflection/utils/with-resolvers';\r\n\r\n/**\r\n * @template V\r\n * @callback Resolve\r\n * @param {V?} [value]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback Reject\r\n * @param {any?} [error]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @template V\r\n * @typedef {object} Resolvers\r\n * @prop {Promise<V>} promise\r\n * @prop {Resolve<V>} resolve\r\n * @prop {Reject} reject\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {() => [K, Promise<V>]} Next\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @callback Resolver\r\n * @param {K} uid\r\n * @param {V?} [value]\r\n * @param {any?} [error]\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {[Next<K,V>, Resolver<K,V>]} NextResolver\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @param {(id: number) => K} [as]\r\n * @returns\r\n */\r\nexport default (as = (id => /** @type {K} */(id))) => {\r\n  /** @type {Map<K,Resolvers<V>>} */\r\n  const map = new Map;\r\n  let id = 0;\r\n  return /** @type {NextResolver<K,V>} */([\r\n    /** @type {Next<K,V>} */\r\n    () => {\r\n      let uid;\r\n      do { uid = as(id++) }\r\n      while (map.has(uid));\r\n      const wr = /** @type {Resolvers<V>} */(/** @type {unknown} */(withResolvers()));\r\n      map.set(uid, wr);\r\n      return [uid, wr.promise];\r\n    },\r\n    /** @type {Resolver<K,V>} */\r\n    (uid, value, error) => {\r\n      const wr = map.get(uid);\r\n      map.delete(uid);\r\n      if (error) wr?.reject(error);\r\n      else wr?.resolve(value);\r\n    },\r\n  ]);\r\n};\r\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","import { SYMBOL } from 'js-proxy/types';\n\nconst symbols = new Map;\n\nfor (const s of Reflect.ownKeys(Symbol)) {\n  if (typeof Symbol[s] === SYMBOL) {\n    symbols.set(Symbol[s], s);\n    symbols.set(s, Symbol[s]);\n  }\n}\n\nexport const fromSymbol = value => (\n  symbols.get(value) ||\n  Symbol.for(value.slice(1))\n);\n\nexport const toSymbol = value => (\n  symbols.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\nconst { isView } = ArrayBuffer;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        if (isView(value)) return [numeric.view, value];\n        return [numeric[OBJECT], hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        for (const key in value)\n          value[key] = fromEntry(value[key]);\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n    return [numeric[UNDEFINED], void 0];\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident({ transfer: false });\nexport default (...args) => new Worker(URL.createObjectURL(new Blob(['/*@*/'+\"import*as e from\\\"reflected-ffi/direct\\\";const{assign:t}=Object,n=\\\"entries\\\",r=\\\"readonly\\\",s=\\\"readwrite\\\",o={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},a=({target:{result:e}})=>e;class i extends EventTarget{#e;#t;#n;async#r(e,r){const s=(await this.#e).transaction(n,r,this.#t);return new Promise((r,o)=>t(e(s.objectStore(n)),{onsuccess:r,onerror:o}))}constructor(e,{durability:r=o.durability,prefix:s=o.prefix}=o){super(),this.#n=s,this.#t={durability:r},this.#e=new Promise((r,s)=>{t(indexedDB.open(`${this.#n}/${e}`),{onupgradeneeded({target:{result:e,transaction:t}}){e.objectStoreNames.length||e.createObjectStore(n),t.oncomplete=()=>r(e)},onsuccess(e){r(a(e))},onerror(e){s(e),this.dispatchEvent(e)}})}).then(e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e})}dispatchEvent(e){const{type:n,message:r,isTrusted:s}=e;return super.dispatchEvent(s?t(new Event(n),{message:r}):e)}async close(){(await this.#e).close()}get size(){return this.#r(e=>e.count(),r).then(a)}async clear(){await this.#r(e=>e.clear(),s)}async delete(e){await this.#r(t=>t.delete(e),s)}async entries(){const e=await this.keys();return Promise.all(e.map(e=>this.get(e).then(t=>[e,t])))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r(t=>t.get(e),r).then(a)}async has(e){return void 0!==await this.#r(t=>t.getKey(e),r).then(a)}async keys(){return await this.#r(e=>e.getAllKeys(),r).then(a)}async set(e,t){return await this.#r(n=>n.put(t,e),s),this}async values(){const e=await this.keys();return Promise.all(e.map(e=>this.get(e)))}get[Symbol.toStringTag](){return this.#n}}class c extends Map{#s;#o;constructor(...e){super(),this.#s=new i(...e),this.#o=this.#s.entries().then(e=>{for(const[t,n]of e)super.set(t,n)})}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then(()=>this.#s.clear()),super.clear()}delete(e){return this.#o=this.#o.then(()=>this.#s.delete(e)),super.delete(e)}set(e,t){return this.#o=this.#o.then(()=>this.#s.set(e,t)),super.set(e,t)}}const l=\\\"940beb37\\\",u=\\\"=\\\"+l,p=\\\"-\\\"+l,{create:d}=Object;let f=\\\"coincident-\\\",y=!0;try{new SharedArrayBuffer(4,{maxByteLength:8}),f+=crypto.randomUUID()}catch(e){y=!1,f+=Math.random().toString(36).substring(2)}const m=2*Int32Array.BYTES_PER_ELEMENT,h={byteOffset:m,useUTF16:!0,circular:!0},w=(e,t,n)=>{const r=\\\"then\\\"!==t;return r&&(e[t]=n),r},{fromCharCode:g}=String,{min:_}=Math;var A=e=>({byteOffset:t=0}={})=>(n,r)=>{const s=new Uint16Array(r,t,n);let o=\\\"\\\",a=0;for(;a<n;){const e=_(a+32767,n);o+=g.apply(null,s.subarray(a,e)),a=e}return e(o)};const{parse:b}=JSON,E=A(b),v=\\\"array\\\",S=\\\"bigint\\\",k=\\\"boolean\\\",x=\\\"function\\\",j=\\\"null\\\",P=\\\"number\\\",$=\\\"object\\\",B=\\\"string\\\",F=\\\"symbol\\\",R=\\\"undefined\\\";var T={[v]:0,[S]:1,[k]:2,[x]:3,[j]:4,[P]:5,[$]:6,[B]:7,[F]:8,[R]:9,view:10};const{parse:O}=JSON,D=A(e=>{const t=O(e);switch(t[0]){case T.view:{const[e,n]=t[1],r=new Uint8Array(n);t[1]=new globalThis[e](r.buffer);break}case T[R]:t[1]=void 0;break;case T[S]:t[1]=BigInt(t[1])}return t});var M=Promise.withResolvers.bind(Promise);const C=[],L=new WeakSet,I=(...e)=>(L.add(e),e),H=Promise.withResolvers();addEventListener(\\\"message\\\",e=>{(e=>{e.stopImmediatePropagation(),e.preventDefault()})(e),H.resolve([e.data,e.ports[0]])},{once:!0});var W=async e=>{const[t,n]=await H.promise,r=y&&!!t,s=e?.transform,o=(e?.decoder||E)(h),a=!1!==e?.transfer;let i,c,l;if(y){const t=new SharedArrayBuffer(e?.minByteLength||32767,{maxByteLength:e?.maxByteLength||16777216});i=new Int32Array(t),({pause:c,wait:l}=Atomics),!c||r||t instanceof ArrayBuffer||(l=(e,t)=>{for(;e[t]<1;)c()})}const[u,p]=((e=e=>e)=>{const t=new Map;let n=0;return[()=>{let r;do{r=e(n++)}while(t.has(r));const s=M();return t.set(r,s),[r,s.promise]},(e,n,r)=>{const s=t.get(e);t.delete(e),r?s?.reject(r):s?.resolve(n)}]})(String),f=new Map,m=d(null),g=new Proxy(m,{get(e,c){if(\\\"then\\\"===c)return;let p=f.get(c);return p||f.set(c,p=(...e)=>{const p=((e,t)=>{let n=C;return e&&L.has(t.at(-1)||C)&&(n=t.pop(),L.delete(n)),n})(a,e),d=[i,c,s?e.map(s):e];if(y){r?postMessage({ID:t,data:d},p):n.postMessage(d,p),l(i,0),i[0]=0;const e=i[1]?o(i[1],i.buffer):void 0;if(e instanceof Error)throw e;return e}{const[e,t]=u();return d[0]=e,n.postMessage(d,p),t}}),p},set:w});return n.onmessage=async({data:e})=>{\\\"string\\\"==typeof e[0]?p.apply(null,e):(await(async(e,t,n)=>{try{const r=await t[e[1]].apply(null,e[2]);e[1]=n?n(r):r,e[2]=null}catch(t){e[2]=t}})(e,m,s),n.postMessage(e))},{native:y,proxy:g,transfer:I}};const N=\\\"apply\\\",U=\\\"construct\\\",J=\\\"defineProperty\\\",q=\\\"deleteProperty\\\",z=\\\"get\\\",K=\\\"getOwnPropertyDescriptor\\\",G=\\\"getPrototypeOf\\\",Y=\\\"has\\\",V=\\\"isExtensible\\\",X=\\\"ownKeys\\\",Z=\\\"preventExtensions\\\",Q=\\\"set\\\",ee=\\\"setPrototypeOf\\\";var te=Object.freeze({__proto__:null,APPLY:N,CONSTRUCT:U,DEFINE_PROPERTY:J,DELETE_PROPERTY:q,GET:z,GET_OWN_PROPERTY_DESCRIPTOR:K,GET_PROTOTYPE_OF:G,HAS:Y,IS_EXTENSIBLE:V,OWN_KEYS:X,PREVENT_EXTENSION:Z,SET:Q,SET_PROTOTYPE_OF:ee});const ne=\\\"destruct\\\";function re(){return this}const se=new FinalizationRegistry(([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)}),oe=Object.create(null),{Object:ae,Proxy:ie,Reflect:ce}=globalThis,{isArray:le}=Array,{ownKeys:ue}=ce,{create:pe,hasOwn:de,values:fe}=ae,ye=(e,t)=>t===v?e[0]:t===x?e():t===$?e.$:e,me=(e,t,n,r)=>{const s={type:{value:t}},o=de(e,\\\"valueOf\\\");for(const a of fe(te)){let i=r(e[a]||ce[a]);if(o&&a===z){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,ye(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return pe(e,s)},he=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case $:case R:r||(r=!1);case x:break;default:r=!1,t===e&&(t=ae(e))}const s=new ie(t,n),{destruct:o}=n;return o?((e,t,{debug:n,handler:r,return:s,token:o=e}=oe)=>{const a=s||new Proxy(e,r||oe),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),se.register(...i),a})(e,o,{token:r,return:s}):s},we=e=>t=>{const n=typeof t;return n===$?t?e.get(t)?.[0]??(e=>le(e)?v:$)(t):j:n},ge=e=>t=>{let n=typeof t;switch(n){case $:if(!t){n=j;break}case x:const r=e.get(t);r&&([n,t]=r)}return[n,t]},_e=e=>((e=>{se.unregister(e)})(e),e);var Ae=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:_e,pair:ge(t),typeOf:we(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of ue(e)){if(de(o,t))continue;const a=e[t];switch(t){case v:{const e=me(a,t,n,e=>({value([t],...n){return e.call(this,t,...n)}}));r[t]=(t,...n)=>s(he(t,[t],e,...n),v,t);break}case x:{const e=me(a,t,n,e=>({value(t,...n){return e.call(this,t(),...n)}}));r[t]=(t,...n)=>{return s(he(t,(r=t,re.bind(r)),e,...n),x,t);var r};break}case $:{const e=me(a,t,n,e=>({value({$:t},...n){return e.call(this,t,...n)}}));r[t]=(t,...n)=>s(he(t,{$:t},e,...n),$,t);break}default:{const e=me(a,t,n,e=>({value:e}));r[t]=(n,...r)=>s(he(n,n,e,...r),t,n);break}}}return o};const{drop:be,get:Ee,hold:ve}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===P?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})(),Se=new Map;for(const e of Reflect.ownKeys(Symbol))typeof Symbol[e]===F&&(Se.set(Symbol[e],e),Se.set(e,Symbol[e]));const ke=e=>Se.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:xe}=Array,{isView:je}=ArrayBuffer,{[N]:Pe}=Reflect;var $e=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case T[$]:return null==t?globalThis:typeof t===P?r(t,l.object):t;case T[v]:return typeof t===P?r(t,l.array):t;case T[x]:return typeof t===P?r(t,l.function):Ee(parseInt(t));case T[F]:return(e=>Se.get(e)||Symbol.for(e.slice(1)))(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case $:if(r==globalThis||null==r)r=null;else if(typeof r===$){if(r=t(r),xe(r))return[T[v],r.map(o)];if(je(r))return[T.view,r];{const e={};for(const t in r)e[t]=o(r[t]);r=e}}return[T[$],r];case v:return[T[v],typeof r===P?r:t(r).map(o)];case x:return[T[x],typeof r===x?String(ve(t(r))):r];case F:return[T[F],ke(e)];default:return[T[n],r]}},a=(...t)=>s(e(...t)),i={[J]:(e,t,n)=>a(J,e,o(t),o(n)),[q]:(e,t)=>a(q,e,o(t)),[z]:(e,t)=>a(z,e,o(t)),[G]:e=>a(G,e),[K]:(e,t)=>{const n=a(K,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[Y]:(e,t)=>a(Y,e,o(t)),[V]:e=>a(V,e),[X]:e=>a(X,e).map(s),[Z]:e=>a(Z,e),[Q]:(e,t,n)=>a(Q,e,o(t),o(n)),[ee]:(e,t)=>a(ee,e,o(t)),[ne](t){n.delete(t),e(ne,t)}},c={[$]:i,[v]:i,[x]:{...i,[N]:(e,...t)=>a(N,e,...t.map(o)),[U]:(e,...t)=>a(U,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=Ae(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case N:{const[e,t]=n;return o(await Pe(Ee(r),s(e),t.map(s)))}case ne:be(r)}}}};const Be={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Fe=new WeakMap,Re=e=>{const t=e||console,n={buffered:Oe,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Fe.set(t,n),t}}},Te=new TextDecoder,Oe=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(Te.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},De=(e,...t)=>Be[typeof e](e,...t),{isArray:Me}=Array,{assign:Ce,create:Le,defineProperty:Ie,entries:He}=Object,{all:We,resolve:Ne}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Ue=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function Je(e){return e.startsWith(\\\".\\\")?Ue(e,this):e}const qe=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},ze=e=>Function(`'use strict';return (${e})`)(),Ke=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Ge=Symbol.for(\\\"polyscript.js_modules\\\"),Ye=new Map;Ie(globalThis,Ge,{value:Ye}),new Proxy(Ye,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Ve=(e,t)=>!t.startsWith(\\\"_\\\"),Xe=(e,t)=>new Proxy(e,{has:Ve,get:(e,n)=>e[t][n]}),Ze=(e,t)=>import(e).then(e=>{Ye.set(t,{...e})}),Qe=e=>new Promise((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(Ce(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))}),et=e=>/\\\\.css$/i.test(new URL(e).pathname),tt=(e,t)=>e.has(t),nt=e=>[...e.keys()];var rt=(e,t,n,r)=>{const s=globalThis[Ge];if(n)for(let[e,t]of He(n)){let n=s.get(t);n&&!Me(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:tt,ownKeys:nt,get:(e,s)=>{let o=e.get(s);if(Me(o)){let a=o;o=null;for(let e of a)e=Ue(e,r),et(e)?n.importCSS(e):(n.importJS(e,s),o=t[Ge].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const st=new Map,ot=e=>st.get(e),at=(e,t)=>{try{return Function(\\\"require\\\",t)(ot)}catch(t){Fe.get(e).stderr(t)}};var it={type:\\\"dummy\\\",module:()=>\\\"data:text/javascript,\\\",engine:e=>Re().get(e),registerJSModule(e,t,n){st.set(t,n)},run:at,runAsync:at,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(ot,n)}catch(t){Fe.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const ct=Object.getOwnPropertyDescriptors(Response.prototype),lt=e=>\\\"function\\\"==typeof e,ut={get:(e,t)=>ct.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!lt(r)?e.then(e=>e[t]):(...n)=>e.then(e=>e[t](...n)))(e,t,ct[t]):((e,t)=>lt(t)?t.bind(e):t)(e,e[t])};var pt=(e,...t)=>new Proxy(fetch(e,...t),ut);const dt=!globalThis.window,ft=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):mt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},yt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},mt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},ht=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},wt=e=>{const t=e.map(e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\")).filter(e=>\\\"\\\"!==e&&\\\".\\\"!==e).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},gt=(e,t)=>pt(Ue(e,t)).arrayBuffer(),_t=(e,t,n,r)=>We((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap(({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(Me(r))return r.map(n=>({url:wt([e,n]),path:wt([t,n])}));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:wt([t,s])}]})})(n).map(({url:n,path:s})=>gt(n,r).then(n=>e.writeFile(t,s,n)))),At=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,bt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)}),Et=(e,t,n,r)=>We((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of He(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,bt(o,t))}else{const e=bt(s,t),a=At(e,bt(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map(({url:n,path:s})=>gt(n,r).then(r=>e.writeFile(t,s,r,n)))),vt=({main:e,worker:t},n)=>{const r=[];if(t&&dt)for(let[e,s]of He(t))e=Ue(e,n),r.push(Ze(e,s));if(e&&!dt)for(let[t,s]of He(e))t=Ue(t,n),et(t)?Qe(t):r.push(Ze(t,s));return We(r)},St=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},kt={parse:e.decode,stringify:e.encode},xt=new WeakMap,jt=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await Et(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await _t(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await vt(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},Pt=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await xt.get(e)(t),t.map(t=>e.pyimport(t))),n.storage=async e=>{const t=new c(e);return await t.sync(),t},n.JSON=kt),e.registerJsModule(t,n)},$t=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},Bt=(e,t,...n)=>{try{return e.runPython(De(t),...n)}catch(t){Fe.get(e).stderr(t)}},Ft=async(e,t,...n)=>{try{return await e.runPythonAsync(De(t),...n)}catch(t){Fe.get(e).stderr(t)}},Rt=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Fe.get(e).stderr(t)}};var Tt=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const Ot=async e=>(await import(\\\"./toml-BK2RWy-G.js\\\")).parse(e);async function Dt(e,t){return new Promise((n,r)=>{e.syncfs(t,e=>{e?r(e):n()})})}function Mt(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await Ct(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach(function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)}),i.sort();const c=[];if(Object.keys(o.entries).forEach(function(e){n.entries[e]||(c.push(e),a++)}),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):mt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await Dt(t,!0),{syncfs:async()=>await Dt(t,!1)}}}const Ct=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},Lt=(e,t)=>{try{e.mkdir(t)}catch(e){}},It=St(\\\"mpy\\\");var Ht={type:\\\"micropython\\\",module:(e=\\\"1.25.0\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=Re({stderr:Oe(console.error),stdout:Oe(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),It(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=Wt.bind(this,i,r);return xt.set(i,c),await jt(this,It,i,t,r),this.writeFile(i,\\\"./mip.py\\\",Tt),t.packages&&(It(\\\"Loading packages\\\"),await c(t.packages.map(Je,r)),It(\\\"Loaded packages\\\")),It(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=Mt(i._module)),i},registerJSModule:Pt,run:Bt,runAsync:Ft,runEvent:Rt,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=$t(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-BKVoQflw.js\\\").then(async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)Lt(s,i);else{Lt(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()})}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return ft(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return ft(i,t,n)}};async function Wt(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Ue(s,t),r=await pt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const Nt={dict_converter:Object.fromEntries},{stringify:Ut}=JSON,{apply:Jt}=Reflect,qt=Function.prototype,zt=e=>function(...t){return Jt(e,this,t)};let Kt,Gt;const Yt=e=>{const t=new WeakMap,n=n=>{for(let r,s=0;s<n.length;s++)switch(typeof(r=n[s])){case\\\"object\\\":if(null===r)break;case\\\"function\\\":if(Kt in r&&!r[Kt].shared?.gcRegistered){e=!1;let o=t.get(r)?.deref();if(!o){o=Gt(r);const e=new WeakRef(o);t.set(r,e),t.set(o,e)}n[s]=o,e=!0}}};Object.defineProperties(qt,{apply:{value(t,r){return e&&n(r),Jt(this,t,r)}},call:{value(t,...r){return e&&n(r),Jt(this,t,r)}}})},Vt=St(\\\"py\\\"),Xt=new WeakMap;var Zt={type:\\\"pyodide\\\",module:(e=\\\"0.27.7\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e,version:t},n,r,s){Vt(\\\"Loading Pyodide\\\");let{packages:o,index_urls:a}=n;o&&(o=o.map(Je,s)),Vt(\\\"Loading Storage\\\");const i=r.slice(0,r.lastIndexOf(\\\"/\\\")),l=new c(`${i}@${t}`),u={indexURL:i},p=\\\"never\\\"!==n.packages_cache;if(await l.sync(),p){if(o)if(\\\"passthrough\\\"===n.packages_cache)u.packages=o,o=null,l.clear();else{o=o.sort();const e=Ut(o);if(l.has(e)){const t=new Blob([l.get(e)],{type:\\\"application/json\\\"});u.lockFileURL=URL.createObjectURL(t),u.packages=o.map(e=>e.split(/[>=<]=/)[0]),o=null}}}else l.clear();Vt(\\\"Loaded Storage\\\");const{stderr:d,stdout:f,get:y}=Re(),m=await y(e({stderr:d,stdout:f,...u}));n.debug&&m.setDebug(!0);const h=en.bind(m);return a&&Xt.set(m,a),xt.set(m,h),await jt(this,Vt,m,n,s),o&&await h(o,l,p),await l.close(),u.lockFileURL&&URL.revokeObjectURL(u.lockFileURL),Vt(\\\"Loaded Pyodide\\\"),\\\"auto\\\"===n.experimental_create_proxy&&(m.runPython([\\\"import js\\\",\\\"from pyodide.ffi import to_js\\\",\\\"o=js.Object.fromEntries\\\",\\\"js.experimental_create_proxy=lambda r:to_js(r,dict_converter=o)\\\"].join(\\\";\\\"),{globals:m.toPy({})}),Gt=globalThis.experimental_create_proxy,delete globalThis.experimental_create_proxy,[Kt]=Reflect.ownKeys(Gt).filter(e=>\\\"symbol\\\"==typeof e&&\\\"Symbol(pyproxy.attrs)\\\"===String(e)),Yt(!0)),m},registerJSModule:Pt,run:zt(Bt),runAsync:zt(Ft),runEvent:zt(Rt),transform:(e,t)=>Jt(Qt,e,[t]),writeFile:(e,t,n,r)=>{const s=$t(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return ft({FS:o,PATH:a,PATH_FS:i},t,n)}};function Qt(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(Nt);if(e instanceof Map)return new Map([...e.entries()]);if(Me(e))return e.map(Qt,this)}return e}async function en(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,Vt(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(Xt.has(this)&&o.set_index_urls(Xt.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof c){const n=o.freeze();t.set(Ut(e),n)}o.destroy()}const tn=\\\"ruby-wasm-wasi\\\",nn=tn.replace(/\\\\W+/g,\\\"_\\\");var rn={type:tn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await pt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await Et(this,a,t.files,r),t.fetch&&await _t(this,a,t.fetch,r),t.js_modules&&await vt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${nn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(De(t),...n),runAsync:(e,t,...n)=>e.evalAsync(De(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${nn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${tn}`)}};var sn={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=Re(),c=await i((new e).createEngine());return c.global.getTable(t.Base,e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)}),n.files&&await Et(this,c,n.files,s),n.fetch&&await _t(this,c,n.fetch,s),n.js_modules&&await vt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(De(t),...n)}catch(t){Fe.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(De(t),...n)}catch(t){Fe.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Fe.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(mt(e,yt(t)),t=ht(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const on=new WeakMap,an=new FinalizationRegistry(e=>e()),cn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=on.get(e),{output:o,result:a}=await n.captureR(De(t));for(const{type:e,data:t}of o)s[e](t);return an.register(a,r),a};var ln={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.4\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=Re(),o=new e.WebR;await s(o.init().then(()=>o));const a=await new o.Shelter;return on.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:Fe.get(o)}),t.files&&await Et(this,o,t.files,r),t.fetch&&await _t(this,o,t.fetch,r),t.js_modules&&await vt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:cn,runAsync:cn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const un=new Map,pn=new Map,dn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=un.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then(r=>(pn.set(t,e),s(r,e,n,o)))}}),fn=e=>{for(const t of[].concat(e.type))un.set(t,e)};for(const e of[it,Ht,Zt,rn,sn,ln])fn(e);const{parse:yn}=JSON,mn=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Ue(e),n]})(e,t);return\\\"json\\\"===s?n=pt(r).json():\\\"toml\\\"===s?n=pt(r).text().then(Ot):\\\"string\\\"===s?n=hn(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=hn(n)),[n,e=r]},hn=e=>{try{return yn(e)}catch(t){return Ot(e)}},wn=\\\"BeforeRun\\\",gn=\\\"AfterRun\\\",_n=[`code${wn}`,`code${wn}Async`,`code${gn}`,`code${gn}Async`],An=[\\\"onWorker\\\",\\\"onReady\\\",`on${wn}`,`on${wn}Async`,`on${gn}`,`on${gn}Async`];function bn(e,t){const{run:n,runAsync:r}=un.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const En=(e,t,n,r,s,o)=>{if(s||o){const a=bn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let vn,Sn,kn;const xn=(e,t)=>{addEventListener(e,t||(async t=>{try{await vn,Sn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{proxy:jn,sync:Pn,native:$n,window:Bn,isWindowProxy:Fn,ffi:Rn}=await(async e=>{let t=!1;const n=e?.decoder||E,r=await W({...e,decoder(e){const r=n(e),s=D(e);return(e,n)=>t?(t=!1,s(e,n)):r(e,n)}}),s=r.proxy[u],{isProxy:o,global:a,method:i}=$e(function(...e){return t=!0,s.apply(this,e)},e?.transform||(e=>e));return r.proxy[p]=i,{...r,window:a,isWindowProxy:o}})({transfer:!1,transform:e=>kn?kn(e):e}),Tn={polyfill:Pn,sync:jn,window:$n||Pn?Bn:null,isWindowProxy:Fn,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};xn(\\\"message\\\",({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{vn=(async()=>{try{const{id:o,tag:a,type:l,custom:u,version:p,config:d,async:f}=e,y=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),m=await((e,t,n,r={})=>(t&&([r,t]=mn(t,n,r)),Ne(r).then(n=>dn[e](n,t))))(y,t,n,d),{js_modules:h}=pn.get(y),w=h?.main,g=Le(un.get(l)),_=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Fe.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,u||l,d||{},m);let A=\\\"run\\\";if(f&&(A+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of _n){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,Ke(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,Ke(t),...o);return r&&await s(e,r,...o),a}})(g,A,n,r);for(const n of An.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=ze(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}En(g,_,Tn,f,e,t)}let b,E,v,S=null,k=\\\"\\\";($n||Pn)&&(({CustomEvent:b,document:E}=Bn),S=o&&E.getElementById(o)||null,v=e=>qe(S,u||l,e,!0,b));const x=rt(Bn,jn,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Xe(r,e));t.registerJSModule(n,s,r)})(l,g,m,x),g.registerJSModule(m,\\\"polyscript\\\",{IDBMap:i,IDBMapSync:c,xworker:Tn,currentScript:S,config:_.config,js_modules:x,ffi:Rn,get target(){return!k&&S&&(\\\"SCRIPT\\\"===a?S.after(Ce(Bn.document.createElement(`script-${u||l}`),{id:k=`${o}-target`})):(k=o,S.replaceChildren(),S.style.display=\\\"block\\\")),k}}),Sn=g.runEvent.bind(g,m),kn=g.transform.bind(g,m),S&&v(\\\"ready\\\"),s?.onReady&&ze(s?.onReady).call(g,bn.call(g,_,m),Tn),await g[A](m,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";m.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&m.runPython([`from ${e} import xworker as ${t}`,...r.map(e=>`${t}.sync.${e} = ${e}`),`del ${t}`].join(\\\"\\\\n\\\"))}return S&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),m}catch(e){postMessage(e)}})(),xn(\\\"error\\\"),xn(\\\"message\\\"),xn(\\\"messageerror\\\"),($n||Pn)&&addEventListener(\\\"py:progress\\\",({type:e,detail:t})=>{Bn.dispatchEvent(new Bn.CustomEvent(e,{detail:t}))})});\\n\".replace(re,place)],{type:'text/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTROY } from '../proxy/traps.js';\n\nimport { encoder as jsonEncoder } from '../json/encoder.js';\nimport { encoder as minimalEncoder } from '../proxy/encoder.js';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport coincident from '../main.js';\nimport callback from '../proxy/main.js';\n\nexport default options => {\n  let tracking = false;\n  const esm = options?.import;\n  const defaultEncoder = options?.encoder || jsonEncoder;\n  const exports = coincident({\n    ...options,\n    encoder(options) {\n      const original = defaultEncoder(options);\n      const minimal = minimalEncoder(options);\n      return (value, buffer) => {\n        if (tracking) {\n          tracking = false;\n          return minimal(value, buffer);\n        }\n        return original(value, buffer);\n      };\n    }\n  });\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      const main = callback(\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n\n      proxy[MAIN] = function (...args) {\n        tracking = true;\n        return main.apply(this, args);\n      };\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:text/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","import * as DIRECT from 'reflected-ffi/direct';\nconst JSON = { parse: DIRECT.decode, stringify: DIRECT.encode };\n\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.25.0') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\nconst { apply } = Reflect;\nconst FunctionPrototype = Function.prototype;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst overrideMethod = method => function (...args) {\n    return apply(method, this, args);\n};\n\nlet pyproxy, to_js;\nconst override = intercept => {\n\n    const proxies = new WeakMap;\n\n    const patch = args => {\n        for (let arg, i = 0; i < args.length; i++) {\n            switch (typeof(arg = args[i])) {\n                case 'object':\n                    if (arg === null) break;\n                    // falls through\n                case 'function': {\n                    if (pyproxy in arg && !arg[pyproxy].shared?.gcRegistered) {\n                        intercept = false;\n                        let proxy = proxies.get(arg)?.deref();\n                        if (!proxy) {\n                            proxy = to_js(arg);\n                            const wr = new WeakRef(proxy);\n                            proxies.set(arg, wr);\n                            proxies.set(proxy, wr);\n                        }\n                        args[i] = proxy;\n                        intercept = true;\n                    }\n                    break;\n                }\n            }\n        }\n    };\n\n    // the patch\n    Object.defineProperties(FunctionPrototype, {\n        apply: {\n            value(context, args) {\n                if (intercept) patch(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (intercept) patch(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.7') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide, version }, config, url, baseURL) {\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(`${indexURL}@${version}`);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            // packages_cache = 'passthrough' means: do not use micropip.install\n            if (config.packages_cache === 'passthrough') {\n                options.packages = packages;\n                packages = null;\n                storage.clear();\n            }\n            else {\n                packages = packages.sort();\n                // packages are uniquely stored as JSON key\n                const key = stringify(packages);\n                if (storage.has(key)) {\n                    const blob = new Blob(\n                        [storage.get(key)],\n                        { type: 'application/json' },\n                    );\n                    // this should be used to bootstrap loadPyodide\n                    options.lockFileURL = URL.createObjectURL(blob);\n                    // versions are not currently understood by pyodide when\n                    // a lockFileURL is used instead of micropip.install(packages)\n                    // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                    // https://github.com/pyscript/pyscript/issues/2245\n                    options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                    packages = null;\n                }\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        if (config.debug) interpreter.setDebug(true);\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        if (config.experimental_create_proxy === 'auto') {\n            interpreter.runPython([\n                'import js',\n                'from pyodide.ffi import to_js',\n                'o=js.Object.fromEntries',\n                'js.experimental_create_proxy=lambda r:to_js(r,dict_converter=o)'\n            ].join(';'), { globals: interpreter.toPy({}) });\n            to_js = globalThis.experimental_create_proxy;\n            delete globalThis.experimental_create_proxy;\n            [pyproxy] = Reflect.ownKeys(to_js).filter(\n                k => (\n                    typeof k === 'symbol' &&\n                    String(k) === 'Symbol(pyproxy.attrs)'\n                )\n            );\n            override(true);\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => apply(transform, interpreter, [value]),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\nconst fr = new FinalizationRegistry(fn => fn());\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  fr.register(result, destroy);\n  return result;\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.4') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            ffi: {\n                direct: worker.direct,\n            },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","Promise","onsuccess","onerror","objectStore","constructor","name","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","startsWith","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","callback","context","call","has","getKey","getAllKeys","set","put","values","Symbol","toStringTag","IDBMapSync","Map","queue","sync","withResolvers$1","withResolvers","workers","ignore","Set","workersHandler","freeze","_","promise","w","DESTROY","createEncoder","encode","byteOffset","buffer","string","byteLength","grow","ui16a","Uint16Array","charCodeAt","stringify","JSON","encoder","ARRAY","BIGINT","BOOLEAN","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","getPrototypeOf","toConstructorName","globalThis","numeric","view","Uint8Array","toString","CHANNEL","MAIN","WORKER","nothing","buffers","WeakSet","add","create","ID","native","SharedArrayBuffer","maxByteLength","crypto","randomUUID","Math","random","substring","defaults","Int32Array","BYTES_PER_ELEMENT","useUTF16","circular","proxied","ok","UID","notify","Atomics","Number","coincident$1","transform","checkTransferred","transfer","Worker","url","port1","channel","port2","MessageChannel","next","as","id","uid","wr","error","nextResolver","callbacks","resolving","proxy","cb","check","at","pop","transferred.get","postMessage","setTimeout","console","warn","clearTimeout","deadlock","addEventListener","data","stopImmediatePropagation","preventDefault","stop","onmessage","async","i32","apply","transferred.set","DESTRUCT","symbols","s","Reflect","ownKeys","toSymbol","keyFor","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","eventsHandler","WeakMap","defineProperty","listener","invoke","concat","isArray","Array","isView","ArrayBuffer","__worker__","drop","hold","ids","a","b","had","heap","proxies","onGC","ref","toEntry","TYPE","fromEntry","numericTYPE","fn","deref","return","token","register","currentTarget","methods","method","handleEvent","WeakRef","for","slice","fromSymbol","asEntry","asImport","import","globals","TRAP","descriptor","re","place","q","f","URL","href","tracking","esm","defaultEncoder","jsonEncoder","exports","coincident","original","minimal","minimalEncoder","main","location","terminate","io","stdio","localIO","buffered","stderr","stdout","log","engine","interpreter","decoder","TextDecoder","EOL","maybeUI8","c","decode","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","dedent","object","l","arguments","content","line","split","trim","test","replace","RegExp","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","$","absoluteURL","base","fixedRelative","nodeInfo","node","tag","tagName","dispatch","worker","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","source","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","isSync","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","filter","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","Error","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","promises","createProgress","parse","DIRECT","loader","loadProgress","self","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","mip","TextEncoder","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","e","isRealDir","toAbsolute","join2","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","Date","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","entry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","getTime","sort","remove","reverse","relPath","normalize","NATIVEFS_ASYNC","TypeError","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","toJsOptions","dict_converter","fromEntries","FunctionPrototype","overrideMethod","pyproxy","to_js","override","intercept","patch","arg","shared","gcRegistered","indexURLs","pyodide","loadPyodide","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","setDebug","revokeObjectURL","experimental_create_proxy","toPy","unpackArchive","ffi","_log","rest","loadPackage","micropip","set_index_urls","keep_going","frozen","destroy","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","index","setField","doStringSync","doString","cmodule","writeFileShim","fr","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","env","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","json","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","toJSON","xworker","serviceWorker","service_worker","isHook","Hook","resolver","bootstrap","ready","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","details","XWorker","$xworker","closest","body","wn","sw","versionValue","configValue","workerName","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","known","v","cfg","o","u","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","symbol","stickyModule","$customObserver","dontBother","indexOf","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","hasAttribute","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,46]}