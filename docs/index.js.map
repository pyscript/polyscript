{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../esm/workers.js","../node_modules/@webreflection/coincident/dist/flatted_encoder.js","../node_modules/@webreflection/coincident/src/proxy/traps.js","../node_modules/@webreflection/coincident/src/window/constants.js","../node_modules/@webreflection/coincident/src/json/encoder.js","../node_modules/@webreflection/coincident/src/utils/encoder.js","../node_modules/@webreflection/coincident/src/utils.js","../node_modules/@webreflection/coincident/src/main.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/proxy-target/esm/types.js","../node_modules/@webreflection/coincident/src/window/types.js","../node_modules/@webreflection/coincident/src/window/symbol.js","../node_modules/gc-hook/esm/index.js","../node_modules/@webreflection/coincident/src/window/events.js","../node_modules/@webreflection/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../esm/worker/xworker.js","../node_modules/@webreflection/coincident/src/window/main.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../node_modules/@webreflection/coincident/dist/flatted.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/_nativefs.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","var e={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};let t=\"coincident-\";try{new SharedArrayBuffer(4,{maxByteLength:8}),t+=crypto.randomUUID()}catch(e){t+=Math.random().toString(36).substring(2)}const{isArray:r}=Array,{isView:s}=ArrayBuffer,{stringify:n}=JSON,a=(t,r,s)=>{const n=r.get(s);return\"number\"==typeof n&&(t.push(e.ref,n),!0)},o=e=>{const t=typeof e;switch(t){case\"function\":case\"undefined\":return\"\";case\"object\":return null===e?\"null\":\"object\";default:return t}},c=(t,n,u,f=o(u))=>{switch(f){case\"null\":t.push(e.null);break;case\"object\":if(a(t,n,u))break;switch(n.set(u,t.length),!0){case r(u):{const r=u.length;t.push(e.array,r);for(let s=0;s<r;s++){const r=u[s],a=o(r);a?c(t,n,r,a):t.push(e.undefined)}break}case s(u):{const r=t.push(e.view,u.constructor.name,u.byteOffset);if(u=u.buffer,a(t,n,u))break;n.set(u,r)}case u instanceof ArrayBuffer:{const r=u.byteLength,s=u.resizable?u.maxByteLength:0;if(t.push(e.buffer,r,s),r){const e=new Uint8Array(u);for(let r=0;r<e.length;r+=65535)t.push.apply(t,e.subarray(r,r+65535))}break}case u instanceof Date:t.push(e.date,+u);break;case u instanceof Map:{const r=t.push(e.map,0);let s=0;for(const[e,r]of u){const a=o(e),u=o(r);a&&u&&(c(t,n,e,a),c(t,n,r,u),s++)}t[r-1]=s;break}case u instanceof Set:{const r=t.push(e.set,0);let s=0;for(const e of u){const r=o(e);r&&(c(t,n,e,r),s++)}t[r-1]=s;break}case u instanceof RegExp:t.push(e.regexp,u.source,u.flags);break;case u instanceof Error:t.push(e.error,u.name,u.message,u.cause,u.stack);break;default:{if(\"toJSON\"in u){const r=u.toJSON();if(r===u){t.push(e.object,0);break}u=r,n.set(u,t.length)}const r=t.push(e.object,0);let s=0;for(const e in u){const r=u[e],a=o(r);a&&(c(t,n,e,\"string\"),c(t,n,r,a),s++)}t[r-1]=s;break}}break;case\"boolean\":t.push(u?e.true:e.false);break;case\"string\":if(a(t,n,u))break;n.set(u,t.length),t.push(e.string,u);break;case\"bigint\":t.push(e[f],u.toString());break;case\"symbol\":{const r=(e=>{const t=e.toString().slice(7,-1);return t.startsWith(\"Symbol.\")||Symbol.keyFor(e)?t:\"\"})(u);r&&t.push(e[f],r);break}case\"\":break;default:t.push(e[f],u)}},u=e=>{const t=[];return c(t,new Map,e),n(t)},f=(e=>({byteOffset:t})=>(r,{buffer:s})=>{const n=new Uint16Array(s,t),a=e(r),o=a.length;for(let e=0;e<o;e++)n[e]=a.charCodeAt(e);return o})(u);export{u as encode,f as encoder};\n","export const DESTROY = 'destroy';\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = '2d28b248-43f8-4fdc-b78e-514b8111e549';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","import createEncoder from '../utils/encoder.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => stringify(value);\r\n\r\nexport const encoder = createEncoder(stringify);\r\n","export default encode => ({ byteOffset }) => (value, { buffer }) => {\r\n  const ui16a = new Uint16Array(buffer, byteOffset);\r\n  const string = encode(value);\r\n  const length = string.length;\r\n  for (let i = 0; i < length; i++)\r\n    ui16a[i] = string.charCodeAt(i);\r\n  return length;\r\n};\r\n","const {\r\n  assign,\r\n  create,\r\n} = Object;\r\n\r\n/* c8 ignore start */\r\nlet ID = 'coincident-', native = true;\r\ntry {\r\n  new SharedArrayBuffer(4, { maxByteLength: 8 });\r\n  ID += crypto.randomUUID();\r\n}\r\ncatch (_) {\r\n  native = false;\r\n  ID += Math.random().toString(36).substring(2);\r\n}\r\n/* c8 ignore end */\r\n\r\nconst byteOffset = 2 * Int32Array.BYTES_PER_ELEMENT;\r\nconst minByteLength = 0xFFFF;\r\nconst maxByteLength = 0x1000000;\r\n\r\nconst defaults = {\r\n  // ⚠️ mandatory: first int32 to notify, second one to store the written length\r\n  byteOffset,\r\n  // ⚠️ mandatory: to encode *into* a SharedArrayBuffer\r\n  useUTF16: true,\r\n  // ⚠️ mandatory: to satisfy circular/cyclic data\r\n  circular: true,\r\n};\r\n\r\nconst map = new Map;\r\nconst identity = value => value;\r\nconst rtr = ($ = identity, id = 0) => [\r\n  uid => {\r\n    const wr = withResolvers();\r\n    do { uid = $(id++) }\r\n    while (map.has(uid));\r\n    map.set(uid, wr);\r\n    return [uid, wr];\r\n  },\r\n  (uid, value, error) => {\r\n    const wr = map.get(uid);\r\n    map.delete(uid);\r\n    if (error) wr.reject(error);\r\n    else wr.resolve(value);\r\n  },\r\n];\r\n\r\nconst result = async (uid, callback, args, transform) => {\r\n  const response = [uid, null, null];\r\n  try {\r\n    const result = await callback(...args);\r\n    response[1] = transform ? transform(result) : result;\r\n  }\r\n  catch (error) { response[2] = error }\r\n  return response;\r\n};\r\n\r\nconst set = (proxied, name, callback) => {\r\n  const ok = name !== 'then';\r\n  if (ok) proxied[name] = callback;\r\n  return ok;\r\n};\r\n\r\n/** @param {Event} event */\r\nconst stop = event => {\r\n  event.stopImmediatePropagation();\r\n  event.preventDefault();\r\n};\r\n\r\nconst ui8View = buffer => new Uint8Array(buffer, byteOffset);\r\n\r\nconst withResolvers = () => Promise.withResolvers();\r\n\r\nexport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  maxByteLength,\r\n  minByteLength,\r\n  native,\r\n  result,\r\n  rtr,\r\n  set,\r\n  stop,\r\n  ui8View,\r\n  withResolvers,\r\n};\r\n","import { encoder } from './json/encoder.js';\r\n\r\nimport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  native,\r\n  result,\r\n  rtr,\r\n  set,\r\n  stop,\r\n  ui8View,\r\n} from './utils.js';\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n// Note: InstallTrigger is deprecated so once it's gone I do hope\r\n//       this workaround would be gone too!\r\nconst UID = 'InstallTrigger' in globalThis ? ID : '';\r\n\r\nconst { notify } = Atomics;\r\n\r\nexport default options => {\r\n  const transform = options?.transform;\r\n  const encode = (options?.encoder || encoder)(defaults);\r\n\r\n  class Worker extends globalThis.Worker {\r\n    constructor(url, options) {\r\n      const { port1: channel, port2 } = new MessageChannel;\r\n      const [ next, resolve ] = rtr();\r\n      const callbacks = new Map;\r\n      const proxied = create(null);\r\n\r\n      let resolving = '';\r\n\r\n      const deadlock = ({ promise }, name) => {\r\n        if (resolving) {\r\n          const t = setTimeout(\r\n            console.warn,\r\n            3e3,\r\n            `💀🔒 - is proxy.${resolving}() awaiting proxy.${name}() ?`\r\n          );\r\n          promise = promise.then(\r\n            result => {\r\n              clearTimeout(t);\r\n              return result;\r\n            },\r\n            error => {\r\n              clearTimeout(t);\r\n              return Promise.reject(error);\r\n            },\r\n          );\r\n        }\r\n        return promise;\r\n      };\r\n\r\n      super(url, assign({ type: 'module' }, options)).proxy = new Proxy(proxied, {\r\n        get: (_, name) => {\r\n          // the curse of potentially awaiting proxies in the wild\r\n          // requires this ugly guard around `then`\r\n          if (name === 'then') return;\r\n          let cb = callbacks.get(name);\r\n          if (!cb) {\r\n            callbacks.set(name, cb = (...args) => {\r\n              const [uid, wr] = next();\r\n              channel.postMessage([uid, name, transform ? args.map(transform) : args]);\r\n              return deadlock(wr, name);\r\n            });\r\n          }\r\n          return cb;\r\n        },\r\n        set\r\n      });\r\n\r\n      super.postMessage(UID, [port2]);\r\n\r\n      // @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n      if (native && UID) {\r\n        super.addEventListener('message', event => {\r\n          const { data } = event;\r\n          if (data?.ID === UID) {\r\n            stop(event);\r\n            channel.onmessage(data);\r\n          }\r\n        });\r\n      }\r\n\r\n      channel.onmessage = async ({ data }) => {\r\n        const [i32, name, args] = data;\r\n        const type = typeof i32;\r\n        if (type === 'number')\r\n          resolve(i32, name, args);\r\n        else {\r\n          resolving = name;\r\n          const response = await result(i32, proxied[name], args, transform);\r\n          resolving = '';\r\n          if (type === 'string')\r\n            channel.postMessage(response);\r\n          else {\r\n            const result = response[2] || response[1];\r\n            // at index 1 we store the written length or 0, if undefined\r\n            i32[1] = result === void 0 ? 0 : encode(result, ui8View(i32.buffer));\r\n            // at index 0 we set the SharedArrayBuffer as ready\r\n            i32[0] = 1;\r\n            notify(i32, 0);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    Worker,\r\n    native,\r\n  };\r\n};\r\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n].map((k, i) => [k, i]));\n","import { OWN_KEYS } from 'js-proxy/traps';\nimport { SYMBOL } from 'js-proxy/types';\n\nconst { [OWN_KEYS]: ownKeys } = Reflect;\n\nconst known = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const fromSymbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of known) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const toSymbol = value => (\n  known.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\nconst { isView } = ArrayBuffer;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        return [numeric[OBJECT], isView(value) ? value : hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        if (!(isView(value))) {\n          for (const key in value)\n            value[key] = fromEntry(value[key]);\n        }\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport { encoder } from '@webreflection/coincident/flatted/encoder';\nimport coincident from '@webreflection/coincident/window/main';\nconst { Worker } = coincident({ encoder });\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise(((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o})))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise(((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),n).then(o)}async clear(){await this.#r((e=>e.clear()),r)}async delete(e){await this.#r((t=>t.delete(e)),r)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),n).then(o)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),n).then(o)}async keys(){return await this.#r((e=>e.getAllKeys()),n).then(o)}async set(e,t){return await this.#r((n=>n.put(t,e)),r),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}let c=\\\"coincident-\\\";try{new SharedArrayBuffer(4,{maxByteLength:8}),c+=crypto.randomUUID()}catch(Pt){c+=Math.random().toString(36).substring(2)}const{fromCharCode:l}=String,{min:u}=Math;const{defineProperty:p}=Object,d=e=>{switch(e[y++]){case 1:{const t=e[y++],n=[];e[y-2]=n;for(let r=0;r<t;r++)n[r]=d(e);return n}case 2:{const t=e[y++],n={};e[y-2]=n;for(let r=0;r<t;r++)n[d(e)]=d(e);return n}case 4:{const t=e[y++];return e[y-2]=t,t}case 0:return e[e[y++]];case 3:return e[y++];case 12:return BigInt(e[y++]);case 5:return!0;case 6:return!1;case 7:return null;case 13:return;case 8:{const t=e[y++],n=e[y++],r=[t];n&&r.push({maxByteLength:n});const s=new ArrayBuffer(...r);e[y-3]=s;const o=new Uint8Array(s);for(let n=0;n<t;n++)o[n]=e[y++];return s}case 9:{const t=e[y++],n=e[y++],r=new globalThis[t](d(e),n);return e[y-3]=r,r}case 10:{const t=e[y++];return t.startsWith(\\\"Symbol.\\\")?Symbol[t.split(\\\".\\\")[1]]:Symbol.for(t)}case 11:{const t=new Date(e[y++]);return e[y-2]=t,t}case 14:{const t=e[y++],n=new Map;e[y-2]=n;for(let r=0;r<t;r++){const t=d(e),r=d(e);void 0!==t&&n.set(t,r)}return n}case 15:{const t=e[y++],n=new Set;e[y-2]=n;for(let r=0;r<t;r++){const t=d(e);void 0!==t&&n.add(t)}return n}case 16:{const t=e[y++],n=e[y++],r=new RegExp(t,n);return e[y-4]=r,r}case 17:{const t=globalThis[e[y++]]||Error,n=e[y++],r=e[y++],s=e[y++],o=new t(n,{cause:r});return e[y-5]=p(o,\\\"stack\\\",{value:s}),o}default:throw new Error(`Unknown type: ${e[y-1]}`)}},{parse:f}=JSON;let y=0;const h=(e=>({byteOffset:t})=>(n,{buffer:r})=>{const s=new Uint16Array(r,t);let o=\\\"\\\",a=0;for(;a<n;){const e=u(a+65535,n);o+=l.apply(null,s.subarray(a,e)),a=e}return e(o)})((e=>{y=0;const t=f(e);return t.length?d(t):void 0})),m=\\\"2d28b248-43f8-4fdc-b78e-514b8111e549\\\",w=\\\"=\\\"+m,g=\\\"-\\\"+m,{create:b}=Object;let _=\\\"coincident-\\\",A=!0;try{new SharedArrayBuffer(4,{maxByteLength:8}),_+=crypto.randomUUID()}catch(e){A=!1,_+=Math.random().toString(36).substring(2)}const E=2*Int32Array.BYTES_PER_ELEMENT,v={byteOffset:E,useUTF16:!0,circular:!0},S=new Map,k=e=>e,x=(e,t,n)=>{const r=\\\"then\\\"!==t;return r&&(e[t]=n),r},j=()=>Promise.withResolvers(),{fromCharCode:B}=String,{min:P}=Math;const{parse:$}=JSON,F=(R=$,({byteOffset:e})=>(t,{buffer:n})=>{const r=new Uint16Array(n,e);let s=\\\"\\\",o=0;for(;o<t;){const e=P(o+65535,t);s+=B.apply(null,r.subarray(o,e)),o=e}return R(s)});var R;const O=j();addEventListener(\\\"message\\\",(e=>{(e=>{e.stopImmediatePropagation(),e.preventDefault()})(e),O.resolve([e.data,e.ports[0]])}),{once:!0});var T=async e=>{const[t,n]=await O.promise,r=A&&!!t,s=e?.transform,o=(e?.decoder||F)(v);let a,i,c;if(A){const t=new SharedArrayBuffer(e?.minByteLength||65535,{maxByteLength:e?.maxByteLength||16777216});a=new Uint8Array(t,E),i=new Int32Array(t),c=Atomics.wait;const n=e?.interrupt;if(n){const{handler:e,timeout:t=42}=n;c=(n,r,s)=>{for(;\\\"timed-out\\\"===(s=wait(n,r,0,t));)e();return s}}}const[l,u]=((e=k,t=0)=>[n=>{const r=j();do{n=e(t++)}while(S.has(n));return S.set(n,r),[n,r]},(e,t,n)=>{const r=S.get(e);S.delete(e),n?r.reject(n):r.resolve(t)}])(String),p=new Map,d=b(null),f=new Proxy(d,{get(e,u){if(\\\"then\\\"===u)return;let d=p.get(u);return d||p.set(u,d=(...e)=>{const p=[i,u,s?e.map(s):e];if(A){r?postMessage({ID:t,data:p}):n.postMessage(p),c(i,0),i[0]=0;const e=i[1]?o(i[1],a):void 0;if(e instanceof Error)throw e;return e}{const[e,t]=l();return p[0]=e,n.postMessage(p),t.promise}}),d},set:x});return n.onmessage=async({data:[e,t,r]})=>{if(\\\"string\\\"==typeof e)u(e,t,r);else{const o=await(async(e,t,n,r)=>{const s=[e,null,null];try{const e=await t(...n);s[1]=r?r(e):e}catch(e){s[2]=e}return s})(e,d[t],r,s);n.postMessage(o)}},{native:A,proxy:f}};const D=\\\"apply\\\",M=\\\"construct\\\",C=\\\"defineProperty\\\",L=\\\"deleteProperty\\\",I=\\\"get\\\",U=\\\"getOwnPropertyDescriptor\\\",H=\\\"getPrototypeOf\\\",W=\\\"has\\\",N=\\\"isExtensible\\\",J=\\\"ownKeys\\\",q=\\\"preventExtensions\\\",z=\\\"set\\\",K=\\\"setPrototypeOf\\\";var G=Object.freeze({__proto__:null,APPLY:D,CONSTRUCT:M,DEFINE_PROPERTY:C,DELETE_PROPERTY:L,GET:I,GET_OWN_PROPERTY_DESCRIPTOR:U,GET_PROTOTYPE_OF:H,HAS:W,IS_EXTENSIBLE:N,OWN_KEYS:J,PREVENT_EXTENSION:q,SET:z,SET_PROTOTYPE_OF:K});const Y=\\\"destruct\\\",V=\\\"array\\\",X=\\\"function\\\",Z=\\\"null\\\",Q=\\\"number\\\",ee=\\\"object\\\",te=\\\"symbol\\\",ne=\\\"undefined\\\";function re(){return this}const se=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)})),oe=Object.create(null),ae=(e,t,{debug:n,handler:r,return:s,token:o=e}=oe)=>{const a=s||new Proxy(e,r||oe),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),se.register(...i),a},{Object:ie,Proxy:ce,Reflect:le}=globalThis,{isArray:ue}=Array,{ownKeys:pe}=le,{create:de,hasOwn:fe,values:ye}=ie,he=(e,t)=>t===V?e[0]:t===X?e():t===ee?e.$:e,me=(e,t,n,r)=>{const s={type:{value:t}},o=fe(e,\\\"valueOf\\\");for(const a of ye(G)){let i=r(e[a]||le[a]);if(o&&a===I){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,he(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return de(e,s)},we=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case ee:case ne:r||(r=!1);case X:break;default:r=!1,t===e&&(t=ie(e))}const s=new ce(t,n),{destruct:o}=n;return o?ae(e,o,{token:r,return:s}):s},ge=e=>t=>{const n=typeof t;return n===ee?t?e.get(t)?.[0]??(e=>ue(e)?V:ee)(t):Z:n},be=e=>t=>{let n=typeof t;switch(n){case ee:if(!t){n=Z;break}case X:const r=e.get(t);r&&([n,t]=r)}return[n,t]},_e=e=>((e=>{se.unregister(e)})(e),e);var Ae=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:_e,pair:be(t),typeOf:ge(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of pe(e)){if(fe(o,t))continue;const a=e[t];switch(t){case V:{const e=me(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(we(t,[t],e,...n),V,t);break}case X:{const e=me(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(we(t,(r=t,re.bind(r)),e,...n),X,t);var r};break}case ee:{const e=me(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(we(t,{$:t},e,...n),ee,t);break}default:{const e=me(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(we(n,n,e,...r),t,n);break}}}return o};const{drop:Ee,get:ve,hold:Se}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===Q?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})();var ke=Object.fromEntries([V,\\\"bigint\\\",\\\"boolean\\\",X,Z,Q,ee,\\\"string\\\",te,ne].map(((e,t)=>[e,t])));const{[J]:xe}=Reflect,je=new Map(xe(Symbol).filter((e=>typeof Symbol[e]===te)).map((e=>[Symbol[e],e]))),Be=e=>je.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:Pe}=Array,{isView:$e}=ArrayBuffer,{[D]:Fe}=Reflect;var Re=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case ke[ee]:return null==t?globalThis:typeof t===Q?r(t,l.object):t;case ke[V]:return typeof t===Q?r(t,l.array):t;case ke[X]:return typeof t===Q?r(t,l.function):ve(parseInt(t));case ke[te]:return(e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of je)if(n===e)return t})(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case ee:if(r==globalThis||null==r)r=null;else if(typeof r===ee&&!$e(r))if(r=t(r),Pe(r))r=r.map(o);else for(const e in r)r[e]=o(r[e]);return[ke[ee],r];case V:return[ke[V],typeof r===Q?r:t(r).map(o)];case X:return[ke[X],typeof r===X?String(Se(t(r))):r];case te:return[ke[te],Be(e)];default:return[ke[n],r]}},a=(...t)=>s(e(...t)),i={[C]:(e,t,n)=>a(C,e,o(t),o(n)),[L]:(e,t)=>a(L,e,o(t)),[I]:(e,t)=>a(I,e,o(t)),[H]:e=>a(H,e),[U]:(e,t)=>{const n=a(U,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[W]:(e,t)=>a(W,e,o(t)),[N]:e=>a(N,e),[J]:e=>a(J,e).map(s),[q]:e=>a(q,e),[z]:(e,t,n)=>a(z,e,o(t),o(n)),[K]:(e,t)=>a(K,e,o(t)),[Y](t){n.delete(t),e(Y,t)}},c={[ee]:i,[V]:i,[X]:{...i,[D]:(e,...t)=>a(D,e,...t.map(o)),[M]:(e,...t)=>a(M,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=Ae(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case D:{const[e,t]=n;return o(await Fe(ve(r),s(e),t.map(s)))}case Y:Ee(r)}}}};const Oe={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Te=new WeakMap,De=e=>{const t=e||console,n={buffered:Ce,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Te.set(t,n),t}}},Me=new TextDecoder,Ce=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(Me.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},Le=(e,...t)=>Oe[typeof e](e,...t),{isArray:Ie}=Array,{assign:Ue,create:He,defineProperty:We,entries:Ne}=Object,{all:Je,resolve:qe}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),ze=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function Ke(e){return e.startsWith(\\\".\\\")?ze(e,this):e}const Ge=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Ye=e=>Function(`'use strict';return (${e})`)(),Ve=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Xe=Symbol.for(\\\"polyscript.js_modules\\\"),Ze=new Map;We(globalThis,Xe,{value:Ze}),new Proxy(Ze,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Qe=(e,t)=>!t.startsWith(\\\"_\\\"),et=(e,t)=>new Proxy(e,{has:Qe,get:(e,n)=>e[t][n]}),tt=(e,t)=>import(e).then((e=>{Ze.set(t,{...e})})),nt=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(Ue(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),rt=e=>/\\\\.css$/i.test(new URL(e).pathname),st=(e,t)=>e.has(t),ot=e=>[...e.keys()];var at=(e,t,n,r)=>{const s=globalThis[Xe];if(n)for(let[e,t]of Ne(n)){let n=s.get(t);n&&!Ie(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:st,ownKeys:ot,get:(e,s)=>{let o=e.get(s);if(Ie(o)){let a=o;o=null;for(let e of a)e=ze(e,r),rt(e)?n.importCSS(e):(n.importJS(e,s),o=t[Xe].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const it=new Map,ct=e=>it.get(e),lt=(e,t)=>{try{return Function(\\\"require\\\",t)(ct)}catch(t){Te.get(e).stderr(t)}};var ut={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:e=>De().get(e),registerJSModule(e,t,n){it.set(t,n)},run:lt,runAsync:lt,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(ct,n)}catch(t){Te.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const pt=Object.getOwnPropertyDescriptors(Response.prototype),dt=e=>\\\"function\\\"==typeof e,ft={get:(e,t)=>pt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!dt(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,pt[t]):((e,t)=>dt(t)?t.bind(e):t)(e,e[t])};var yt=(e,...t)=>new Proxy(fetch(e,...t),ft);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const ht=!globalThis.window,mt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):gt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},wt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},gt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},bt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},_t=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},At=(e,t)=>yt(ze(e,t)).arrayBuffer(),Et=(e,t,n,r)=>Je((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(Ie(r))return r.map((n=>({url:_t([e,n]),path:_t([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:_t([t,s])}]}))})(n).map((({url:n,path:s})=>At(n,r).then((n=>e.writeFile(t,s,n)))))),vt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,St=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),kt=(e,t,n,r)=>Je((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of Ne(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,St(o,t))}else{const e=St(s,t),a=vt(e,St(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>At(n,r).then((r=>e.writeFile(t,s,r,n)))))),xt=({main:e,worker:t},n)=>{const r=[];if(t&&ht)for(let[e,s]of Ne(t))e=ze(e,n),r.push(tt(e,s));if(e&&!ht)for(let[t,s]of Ne(e))t=ze(t,n),rt(t)?nt(t):r.push(tt(t,s));return Je(r)},jt=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))};let Bt=\\\"coincident-\\\";try{new SharedArrayBuffer(4,{maxByteLength:8}),Bt+=crypto.randomUUID()}catch(Pt){Bt+=Math.random().toString(36).substring(2)}var Pt={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{defineProperty:$t}=Object,Ft=e=>{switch(e[Ot++]){case Pt.array:{const t=e[Ot++],n=[];e[Ot-2]=n;for(let r=0;r<t;r++)n[r]=Ft(e);return n}case Pt.object:{const t=e[Ot++],n={};e[Ot-2]=n;for(let r=0;r<t;r++)n[Ft(e)]=Ft(e);return n}case Pt.string:{const t=e[Ot++];return e[Ot-2]=t,t}case Pt.ref:return e[e[Ot++]];case Pt.number:return e[Ot++];case Pt.bigint:return BigInt(e[Ot++]);case Pt.true:return!0;case Pt.false:return!1;case Pt.null:return null;case Pt.undefined:return;case Pt.buffer:{const t=e[Ot++],n=e[Ot++],r=[t];n&&r.push({maxByteLength:n});const s=new ArrayBuffer(...r);e[Ot-3]=s;const o=new Uint8Array(s);for(let n=0;n<t;n++)o[n]=e[Ot++];return s}case Pt.view:{const t=e[Ot++],n=e[Ot++],r=new globalThis[t](Ft(e),n);return e[Ot-3]=r,r}case Pt.symbol:{const t=e[Ot++];return t.startsWith(\\\"Symbol.\\\")?Symbol[t.split(\\\".\\\")[1]]:Symbol.for(t)}case Pt.date:{const t=new Date(e[Ot++]);return e[Ot-2]=t,t}case Pt.map:{const t=e[Ot++],n=new Map;e[Ot-2]=n;for(let r=0;r<t;r++){const t=Ft(e),r=Ft(e);void 0!==t&&n.set(t,r)}return n}case Pt.set:{const t=e[Ot++],n=new Set;e[Ot-2]=n;for(let r=0;r<t;r++){const t=Ft(e);void 0!==t&&n.add(t)}return n}case Pt.regexp:{const t=e[Ot++],n=e[Ot++],r=new RegExp(t,n);return e[Ot-4]=r,r}case Pt.error:{const t=globalThis[e[Ot++]]||Error,n=e[Ot++],r=e[Ot++],s=e[Ot++],o=new t(n,{cause:r});return e[Ot-5]=$t(o,\\\"stack\\\",{value:s}),o}default:throw new Error(`Unknown type: ${e[Ot-1]}`)}},{parse:Rt}=JSON;let Ot=0;const{isArray:Tt}=Array,{isView:Dt}=ArrayBuffer,{stringify:Mt}=JSON,Ct=(e,t,n)=>{const r=t.get(n);return\\\"number\\\"==typeof r&&(e.push(Pt.ref,r),!0)},Lt=e=>{const t=typeof e;switch(t){case\\\"function\\\":case\\\"undefined\\\":return\\\"\\\";case\\\"object\\\":return null===e?\\\"null\\\":\\\"object\\\";default:return t}},It=(e,t,n,r=Lt(n))=>{switch(r){case\\\"null\\\":e.push(Pt.null);break;case\\\"object\\\":if(Ct(e,t,n))break;switch(t.set(n,e.length),!0){case Tt(n):{const r=n.length;e.push(Pt.array,r);for(let s=0;s<r;s++){const r=n[s],o=Lt(r);o?It(e,t,r,o):e.push(Pt.undefined)}break}case Dt(n):{const r=e.push(Pt.view,n.constructor.name,n.byteOffset);if(n=n.buffer,Ct(e,t,n))break;t.set(n,r)}case n instanceof ArrayBuffer:{const t=n.byteLength,r=n.resizable?n.maxByteLength:0;if(e.push(Pt.buffer,t,r),t){const t=new Uint8Array(n);for(let n=0;n<t.length;n+=65535)e.push.apply(e,t.subarray(n,n+65535))}break}case n instanceof Date:e.push(Pt.date,+n);break;case n instanceof Map:{const r=e.push(Pt.map,0);let s=0;for(const[r,o]of n){const n=Lt(r),a=Lt(o);n&&a&&(It(e,t,r,n),It(e,t,o,a),s++)}e[r-1]=s;break}case n instanceof Set:{const r=e.push(Pt.set,0);let s=0;for(const r of n){const n=Lt(r);n&&(It(e,t,r,n),s++)}e[r-1]=s;break}case n instanceof RegExp:e.push(Pt.regexp,n.source,n.flags);break;case n instanceof Error:e.push(Pt.error,n.name,n.message,n.cause,n.stack);break;default:{if(\\\"toJSON\\\"in n){const r=n.toJSON();if(r===n){e.push(Pt.object,0);break}n=r,t.set(n,e.length)}const r=e.push(Pt.object,0);let s=0;for(const r in n){const o=n[r],a=Lt(o);a&&(It(e,t,r,\\\"string\\\"),It(e,t,o,a),s++)}e[r-1]=s;break}}break;case\\\"boolean\\\":e.push(n?Pt.true:Pt.false);break;case\\\"string\\\":if(Ct(e,t,n))break;t.set(n,e.length),e.push(Pt.string,n);break;case\\\"bigint\\\":e.push(Pt[r],n.toString());break;case\\\"symbol\\\":{const t=(e=>{const t=e.toString().slice(7,-1);return t.startsWith(\\\"Symbol.\\\")||Symbol.keyFor(e)?t:\\\"\\\"})(n);t&&e.push(Pt[r],t);break}case\\\"\\\":break;default:e.push(Pt[r],n)}},Ut={parse:e=>{Ot=0;const t=Rt(e);return t.length?Ft(t):void 0},stringify:e=>{const t=[];return It(t,new Map,e),Mt(t)}},Ht=new WeakMap,Wt=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await kt(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await Et(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await xt(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},Nt=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await Ht.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=Ut),e.registerJsModule(t,n)},Jt=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},qt=(e,t,...n)=>{try{return e.runPython(Le(t),...n)}catch(t){Te.get(e).stderr(t)}},zt=async(e,t,...n)=>{try{return await e.runPythonAsync(Le(t),...n)}catch(t){Te.get(e).stderr(t)}},Kt=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Te.get(e).stderr(t)}};var Gt=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const Yt=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e);async function Vt(e,t){return new Promise(((n,r)=>{e.syncfs(t,(e=>{e?r(e):n()}))}))}function Xt(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await Zt(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach((function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)})),i.sort();const c=[];if(Object.keys(o.entries).forEach((function(e){n.entries[e]||(c.push(e),a++)})),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):gt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await Vt(t,!0),{syncfs:async()=>await Vt(t,!1)}}}const Zt=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},Qt=(e,t)=>{try{e.mkdir(t)}catch(e){}},en=jt(\\\"mpy\\\");var tn={type:\\\"micropython\\\",module:(e=\\\"1.24.1\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=De({stderr:Ce(console.error),stdout:Ce(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),en(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=nn.bind(this,i,r);return Ht.set(i,c),await Wt(this,en,i,t,r),this.writeFile(i,\\\"./mip.py\\\",Gt),t.packages&&(en(\\\"Loading packages\\\"),await c(t.packages.map(Ke,r)),en(\\\"Loaded packages\\\")),en(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=Xt(i._module)),i},registerJSModule:Nt,run:qt,runAsync:zt,runEvent:Kt,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=Jt(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DPXsOtR5.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)Qt(s,i);else{Qt(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return mt(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return mt(i,t,n)}};async function nn(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=ze(s,t),r=await yt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const rn={dict_converter:Object.fromEntries},{stringify:sn}=JSON;let on=!1;const an=e=>(...t)=>{try{return on=!0,e(...t)}finally{on=!1}};let cn=!1;const ln=()=>{if(cn)return;cn=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){on=!1;let o=e.get(s)?.deref();if(!o)try{o=ae(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),on=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return on&&n(t),s(this,e,t)}},call:{value(e,...t){return on&&n(t),s(this,e,t)}}})},un=jt(\\\"py\\\"),pn=new WeakMap;var dn={type:\\\"pyodide\\\",module:(e=\\\"0.27.4\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){ht||\\\"auto\\\"!==t.experimental_create_proxy||ln(),un(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;s&&(s=s.map(Ke,r)),un(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=new i(a),l={indexURL:a},u=\\\"never\\\"!==t.packages_cache;if(await c.sync(),u){if(s){s=s.sort();const e=sn(s);if(c.has(e)){const t=new Blob([c.get(e)],{type:\\\"application/json\\\"});l.lockFileURL=URL.createObjectURL(t),l.packages=s.map((e=>e.split(/[>=<]=/)[0])),s=null}}}else c.clear();un(\\\"Loaded Storage\\\");const{stderr:p,stdout:d,get:f}=De(),y=await f(e({stderr:p,stdout:d,...l})),h=yn.bind(y);return o&&pn.set(y,o),Ht.set(y,h),await Wt(this,un,y,t,r),s&&await h(s,c,u),await c.close(),l.lockFileURL&&URL.revokeObjectURL(l.lockFileURL),un(\\\"Loaded Pyodide\\\"),y},registerJSModule:Nt,run:an(qt),runAsync:an(zt),runEvent:an(Kt),transform:(e,t)=>fn.call(e,t),writeFile:(e,t,n,r)=>{const s=Jt(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return mt({FS:o,PATH:a,PATH_FS:i},t,n)}};function fn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(rn);if(e instanceof Map)return new Map([...e.entries()]);if(Ie(e))return e.map(fn,this)}return e}async function yn(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,un(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(pn.has(this)&&o.set_index_urls(pn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(sn(e),n)}o.destroy()}const hn=\\\"ruby-wasm-wasi\\\",mn=hn.replace(/\\\\W+/g,\\\"_\\\");var wn={type:hn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await yt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await kt(this,a,t.files,r),t.fetch&&await Et(this,a,t.fetch,r),t.js_modules&&await xt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${mn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(Le(t),...n),runAsync:(e,t,...n)=>e.evalAsync(Le(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${mn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${hn}`)}};var gn={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=De(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await kt(this,c,n.files,s),n.fetch&&await Et(this,c,n.fetch,s),n.js_modules&&await xt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(Le(t),...n)}catch(t){Te.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(Le(t),...n)}catch(t){Te.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Te.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(gt(e,wt(t)),t=bt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const bn=new WeakMap,_n=async(e,t)=>{const{shelter:n,destroy:r,io:s}=bn.get(e),{output:o,result:a}=await n.captureR(Le(t));for(const{type:e,data:t}of o)s[e](t);return ae(a,r,{token:!1})};var An={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.2\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=De(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return bn.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:Te.get(o)}),t.files&&await kt(this,o,t.files,r),t.fetch&&await Et(this,o,t.fetch,r),t.js_modules&&await xt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:_n,runAsync:_n,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const En=new Map,vn=new Map,Sn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=En.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(vn.set(t,e),s(r,e,n,o))))}}),kn=e=>{for(const t of[].concat(e.type))En.set(t,e)};for(const e of[ut,tn,dn,wn,gn,An])kn(e);const{parse:xn}=JSON,jn=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[ze(e),n]})(e,t);return\\\"json\\\"===s?n=yt(r).json():\\\"toml\\\"===s?n=yt(r).text().then(Yt):\\\"string\\\"===s?n=Bn(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=Bn(n)),[n,e=r]},Bn=e=>{try{return xn(e)}catch(t){return Yt(e)}},Pn=\\\"BeforeRun\\\",$n=\\\"AfterRun\\\",Fn=[`code${Pn}`,`code${Pn}Async`,`code${$n}`,`code${$n}Async`],Rn=[\\\"onWorker\\\",\\\"onReady\\\",`on${Pn}`,`on${Pn}Async`,`on${$n}`,`on${$n}Async`];function On(e,t){const{run:n,runAsync:r}=En.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Tn=(e,t,n,r,s,o)=>{if(s||o){const a=On.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let Dn,Mn,Cn;const Ln=(e,t)=>{addEventListener(e,t||(async t=>{try{await Dn,Mn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{proxy:In,native:Un,window:Hn,isWindowProxy:Wn}=await(async e=>{const t=await T(e),{isProxy:n,global:r,method:s}=Re(t.proxy[w],e?.transform||(e=>e));return t.proxy[g]=s,{...t,window:r,isWindowProxy:n}})({decoder:h,transform:e=>Cn?Cn(e):e}),Nn={polyfill:!Un,sync:In,window:Un?Hn:null,isWindowProxy:Wn,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Ln(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Dn=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:d,async:f}=e,y=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),h=await((e,t,n,r={})=>(t&&([r,t]=jn(t,n,r)),qe(r).then((n=>Sn[e](n,t)))))(y,t,n,d),{js_modules:m}=vn.get(y),w=m?.main,g=He(En.get(l)),b=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Te.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,u||l,d||{},h);let _=\\\"run\\\";if(f&&(_+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Fn){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,Ve(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,Ve(t),...o);return r&&await s(e,r,...o),a}})(g,_,n,r);for(const n of Rn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=Ye(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}Tn(g,b,Nn,f,e,t)}let A,E,v,S=null,k=\\\"\\\";Un&&(({CustomEvent:A,document:E}=Hn),S=o&&E.getElementById(o)||null,v=e=>Ge(S,u||l,e,!0,A));const x=at(Hn,In,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,et(r,e));t.registerJSModule(n,s,r)})(l,g,h,x),g.registerJSModule(h,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:Nn,currentScript:S,config:b.config,js_modules:x,get target(){return!k&&S&&(\\\"SCRIPT\\\"===c?S.after(Ue(Hn.document.createElement(`script-${u||l}`),{id:k=`${o}-target`})):(k=o,S.replaceChildren(),S.style.display=\\\"block\\\")),k}}),Mn=g.runEvent.bind(g,h),Cn=g.transform.bind(g,h),S&&v(\\\"ready\\\"),s?.onReady&&Ye(s?.onReady).call(g,On.call(g,b,h),Nn),await g[_](h,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";h.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&h.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return S&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),h}catch(e){postMessage(e)}})(),Ln(\\\"error\\\"),Ln(\\\"message\\\"),Ln(\\\"messageerror\\\"),Un&&addEventListener(\\\"py:progress\\\",(({type:e,detail:t})=>{Hn.dispatchEvent(new Hn.CustomEvent(e,{detail:t}))}))}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTROY } from '../proxy/traps.js';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport coincident from '../main.js';\nimport proxyMain from '../proxy/main.js';\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  const esm = options?.import;\n  const exports = coincident(options);\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      proxy[MAIN] = proxyMain(\n        // options.import = name => valid(name) && name\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","let e=\"coincident-\";try{new SharedArrayBuffer(4,{maxByteLength:8}),e+=crypto.randomUUID()}catch(t){e+=Math.random().toString(36).substring(2)}var t={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{defineProperty:r}=Object,s=e=>{switch(e[a++]){case t.array:{const t=e[a++],r=[];e[a-2]=r;for(let n=0;n<t;n++)r[n]=s(e);return r}case t.object:{const t=e[a++],r={};e[a-2]=r;for(let n=0;n<t;n++)r[s(e)]=s(e);return r}case t.string:{const t=e[a++];return e[a-2]=t,t}case t.ref:return e[e[a++]];case t.number:return e[a++];case t.bigint:return BigInt(e[a++]);case t.true:return!0;case t.false:return!1;case t.null:return null;case t.undefined:return;case t.buffer:{const t=e[a++],r=e[a++],s=[t];r&&s.push({maxByteLength:r});const n=new ArrayBuffer(...s);e[a-3]=n;const c=new Uint8Array(n);for(let r=0;r<t;r++)c[r]=e[a++];return n}case t.view:{const t=e[a++],r=e[a++],n=new globalThis[t](s(e),r);return e[a-3]=n,n}case t.symbol:{const t=e[a++];return t.startsWith(\"Symbol.\")?Symbol[t.split(\".\")[1]]:Symbol.for(t)}case t.date:{const t=new Date(e[a++]);return e[a-2]=t,t}case t.map:{const t=e[a++],r=new Map;e[a-2]=r;for(let n=0;n<t;n++){const t=s(e),n=s(e);void 0!==t&&r.set(t,n)}return r}case t.set:{const t=e[a++],r=new Set;e[a-2]=r;for(let n=0;n<t;n++){const t=s(e);void 0!==t&&r.add(t)}return r}case t.regexp:{const t=e[a++],r=e[a++],s=new RegExp(t,r);return e[a-4]=s,s}case t.error:{const t=globalThis[e[a++]]||Error,s=e[a++],n=e[a++],c=e[a++],o=new t(s,{cause:n});return e[a-5]=r(o,\"stack\",{value:c}),o}default:throw new Error(`Unknown type: ${e[a-1]}`)}},{parse:n}=JSON;let a=0;const c=e=>{a=0;const t=n(e);return t.length?s(t):void 0},{isArray:o}=Array,{isView:u}=ArrayBuffer,{stringify:f}=JSON,i=(e,r,s)=>{const n=r.get(s);return\"number\"==typeof n&&(e.push(t.ref,n),!0)},l=e=>{const t=typeof e;switch(t){case\"function\":case\"undefined\":return\"\";case\"object\":return null===e?\"null\":\"object\";default:return t}},b=(e,r,s,n=l(s))=>{switch(n){case\"null\":e.push(t.null);break;case\"object\":if(i(e,r,s))break;switch(r.set(s,e.length),!0){case o(s):{const n=s.length;e.push(t.array,n);for(let a=0;a<n;a++){const n=s[a],c=l(n);c?b(e,r,n,c):e.push(t.undefined)}break}case u(s):{const n=e.push(t.view,s.constructor.name,s.byteOffset);if(s=s.buffer,i(e,r,s))break;r.set(s,n)}case s instanceof ArrayBuffer:{const r=s.byteLength,n=s.resizable?s.maxByteLength:0;if(e.push(t.buffer,r,n),r){const t=new Uint8Array(s);for(let r=0;r<t.length;r+=65535)e.push.apply(e,t.subarray(r,r+65535))}break}case s instanceof Date:e.push(t.date,+s);break;case s instanceof Map:{const n=e.push(t.map,0);let a=0;for(const[t,n]of s){const s=l(t),c=l(n);s&&c&&(b(e,r,t,s),b(e,r,n,c),a++)}e[n-1]=a;break}case s instanceof Set:{const n=e.push(t.set,0);let a=0;for(const t of s){const s=l(t);s&&(b(e,r,t,s),a++)}e[n-1]=a;break}case s instanceof RegExp:e.push(t.regexp,s.source,s.flags);break;case s instanceof Error:e.push(t.error,s.name,s.message,s.cause,s.stack);break;default:{if(\"toJSON\"in s){const n=s.toJSON();if(n===s){e.push(t.object,0);break}s=n,r.set(s,e.length)}const n=e.push(t.object,0);let a=0;for(const t in s){const n=s[t],c=l(n);c&&(b(e,r,t,\"string\"),b(e,r,n,c),a++)}e[n-1]=a;break}}break;case\"boolean\":e.push(s?t.true:t.false);break;case\"string\":if(i(e,r,s))break;r.set(s,e.length),e.push(t.string,s);break;case\"bigint\":e.push(t[n],s.toString());break;case\"symbol\":{const r=(e=>{const t=e.toString().slice(7,-1);return t.startsWith(\"Symbol.\")||Symbol.keyFor(e)?t:\"\"})(s);r&&e.push(t[n],r);break}case\"\":break;default:e.push(t[n],s)}},h=e=>{const t=[];return b(t,new Map,e),f(t)};export{c as decode,h as encode};\n","import * as FLATTED from '@webreflection/coincident/flatted';\nconst JSON = { parse: FLATTED.decode, stringify: FLATTED.encode };\n\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.24.1') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.4') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.2') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","Promise","onsuccess","onerror","objectStore","constructor","name","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","startsWith","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","callback","context","call","has","getKey","getAllKeys","set","put","values","Symbol","toStringTag","IDBMapSync","Map","queue","sync","workers","withResolvers","ignore","Set","workersHandler","freeze","_","promise","w","e","ref","array","object","number","string","true","false","null","buffer","view","symbol","date","bigint","undefined","regexp","error","SharedArrayBuffer","maxByteLength","crypto","randomUUID","Math","random","toString","substring","isArray","Array","isView","s","ArrayBuffer","stringify","n","JSON","a","o","c","u","f","byteOffset","byteLength","resizable","Uint8Array","apply","subarray","Date","RegExp","source","flags","Error","cause","stack","toJSON","slice","keyFor","Uint16Array","charCodeAt","DESTROY","CHANNEL","MAIN","WORKER","encoder","encode","ui16a","create","ID","native","Int32Array","BYTES_PER_ELEMENT","defaults","useUTF16","circular","identity","proxied","ok","UID","globalThis","notify","Atomics","coincident$1","transform","Worker","url","port1","channel","port2","MessageChannel","next","$","id","uid","wr","rtr","callbacks","resolving","proxy","cb","postMessage","setTimeout","console","warn","clearTimeout","deadlock","addEventListener","data","stopImmediatePropagation","preventDefault","stop","onmessage","async","i32","response","OWN_KEYS","DESTRUCT","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","numeric","fromEntries","ownKeys","Reflect","known","filter","toSymbol","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","hold","return","token","register","eventsHandler","WeakMap","defineProperty","listener","invoke","at","concat","proxyMain","__worker__","drop","ids","b","had","heap","proxies","onGC","toEntry","TYPE","fromEntry","numericTYPE","fn","deref","currentTarget","methods","method","handleEvent","WeakRef","for","fromSymbol","asEntry","asImport","import","globals","TRAP","descriptor","add","re","place","q","URL","href","esm","exports","coincident","location","terminate","io","stdio","localIO","buffered","stderr","stdout","log","engine","interpreter","decoder","TextDecoder","EOL","maybeUI8","decode","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","dedent","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","absoluteURL","base","fixedRelative","nodeInfo","node","tag","tagName","dispatch","worker","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","isSync","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","pop","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","createProgress","BigInt","parse","loader","loadProgress","self","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","mip","TextEncoder","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","isRealDir","toAbsolute","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","entry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","getTime","sort","remove","reverse","relPath","normalize","NATIVEFS_ASYNC","TypeError","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","indexURLs","pyodide","loadPyodide","experimental_create_proxy","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","revokeObjectURL","unpackArchive","ffi","_log","rest","loadPackage","micropip","set_index_urls","keep_going","frozen","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","index","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","env","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","json","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","serviceWorker","service_worker","isHook","Hook","resolver","bootstrap","ready","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","details","XWorker","$xworker","closest","body","wn","sw","versionValue","configValue","workerName","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","v","cfg","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","$customObserver","dontBother","indexOf","WeakSet","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,32,44]}