{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../esm/workers.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/proxy/traps.js","../node_modules/coincident/src/window/constants.js","../node_modules/sabayon/src/shared.js","../node_modules/sabayon/src/main.js","../node_modules/coincident/src/shared.js","../node_modules/coincident/src/main.js","../node_modules/proxy-target/esm/types.js","../node_modules/coincident/src/window/types.js","../node_modules/coincident/src/window/symbol.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/_nativefs.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","export const DESTROY = 'destroy';\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = 'c70de905-a212-4eca-80aa-dad8bd4e677b';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","// (c) Andrea Giammarchi - MIT\n\nconst ACTION_INIT = 0;\nconst ACTION_NOTIFY = 1;\nconst ACTION_WAIT = 2;\nconst ACTION_SW = 3;\n\nconst { ArrayBuffer, Atomics: $Atomics, Promise } = globalThis;\nconst { isArray } = Array;\nconst { create, getPrototypeOf, values } = Object;\n\nconst TypedArray = getPrototypeOf(Int32Array);\nconst Atomics = create($Atomics);\n\nconst dispatch = ({ currentTarget, type, origin, lastEventId, source, ports }, data) =>\n  currentTarget.dispatchEvent(new MessageEvent(type, { data, origin, lastEventId, source, ports }));\n\nconst withResolvers = () => Promise.withResolvers();\n\nlet id = 0;\nconst views = new Map;\nconst extend = (Class, SharedArrayBuffer) => class extends Class {\n  constructor(value, ...rest) {\n    super(value, ...rest);\n    if (value instanceof SharedArrayBuffer)\n      views.set(this, [id++, 0, withResolvers()]);\n  }\n};\n\nconst ignoreList = new WeakSet;\n\n/**\n * @template {T}\n * @callback PassThrough\n * @param {T} value\n * @returns {T}\n */\n\n/** @type {PassThrough} */\nconst ignoreDirect = value => value;\n\n/** @type {PassThrough} */\nconst ignorePatch = value => {\n  ignoreList.add(value);\n  return value;\n};\n\nconst isChannel = (event, channel) => {\n  const { data } = event;\n  const yes = isArray(data) && (\n    data.at(0) === channel ||\n    (data.at(1) === ACTION_INIT && !channel)\n  );\n  if (yes) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  return yes;\n};\n\nconst isObject = value => (\n  value !== null &&\n  typeof value === 'object' &&\n  !ignoreList.has(value)\n);\n\nconst transferred = new WeakMap;\nconst transferViews = (data, transfer, visited) => {\n  if (views.has(data))\n    transfer.set(data, views.get(data)[0]);\n  else if (!(data instanceof TypedArray || data instanceof ArrayBuffer)) {\n    for (const value of values(data)) {\n      if (isObject(value) && !visited.has(value)) {\n        visited.add(value);\n        transferViews(value, transfer, visited);\n      }\n    }\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync#browser_compatibility\nconst waitAsyncPatch = (...args) => ({\n  value: new Promise(resolve => {\n    // encodeURIComponent('onmessage=e=>postMessage(!Atomics.wait(...e.data))')\n    let w = new Worker('data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))');\n    w.onmessage = () => resolve('ok');\n    w.postMessage(args);\n  })\n});\n\nconst waitAsyncPoly = (view, index) => {\n  const value = views.get(view), [id, _, { promise }] = value;\n  value[1] = index;\n  return [id, promise];\n};\n\nconst actionNotify = (_view, _id, _index) => {\n  for (const [view, [id, index, { resolve }]] of views) {\n    if (_id === id && _index === index) {\n      for (let i = 0; i < _view.length; i++) view[i] = _view[i];\n      views.delete(view);\n      resolve('ok');\n      break;\n    }\n  }\n};\n\nconst actionWait = (event, transfer, data) => {\n  for (const [view, id] of transfer)\n    transferred.set(view, [id, event.currentTarget]);\n  dispatch(event, data);\n};\n\nconst postData = (CHANNEL, data) => {\n  const transfer = new Map;\n  if (isObject(data)) transferViews(data, transfer, new Set);\n  return transfer.size ? [CHANNEL, ACTION_WAIT, transfer, data] : data;\n};\n\nconst getData = view => transferred.get(view);\n\nexport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics, TypedArray,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  dispatch,\n  extend,\n  isChannel,\n  views,\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  extend,\n  isChannel,\n  withResolvers,\n} from './shared.js';\n\nlet {\n  BigInt64Array,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker,\n} = globalThis;\n\nlet ignore = ignoreDirect;\nlet polyfill = false;\n\nconst asModule = options => ({ ...options, type: 'module' });\n\ntry {\n  new SharedArrayBuffer(4);\n\n  Worker = class extends Worker {\n    constructor(url, options) {\n      super(url, asModule(options));\n    }\n  }\n\n  if (!Atomics.waitAsync)\n    Atomics.waitAsync = waitAsyncPatch;\n}\ncatch (_) {\n  const CHANNEL = crypto.randomUUID();\n\n  const sync = new Map;\n\n  const addListener = (self, type, handler, ...rest) => {\n    self.addEventListener(type, handler, ...rest);\n  };\n\n  const register = ({ serviceWorker: s }, sw, done) => {\n    let w, c = true;\n    addListener(s, 'message', event => {\n      if (isChannel(event, CHANNEL)) {\n        const [_, id, index] = event.data;\n        const uid = [id, index].join(',');\n        const done = view => {\n          sync.delete(uid);\n          w.postMessage([ CHANNEL, id, index, view ]);\n        };\n        const view = sync.get(uid);\n        if (view) done(view);\n        else {\n          const { promise, resolve } = withResolvers();\n          sync.set(uid, resolve);\n          promise.then(done);\n        }\n      }\n    });\n    // use previous registration, if any, before registering it\n    s.getRegistration(sw)\n      .then(r => (r ?? s.register(sw)))\n      .then(function ready(r) {\n        c = c && !!s.controller;\n        w = (r.installing || r.waiting || r.active);\n        if (w.state === 'activated') {\n          if (c) done();\n          else location.reload();\n        }\n        else\n          addListener(w, 'statechange', () => ready(r), { once: true });\n      });\n  };\n\n  ignore = ignorePatch;\n  polyfill = true;\n\n  Atomics.notify = (view, index) => {\n    const [id, worker] = getData(view);\n    const uid = [id, index].join(',');\n    const known = sync.get(uid);\n    if (known) known(view);\n    else sync.set(uid, view);\n    worker.postMessage([CHANNEL, ACTION_NOTIFY, view, id, index]);\n    return 0;\n  };\n\n  Atomics.waitAsync = (view, ...rest) => {\n    const [_, value] = waitAsyncPoly(view, ...rest);\n    return { value };\n  };\n\n  SharedArrayBuffer = class extends ArrayBuffer {}\n  BigInt64Array = extend(BigInt64Array, SharedArrayBuffer);\n  Int32Array = extend(Int32Array, SharedArrayBuffer);\n\n  let serviceWorker = null;\n  Worker = class extends Worker {\n    constructor(url, options) {\n      let sw = options?.serviceWorker || '';\n      if (sw) {\n        sw = new URL(sw, location.href).href;\n        options = { ...options, serviceWorker: sw };\n        if (!serviceWorker) {\n          const { promise, resolve } = withResolvers();\n          register(navigator, sw, resolve);\n          serviceWorker = promise;\n        }\n        serviceWorker.then(\n          () => super.postMessage([CHANNEL, ACTION_SW])\n        );\n      }\n      super(url, asModule(options));\n      super.postMessage([CHANNEL, ACTION_INIT, options]);\n      addListener(this, 'message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_NOTIFY: {\n              actionNotify(...rest);\n              break;\n            }\n            case ACTION_WAIT: {\n              actionWait(event, ...rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n    postMessage(data, ...rest) {\n      return super.postMessage(postData(CHANNEL, data), ...rest);\n    }\n  }\n}\n\nexport {\n  /** @type {globalThis.Atomics} */ Atomics,\n  /** @type {globalThis.BigInt64Array} */ BigInt64Array,\n  /** @type {globalThis.Int32Array} */ Int32Array,\n  /** @type {globalThis.SharedArrayBuffer} */ SharedArrayBuffer,\n  /** @type {globalThis.Worker} */ Worker,\n  ignore,\n  polyfill,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT,\n  ACTION_NOTIFY,\n  ACTION_WAIT,\n  Atomics,\n  isChannel,\n  withResolvers,\n} from 'sabayon/shared';\n\nconst { BYTES_PER_ELEMENT: I32_BYTES } = Int32Array;\nconst { BYTES_PER_ELEMENT: UI16_BYTES } = Uint16Array;\n\nconst { notify } = Atomics;\n\nconst decoder = new TextDecoder('utf-16');\n\nconst buffers = new WeakSet;\n\nconst transfer = (...args) => (buffers.add(args), args);\n\nlet seppuku = '';\nconst actionLength = (stringify, transform) => async (callback, results, [name, id, sb, args, isSync]) => {\n  if (isSync) seppuku = name;\n  try {\n    const result = await callback(...args);\n    if (result !== void 0) {\n      const serialized = stringify(transform ? transform(result) : result);\n      results.set(id, serialized);\n      sb[1] = serialized.length;\n    }\n  }\n  finally {\n    if (isSync) seppuku = '';\n    sb[0] = 1;\n    notify(sb, 0);\n  }\n};\nconst actionFill = (results, [id, sb]) => {\n  const result = results.get(id);\n  results.delete(id);\n  for (let ui16a = new Uint16Array(sb.buffer), i = 0, { length } = result; i < length; i++)\n    ui16a[i] = result.charCodeAt(i);\n  notify(sb, 0);\n};\nconst actionWait = (waitLength, results, map, rest) => {\n  const [name] = rest;\n  const callback = map.get(name);\n  if (!callback) throw new Error(`Unknown proxy.${name}()`);\n  waitLength(callback, results, rest);\n};\n\nconst warn = (name, seppuku) => setTimeout(\n  console.warn,\n  3e3,\n  `💀🔒 - proxy.${name}() in proxy.${seppuku}()`\n);\n\nlet uid = 0;\nconst invoke = (\n  [\n    CHANNEL,\n    i32View,\n    ignore,\n    isSync,\n    parse,\n    polyfill,\n    postMessage,\n    transform,\n    waitAsync,\n  ],\n  name,\n) => (...args) => {\n  let deadlock = seppuku !== '', timer = 0;\n  // slow operations between main and worker should likely not\n  // be tracked as the dance there would never deadlock, it just\n  // eventually slow down and that's it\n  if (deadlock && seppuku[0] !== '=' && seppuku[0] !== '-')\n    timer = warn(name, seppuku);\n  const id = uid++;\n  let transfer = [];\n  if (buffers.has(args.at(-1) || transfer))\n    buffers.delete(transfer = args.pop());\n  const data = ignore(transform ? args.map(transform) : args);\n  let sb = i32View(I32_BYTES * 2);\n  postMessage([CHANNEL, ACTION_WAIT, name, id, sb, data, isSync], { transfer });\n  return waitAsync(sb, 0).value.then(() => {\n    if (deadlock) clearTimeout(timer);\n    const length = sb[1];\n    if (!length) return;\n    const bytes = UI16_BYTES * length;\n    sb = i32View(bytes + (bytes % I32_BYTES));\n    postMessage([CHANNEL, ACTION_NOTIFY, id, sb]);\n    return waitAsync(sb, 0).value.then(() =>{\n      const ui16a = new Uint16Array(sb.buffer);\n      const sub = polyfill ? ui16a.subarray(0, length) : ui16a.slice(0, length);\n      return parse(decoder.decode(sub));\n    });\n  });\n};\n\nconst createProxy = (details, map) => new Proxy(map, {\n  get: (map, name) => {\n    let cb;\n    // the curse of potentially awaiting proxies in the wild\n    // requires this ugly guard around `then`\n    if (name !== 'then') {\n      cb = map.get(name);\n      if (!cb) {\n        cb = invoke(details, name);\n        map.set(name, cb);\n      }\n    }\n    return cb;\n  },\n  set: (map, name, callback) => (\n    name !== 'then' &&\n    !!map.set(name, callback)\n  ),\n});\n\nexport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  Atomics,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker as $Worker,\n  ignore,\n  polyfill,\n} from 'sabayon/main';\n\nimport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n} from './shared.js';\n\n/**\n * @typedef {Object} MainOptions\n * @prop {(text: string, ...args:any) => any} [parse=JSON.parse]\n * @prop {(value: any, ...args:any) => string} [stringify=JSON.stringify]\n * @prop {(value: any) => any} [transform]\n */\n\n/**\n * @callback Coincident\n * @param {MainOptions} [options]\n * @returns {{Worker: import('./ts.js').CoincidentWorker, polyfill: boolean, transfer: (...args: Transferable[]) => Transferable[]}}\n */\n\nexport default /** @type {Coincident} */ ({\n  parse,\n  stringify,\n  transform,\n} = JSON) => {\n  const waitLength = actionLength(stringify, transform);\n\n  class Worker extends $Worker {\n    constructor(url, options) {\n      const CHANNEL = crypto.randomUUID();\n      const map = new Map;\n      const results = new Map;\n      super(url, options);\n      this.proxy = createProxy(\n        [\n          CHANNEL,\n          bytes => new Int32Array(new SharedArrayBuffer(bytes)),\n          ignore,\n          false,\n          parse,\n          polyfill,\n          (...args) => this.postMessage(...args),\n          transform,\n          Atomics.waitAsync,\n        ],\n        map,\n      );\n      this.postMessage(ignore([CHANNEL, ACTION_INIT, options]));\n      this.addEventListener('message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_WAIT: {\n              actionWait(waitLength, results, map, rest);\n              break;\n            }\n            case ACTION_NOTIFY: {\n              actionFill(results, rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  return {\n    Worker,\n    polyfill,\n    transfer,\n  };\n};\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n].map((k, i) => [k, i]));\n","import { OWN_KEYS } from 'js-proxy/traps';\nimport { SYMBOL } from 'js-proxy/types';\n\nconst { [OWN_KEYS]: ownKeys } = Reflect;\n\nconst known = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const fromSymbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of known) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const toSymbol = value => (\n  known.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\nimport { TypedArray } from 'sabayon/shared';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        return [numeric[OBJECT], value instanceof TypedArray ? value : hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        if (!(value instanceof TypedArray)) {\n          for (const key in value)\n            value[key] = fromEntry(value[key]);\n        }\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident(JSON);\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise(((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o})))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise(((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),n).then(o)}async clear(){await this.#r((e=>e.clear()),r)}async delete(e){await this.#r((t=>t.delete(e)),r)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),n).then(o)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),n).then(o)}async keys(){return await this.#r((e=>e.getAllKeys()),n).then(o)}async set(e,t){return await this.#r((n=>n.put(t,e)),r),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}const c=\\\"object\\\"==typeof self?self:globalThis,l=e=>((e,t)=>{const n=(t,n)=>(e.set(n,t),t),r=s=>{if(e.has(s))return e.get(s);const[o,a]=t[s];switch(o){case 0:case-1:return n(a,s);case 1:{const e=n([],s);for(const t of a)e.push(r(t));return e}case 2:{const e=n({},s);for(const[t,n]of a)e[r(t)]=r(n);return e}case 3:return n(new Date(a),s);case 4:{const{source:e,flags:t}=a;return n(new RegExp(e,t),s)}case 5:{const e=n(new Map,s);for(const[t,n]of a)e.set(r(t),r(n));return e}case 6:{const e=n(new Set,s);for(const t of a)e.add(r(t));return e}case 7:{const{name:e,message:t}=a;return n(new c[e](t),s)}case 8:return n(BigInt(a),s);case\\\"BigInt\\\":return n(Object(BigInt(a)),s);case\\\"ArrayBuffer\\\":return n(new Uint8Array(a).buffer,a);case\\\"DataView\\\":{const{buffer:e}=new Uint8Array(a);return n(new DataView(e),a)}}return n(new c[o](a),s)};return r})(new Map,e)(0),u=\\\"\\\",{toString:p}={},{keys:d}=Object,f=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const n=p.call(e).slice(8,-1);switch(n){case\\\"Array\\\":return[1,u];case\\\"Object\\\":return[2,u];case\\\"Date\\\":return[3,u];case\\\"RegExp\\\":return[4,u];case\\\"Map\\\":return[5,u];case\\\"Set\\\":return[6,u];case\\\"DataView\\\":return[1,n]}return n.includes(\\\"Array\\\")?[1,n]:n.includes(\\\"Error\\\")?[7,n]:[2,n]},y=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),h=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const s=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},o=r=>{if(n.has(r))return n.get(r);let[a,i]=f(r);switch(a){case 0:{let t=r;switch(i){case\\\"bigint\\\":a=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+i);t=null;break;case\\\"undefined\\\":return s([-1],r)}return s([a,t],r)}case 1:{if(i){let e=r;return\\\"DataView\\\"===i?e=new Uint8Array(r.buffer):\\\"ArrayBuffer\\\"===i&&(e=new Uint8Array(r)),s([i,[...e]],r)}const e=[],t=s([a,e],r);for(const t of r)e.push(o(t));return t}case 2:{if(i)switch(i){case\\\"BigInt\\\":return s([i,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return s([i,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return o(r.toJSON());const n=[],c=s([a,n],r);for(const t of d(r))!e&&y(f(r[t]))||n.push([o(t),o(r[t])]);return c}case 3:return s([a,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return s([a,{source:e,flags:t}],r)}case 5:{const t=[],n=s([a,t],r);for(const[n,s]of r)(e||!y(f(n))&&!y(f(s)))&&t.push([o(n),o(s)]);return n}case 6:{const t=[],n=s([a,t],r);for(const n of r)!e&&y(f(n))||t.push(o(n));return n}}const{message:c}=r;return s([a,{name:i,message:c}],r)};return o})(!(t||n),!!t,new Map,r)(e),r},{parse:m,stringify:w}=JSON,g={json:!0,lossy:!0};var _=Object.freeze({__proto__:null,parse:e=>l(m(e)),stringify:e=>w(h(e,g))});const A=\\\"apply\\\",b=\\\"construct\\\",E=\\\"defineProperty\\\",v=\\\"deleteProperty\\\",k=\\\"get\\\",S=\\\"getOwnPropertyDescriptor\\\",j=\\\"getPrototypeOf\\\",x=\\\"has\\\",$=\\\"isExtensible\\\",P=\\\"ownKeys\\\",T=\\\"preventExtensions\\\",B=\\\"set\\\",R=\\\"setPrototypeOf\\\";var F=Object.freeze({__proto__:null,APPLY:A,CONSTRUCT:b,DEFINE_PROPERTY:E,DELETE_PROPERTY:v,GET:k,GET_OWN_PROPERTY_DESCRIPTOR:S,GET_PROTOTYPE_OF:j,HAS:x,IS_EXTENSIBLE:$,OWN_KEYS:P,PREVENT_EXTENSION:T,SET:B,SET_PROTOTYPE_OF:R});const O=\\\"destruct\\\",D=\\\"c70de905-a212-4eca-80aa-dad8bd4e677b\\\",M=\\\"=\\\"+D,C=\\\"-\\\"+D,{ArrayBuffer:I,Atomics:L,Promise:H}=globalThis,{isArray:W}=Array,{create:N,getPrototypeOf:U,values:J}=Object,q=U(Int32Array),z=N(L),K=({currentTarget:e,type:t,origin:n,lastEventId:r,source:s,ports:o},a)=>e.dispatchEvent(new MessageEvent(t,{data:a,origin:n,lastEventId:r,source:s,ports:o})),G=()=>H.withResolvers();let Y=0;const V=new Map,X=(e,t)=>class extends e{constructor(e,...n){super(e,...n),e instanceof t&&V.set(this,[Y++,0,G()])}},Z=new WeakSet,Q=e=>(Z.add(e),e),ee=(e,t)=>{const{data:n}=e,r=W(n)&&(n.at(0)===t||0===n.at(1)&&!t);return r&&(e.stopImmediatePropagation(),e.preventDefault()),r},te=e=>null!==e&&\\\"object\\\"==typeof e&&!Z.has(e),ne=new WeakMap,re=(e,t,n)=>{if(V.has(e))t.set(e,V.get(e)[0]);else if(!(e instanceof q||e instanceof I))for(const r of J(e))te(r)&&!n.has(r)&&(n.add(r),re(r,t,n))},se=(...e)=>({value:new H((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))\\\");n.onmessage=()=>t(\\\"ok\\\"),n.postMessage(e)}))}),oe=(e,t)=>{const n=V.get(e),[r,s,{promise:o}]=n;return n[1]=t,[r,o]};let{Int32Array:ae,SharedArrayBuffer:ie,addEventListener:ce,postMessage:le}=globalThis,ue=!0,pe=e=>e,de=!1;const fe=G();try{new ie(4),z.waitAsync||(z.waitAsync=se),fe.resolve()}catch(e){const t=le,n=ce,r=[];let s=\\\"\\\",o=\\\"\\\";ie=class extends I{},ae=X(ae,ie),pe=Q,de=!0,z.notify=(e,n)=>{const[r]=(e=>ne.get(e))(e);return t([s,1,e,r,n]),0},z.waitAsync=(...e)=>{const[t,n]=oe(...e);return{value:n}},z.wait=(e,t,...n)=>{const[r]=oe(e,t,...n),a=new XMLHttpRequest;a.responseType=\\\"json\\\",a.open(\\\"POST\\\",`${o}?sabayon`,!1),a.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),a.send(`[\\\"${s}\\\",${r},${t}]`);const{response:i}=a;V.delete(e);for(let t=0;t<i.length;t++)e[t]=i[t];return\\\"ok\\\"},n(\\\"message\\\",(e=>{if(ee(e,s)){const[t,n,...r]=e.data;switch(n){case 0:s=t,o=r.at(0)?.serviceWorker||\\\"\\\",o||(z.wait=null,fe.resolve());break;case 1:((e,t,n)=>{for(const[r,[s,o,{resolve:a}]]of V)if(t===s&&n===o){for(let t=0;t<e.length;t++)r[t]=e[t];V.delete(r),a(\\\"ok\\\");break}})(...r);break;case 2:((e,t,n)=>{for(const[n,r]of t)ne.set(n,[r,e.currentTarget]);K(e,n)})(e,...r);break;case 3:fe.resolve()}}else if(ue){const{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i}=e;r.push([{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i},e.data])}})),ce=(e,...t)=>{if(n(e,...t),r.length)for(const e of r.splice(0))K(...e)},le=(e,...n)=>t(((e,t)=>{const n=new Map;return te(t)&&re(t,n,new Set),n.size?[e,2,n,t]:t})(s,e),...n)}await fe.promise,ue=!1;const{BYTES_PER_ELEMENT:ye}=Int32Array,{BYTES_PER_ELEMENT:he}=Uint16Array,{notify:me}=z,we=new TextDecoder(\\\"utf-16\\\"),ge=new WeakSet,_e=(...e)=>(ge.add(e),e);let Ae=\\\"\\\";const be=(e,t,n,r)=>{const[s]=r,o=n.get(s);if(!o)throw new Error(`Unknown proxy.${s}()`);e(o,t,r)};let Ee=0;const ve=([e,t,n,r,s,o,a,i,c],l)=>(...u)=>{let p=\\\"\\\"!==Ae,d=0;p&&\\\"=\\\"!==Ae[0]&&\\\"-\\\"!==Ae[0]&&(d=((e,t)=>setTimeout(console.warn,3e3,`💀🔒 - proxy.${e}() in proxy.${t}()`))(l,Ae));const f=Ee++;let y=[];ge.has(u.at(-1)||y)&&ge.delete(y=u.pop());const h=n(i?u.map(i):u);let m=t(2*ye);return a([e,2,l,f,m,h,r],{transfer:y}),c(m,0).value.then((()=>{p&&clearTimeout(d);const n=m[1];if(!n)return;const r=he*n;return m=t(r+r%ye),a([e,1,f,m]),c(m,0).value.then((()=>{const e=new Uint16Array(m.buffer),t=o?e.subarray(0,n):e.slice(0,n);return s(we.decode(t))}))}))},ke=(e,t)=>new Proxy(t,{get:(t,n)=>{let r;return\\\"then\\\"!==n&&(r=t.get(n),r||(r=ve(e,n),t.set(n,r))),r},set:(e,t,n)=>\\\"then\\\"!==t&&!!e.set(t,n)}),{wait:Se,waitAsync:je}=z;var xe=({parse:e,stringify:t,transform:n,interrupt:r}=JSON)=>{const s=((e,t)=>async(n,r,[s,o,a,i,c])=>{c&&(Ae=s);try{const s=await n(...i);if(void 0!==s){const n=e(t?t(s):s);r.set(o,n),a[1]=n.length}}finally{c&&(Ae=\\\"\\\"),a[0]=1,me(a,0)}})(t,n),o=G(),a=new Map,i=new Map;let c=\\\"\\\",l=Se;if(Se&&r){const{handler:e,timeout:t=42}=r;l=(n,r,s)=>{for(;\\\"timed-out\\\"===(s=Se(n,r,0,t));)e();return s}}return ce(\\\"message\\\",(t=>{if(ee(t,c)){const[r,u,...p]=t.data;switch(u){case 0:{const t=!!Se;c=r,o.resolve({polyfill:de,sync:t,transfer:_e,proxy:ke([c,e=>new ae(new ie(e)),pe,t,e,de,le,n,t?(...e)=>({value:{then:t=>t(l(...e))}}):je],a)});break}case 2:a.size?be(s,i,a,p):setTimeout(be,0,s,i,a,p);break;case 1:((e,[t,n])=>{const r=e.get(t);e.delete(t);for(let e=new Uint16Array(n.buffer),t=0,{length:s}=r;t<s;t++)e[t]=r.charCodeAt(t);me(n,0)})(i,p)}}})),o.promise};const $e=\\\"array\\\",Pe=\\\"function\\\",Te=\\\"null\\\",Be=\\\"number\\\",Re=\\\"object\\\",Fe=\\\"symbol\\\",Oe=\\\"undefined\\\";function De(){return this}const Me=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),Ce=Object.create(null),{Object:Ie,Proxy:Le,Reflect:He}=globalThis,{isArray:We}=Array,{ownKeys:Ne}=He,{create:Ue,hasOwn:Je,values:qe}=Ie,ze=(e,t)=>t===$e?e[0]:t===Pe?e():t===Re?e.$:e,Ke=(e,t,n,r)=>{const s={type:{value:t}},o=Je(e,\\\"valueOf\\\");for(const a of qe(F)){let i=r(e[a]||He[a]);if(o&&a===k){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,ze(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return Ue(e,s)},Ge=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case Re:case Oe:r||(r=!1);case Pe:break;default:r=!1,t===e&&(t=Ie(e))}const s=new Le(t,n),{destruct:o}=n;return o?((e,t,{debug:n,handler:r,return:s,token:o=e}=Ce)=>{const a=s||new Proxy(e,r||Ce),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),Me.register(...i),a})(e,o,{token:r,return:s}):s},Ye=e=>t=>{const n=typeof t;return n===Re?t?e.get(t)?.[0]??(e=>We(e)?$e:Re)(t):Te:n},Ve=e=>t=>{let n=typeof t;switch(n){case Re:if(!t){n=Te;break}case Pe:const r=e.get(t);r&&([n,t]=r)}return[n,t]},Xe=e=>((e=>{Me.unregister(e)})(e),e);var Ze=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:Xe,pair:Ve(t),typeOf:Ye(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of Ne(e)){if(Je(o,t))continue;const a=e[t];switch(t){case $e:{const e=Ke(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(Ge(t,[t],e,...n),$e,t);break}case Pe:{const e=Ke(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(Ge(t,(r=t,De.bind(r)),e,...n),Pe,t);var r};break}case Re:{const e=Ke(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(Ge(t,{$:t},e,...n),Re,t);break}default:{const e=Ke(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(Ge(n,n,e,...r),t,n);break}}}return o};const{drop:Qe,get:et,hold:tt}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===Be?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})();var nt=Object.fromEntries([$e,\\\"bigint\\\",\\\"boolean\\\",Pe,Te,Be,Re,\\\"string\\\",Fe,Oe].map(((e,t)=>[e,t])));const{[P]:rt}=Reflect,st=new Map(rt(Symbol).filter((e=>typeof Symbol[e]===Fe)).map((e=>[Symbol[e],e]))),ot=e=>st.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:at}=Array,{[A]:it}=Reflect;var ct=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case nt[Re]:return null==t?globalThis:typeof t===Be?r(t,l.object):t;case nt[$e]:return typeof t===Be?r(t,l.array):t;case nt[Pe]:return typeof t===Be?r(t,l.function):et(parseInt(t));case nt[Fe]:return(e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of st)if(n===e)return t})(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case Re:if(r==globalThis||null==r)r=null;else if(typeof r===Re&&!(r instanceof q))if(r=t(r),at(r))r=r.map(o);else for(const e in r)r[e]=o(r[e]);return[nt[Re],r];case $e:return[nt[$e],typeof r===Be?r:t(r).map(o)];case Pe:return[nt[Pe],typeof r===Pe?String(tt(t(r))):r];case Fe:return[nt[Fe],ot(e)];default:return[nt[n],r]}},a=(...t)=>s(e(...t)),i={[E]:(e,t,n)=>a(E,e,o(t),o(n)),[v]:(e,t)=>a(v,e,o(t)),[k]:(e,t)=>a(k,e,o(t)),[j]:e=>a(j,e),[S]:(e,t)=>{const n=a(S,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[x]:(e,t)=>a(x,e,o(t)),[$]:e=>a($,e),[P]:e=>a(P,e).map(s),[T]:e=>a(T,e),[B]:(e,t,n)=>a(B,e,o(t),o(n)),[R]:(e,t)=>a(R,e,o(t)),[O](t){n.delete(t),e(O,t)}},c={[Re]:i,[$e]:i,[Pe]:{...i,[A]:(e,...t)=>a(A,e,...t.map(o)),[b]:(e,...t)=>a(b,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=Ze(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case A:{const[e,t]=n;return o(await it(et(r),s(e),t.map(s)))}case O:Qe(r)}}}};const lt={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},ut=new WeakMap,pt=e=>{const t=e||console,n={buffered:ft,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return ut.set(t,n),t}}},dt=new TextDecoder,ft=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(dt.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},yt=(e,...t)=>lt[typeof e](e,...t),{isArray:ht}=Array,{assign:mt,create:wt,defineProperty:gt,entries:_t}=Object,{all:At,resolve:bt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Et=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,vt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},kt=e=>Function(`'use strict';return (${e})`)(),St=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),jt=Symbol.for(\\\"polyscript.js_modules\\\"),xt=new Map;gt(globalThis,jt,{value:xt}),new Proxy(xt,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const $t=(e,t)=>!t.startsWith(\\\"_\\\"),Pt=(e,t)=>new Proxy(e,{has:$t,get:(e,n)=>e[t][n]}),Tt=(e,t)=>import(e).then((e=>{xt.set(t,{...e})})),Bt=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(mt(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),Rt=e=>/\\\\.css$/i.test(new URL(e).pathname),Ft=(e,t)=>e.has(t),Ot=e=>[...e.keys()];var Dt=(e,t,n,r)=>{const s=globalThis[jt];if(n)for(let[e,t]of _t(n)){let n=s.get(t);n&&!ht(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:Ft,ownKeys:Ot,get:(e,s)=>{let o=e.get(s);if(ht(o)){let a=o;o=null;for(let e of a)e=Et(e,r),Rt(e)?n.importCSS(e):(n.importJS(e,s),o=t[jt].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Mt=new Map,Ct=e=>Mt.get(e),It=(e,t)=>{try{return Function(\\\"require\\\",t)(Ct)}catch(t){ut.get(e).stderr(t)}};var Lt={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:e=>pt().get(e),registerJSModule(e,t,n){Mt.set(t,n)},run:It,runAsync:It,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(Ct,n)}catch(t){ut.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Ht=Object.getOwnPropertyDescriptors(Response.prototype),Wt=e=>\\\"function\\\"==typeof e,Nt={get:(e,t)=>Ht.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!Wt(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,Ht[t]):((e,t)=>Wt(t)?t.bind(e):t)(e,e[t])};var Ut=(e,...t)=>new Proxy(fetch(e,...t),Nt);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const Jt=!globalThis.window,qt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):Kt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},zt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},Kt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},Gt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},Yt=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},Vt=(e,t)=>Ut(Et(e,t)).arrayBuffer(),Xt=(e,t,n,r)=>At((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(ht(r))return r.map((n=>({url:Yt([e,n]),path:Yt([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:Yt([t,s])}]}))})(n).map((({url:n,path:s})=>Vt(n,r).then((n=>e.writeFile(t,s,n)))))),Zt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,Qt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),en=(e,t,n,r)=>At((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of _t(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,Qt(o,t))}else{const e=Qt(s,t),a=Zt(e,Qt(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>Vt(n,r).then((r=>e.writeFile(t,s,r,n)))))),tn=({main:e,worker:t},n)=>{const r=[];if(t&&Jt)for(let[e,s]of _t(t))e=Et(e,n),r.push(Tt(e,s));if(e&&!Jt)for(let[t,s]of _t(e))t=Et(t,n),Rt(t)?Bt(t):r.push(Tt(t,s));return At(r)},nn=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},rn=new WeakMap,sn=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await en(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await Xt(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await tn(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},on=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await rn.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=_),e.registerJsModule(t,n)},an=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},cn=(e,t,...n)=>{try{return e.runPython(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},ln=async(e,t,...n)=>{try{return await e.runPythonAsync(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},un=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){ut.get(e).stderr(t)}};var pn=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const dn=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e);async function fn(e,t){return new Promise(((n,r)=>{e.syncfs(t,(e=>{e?r(e):n()}))}))}function yn(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await hn(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach((function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)})),i.sort();const c=[];if(Object.keys(o.entries).forEach((function(e){n.entries[e]||(c.push(e),a++)})),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):Kt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await fn(t,!0),{syncfs:async()=>await fn(t,!1)}}}const hn=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},mn=(e,t)=>{try{e.mkdir(t)}catch(e){}},wn=nn(\\\"mpy\\\");var gn={type:\\\"micropython\\\",module:(e=\\\"1.24.1\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=pt({stderr:ft(console.error),stdout:ft(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),wn(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=_n.bind(this,i,r);return rn.set(i,c),await sn(this,wn,i,t,r),this.writeFile(i,\\\"./mip.py\\\",pn),t.packages&&(wn(\\\"Loading packages\\\"),await c(t.packages),wn(\\\"Loaded packages\\\")),wn(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=yn(i._module)),i},registerJSModule:on,run:cn,runAsync:ln,runEvent:un,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=an(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DPXsOtR5.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)mn(s,i);else{mn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return qt(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return qt(i,t,n)}};async function _n(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Et(s,t),r=await Ut(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const An=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)})),bn=Object.create(null),En=(e,t,{debug:n,handler:r,return:s,token:o=e}=bn)=>{const a=s||new Proxy(e,r||bn),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),An.register(...i),a},vn={dict_converter:Object.fromEntries},{stringify:kn}=JSON;let Sn=!1;const jn=e=>(...t)=>{try{return Sn=!0,e(...t)}finally{Sn=!1}};let xn=!1;const $n=()=>{if(xn)return;xn=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){Sn=!1;let o=e.get(s)?.deref();if(!o)try{o=En(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),Sn=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return Sn&&n(t),s(this,e,t)}},call:{value(e,...t){return Sn&&n(t),s(this,e,t)}}})},Pn=nn(\\\"py\\\"),Tn=new WeakMap;var Bn={type:\\\"pyodide\\\",module:(e=\\\"0.27.3\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){Jt||\\\"auto\\\"!==t.experimental_create_proxy||$n(),Pn(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;Pn(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=new i(a),l={indexURL:a},u=\\\"never\\\"!==t.packages_cache;if(await c.sync(),u){if(s){s=s.slice(0).sort();const e=kn(s);if(c.has(e)){const t=new Blob([c.get(e)],{type:\\\"application/json\\\"});l.lockFileURL=URL.createObjectURL(t),l.packages=s.map((e=>e.split(/[>=<]=/)[0])),s=null}}}else c.clear();Pn(\\\"Loaded Storage\\\");const{stderr:p,stdout:d,get:f}=pt(),y=await f(e({stderr:p,stdout:d,...l})),h=Fn.bind(y);return o&&Tn.set(y,o),rn.set(y,h),await sn(this,Pn,y,t,r),s&&await h(s,c,u),await c.close(),l.lockFileURL&&URL.revokeObjectURL(l.lockFileURL),Pn(\\\"Loaded Pyodide\\\"),y},registerJSModule:on,run:jn(cn),runAsync:jn(ln),runEvent:jn(un),transform:(e,t)=>Rn.call(e,t),writeFile:(e,t,n,r)=>{const s=an(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return qt({FS:o,PATH:a,PATH_FS:i},t,n)}};function Rn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(vn);if(e instanceof Map)return new Map([...e.entries()]);if(ht(e))return e.map(Rn,this)}return e}async function Fn(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,Pn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(Tn.has(this)&&o.set_index_urls(Tn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(kn(e),n)}o.destroy()}const On=\\\"ruby-wasm-wasi\\\",Dn=On.replace(/\\\\W+/g,\\\"_\\\");var Mn={type:On,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await Ut(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await en(this,a,t.files,r),t.fetch&&await Xt(this,a,t.fetch,r),t.js_modules&&await tn(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Dn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(yt(t),...n),runAsync:(e,t,...n)=>e.evalAsync(yt(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Dn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${On}`)}};var Cn={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=pt(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await en(this,c,n.files,s),n.fetch&&await Xt(this,c,n.fetch,s),n.js_modules&&await tn(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){ut.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(Kt(e,zt(t)),t=Gt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const In=new WeakMap,Ln=async(e,t)=>{const{shelter:n,destroy:r,io:s}=In.get(e),{output:o,result:a}=await n.captureR(yt(t));for(const{type:e,data:t}of o)s[e](t);return En(a,r,{token:!1})};var Hn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.2\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=pt(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return In.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:ut.get(o)}),t.files&&await en(this,o,t.files,r),t.fetch&&await Xt(this,o,t.fetch,r),t.js_modules&&await tn(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:Ln,runAsync:Ln,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const Wn=new Map,Nn=new Map,Un=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=Wn.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(Nn.set(t,e),s(r,e,n,o))))}}),Jn=e=>{for(const t of[].concat(e.type))Wn.set(t,e)};for(const e of[Lt,gn,Bn,Mn,Cn,Hn])Jn(e);const{parse:qn}=JSON,zn=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Et(e),n]})(e,t);return\\\"json\\\"===s?n=Ut(r).json():\\\"toml\\\"===s?n=Ut(r).text().then(dn):\\\"string\\\"===s?n=Kn(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=Kn(n)),[n,e=r]},Kn=e=>{try{return qn(e)}catch(t){return dn(e)}},Gn=\\\"BeforeRun\\\",Yn=\\\"AfterRun\\\",Vn=[`code${Gn}`,`code${Gn}Async`,`code${Yn}`,`code${Yn}Async`],Xn=[\\\"onWorker\\\",\\\"onReady\\\",`on${Gn}`,`on${Gn}Async`,`on${Yn}`,`on${Yn}Async`];function Zn(e,t){const{run:n,runAsync:r}=Wn.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Qn=(e,t,n,r,s,o)=>{if(s||o){const a=Zn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let er,tr,nr;const rr=(e,t)=>{addEventListener(e,t||(async t=>{try{await er,tr(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:sr,stringify:or}=_,{proxy:ar,sync:ir,polyfill:cr,window:lr,isWindowProxy:ur}=await(async e=>{const t=await xe(e),{isProxy:n,global:r,method:s}=ct(t.proxy[M],e?.transform||(e=>e));return t.proxy[C]=s,{...t,window:r,isWindowProxy:n}})({parse:sr,stringify:or,transform:e=>nr?nr(e):e}),pr={polyfill:cr,sync:ar,window:ir?lr:null,isWindowProxy:ur,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};rr(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{er=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:d,async:f}=e,y=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),h=await((e,t,n,r={})=>(t&&([r,t]=zn(t,n,r)),bt(r).then((n=>Un[e](n,t)))))(y,t,n,d),{js_modules:m}=Nn.get(y),w=m?.main,g=wt(Wn.get(l)),_=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:ut.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,u||l,d||{},h);let A=\\\"run\\\";if(f&&(A+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Vn){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,St(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,St(t),...o);return r&&await s(e,r,...o),a}})(g,A,n,r);for(const n of Xn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=kt(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}Qn(g,_,pr,f,e,t)}let b,E,v,k=null,S=\\\"\\\";ir&&(({CustomEvent:b,document:E}=lr),k=o&&E.getElementById(o)||null,v=e=>vt(k,u||l,e,!0,b));const j=Dt(lr,ar,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Pt(r,e));t.registerJSModule(n,s,r)})(l,g,h,j),g.registerJSModule(h,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:pr,currentScript:k,config:_.config,js_modules:j,get target(){return!S&&k&&(\\\"SCRIPT\\\"===c?k.after(mt(lr.document.createElement(`script-${u||l}`),{id:S=`${o}-target`})):(S=o,k.replaceChildren(),k.style.display=\\\"block\\\")),S}}),tr=g.runEvent.bind(g,h),nr=g.transform.bind(g,h),k&&v(\\\"ready\\\"),s?.onReady&&kt(s?.onReady).call(g,Zn.call(g,_,h),pr),await g[A](h,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";h.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&h.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return k&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),h}catch(e){postMessage(e)}})(),rr(\\\"error\\\"),rr(\\\"message\\\"),rr(\\\"messageerror\\\"),ir&&addEventListener(\\\"py:progress\\\",(({type:e,detail:t})=>{lr.dispatchEvent(new lr.CustomEvent(e,{detail:t}))}))}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTRUCT } from 'js-proxy/traps';\nimport { DESTROY } from '../proxy/traps.js';\n\nimport { MAIN, WORKER } from './constants.js';\nimport DEBUG from '../debug.js';\n\nimport coincident from '../main.js';\nimport proxyMain from '../proxy/main.js';\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  const esm = options?.import;\n  const exports = coincident(options);\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      proxy[MAIN] = proxyMain(\n        // options.import = name => valid(name) && name\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n\n      if (DEBUG) {\n        const debug = proxy[MAIN];\n        proxy[MAIN] = (TRAP, ...args) => {\n          const destructing = TRAP === DESTRUCT;\n          const method = destructing ? console.warn : console.log;\n          method('Main before', TRAP, ...args);\n          const result = debug(TRAP, ...args);\n          if (!destructing) method('Main after', TRAP, result);\n          return result;\n        };\n      }\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.24.1') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages);\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.3') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.slice(0).sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.2') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","Promise","onsuccess","onerror","objectStore","constructor","name","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","startsWith","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","callback","context","call","has","getKey","getAllKeys","set","put","values","Symbol","toStringTag","IDBMapSync","Map","queue","sync","workers","withResolvers","ignore","Set","workersHandler","freeze","_","promise","w","env","self","globalThis","deserialize","serialized","$","as","out","index","unpair","arr","object","Date","source","flags","RegExp","add","BigInt","Uint8Array","buffer","DataView","deserializer","EMPTY","toString","typeOf","asString","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","spread","valueOf","toJSON","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","str","any","OWN_KEYS","DESTRUCT","DESTROY","CHANNEL","MAIN","WORKER","ArrayBuffer","Atomics","$Atomics","isArray","Array","create","getPrototypeOf","TypedArray","Int32Array","id","views","extend","Class","SharedArrayBuffer","rest","ignoreList","WeakSet","ignorePatch","isChannel","channel","data","yes","at","stopImmediatePropagation","preventDefault","isObject","transferred","WeakMap","transferViews","transfer","visited","waitAsyncPatch","Worker","onmessage","postMessage","actionWait","view","currentTarget","origin","lastEventId","ports","MessageEvent","dispatch","polyfill","asModule","url","waitAsync","crypto","randomUUID","addListener","addEventListener","register","serviceWorker","s","sw","done","c","uid","join","getRegistration","ready","controller","installing","waiting","active","state","location","reload","once","notify","worker","getData","known","waitAsyncPoly","URL","href","navigator","ACTION","_view","_id","_index","actionNotify","postData","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","Uint16Array","decoder","TextDecoder","buffers","seppuku","invoke","i32View","isSync","transform","deadlock","timer","setTimeout","console","warn","pop","sb","clearTimeout","bytes","ui16a","sub","subarray","decode","coincident$1","waitLength","async","results","actionLength","$Worker","proxy","details","cb","createProxy","Error","charCodeAt","actionFill","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","numeric","fromEntries","ownKeys","Reflect","filter","toSymbol","keyFor","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","hold","return","token","eventsHandler","defineProperty","listener","concat","proxyMain","__worker__","drop","ids","a","b","had","heap","proxies","onGC","ref","toEntry","fromEntry","numericTYPE","fn","deref","methods","method","handleEvent","WeakRef","for","symbol","fromSymbol","asEntry","asImport","import","globals","TRAP","descriptor","re","place","q","f","esm","exports","coincident","terminate","io","stdio","localIO","buffered","stderr","error","stdout","log","engine","interpreter","EOL","maybeUI8","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","dedent","string","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","absoluteURL","base","nodeInfo","node","tag","tagName","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","createProgress","loader","loadProgress","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","mip","TextEncoder","encode","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","apply","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","e","isRealDir","toAbsolute","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","getTime","sort","remove","reverse","relPath","normalize","substring","NATIVEFS_ASYNC","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","indexURLs","pyodide","loadPyodide","experimental_create_proxy","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","revokeObjectURL","unpackArchive","ffi","_log","loadPackage","micropip","set_index_urls","keep_going","frozen","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","service_worker","isHook","Hook","resolver","bootstrap","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","body","wn","versionValue","configValue","workerName","targetValue","currentScript","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","v","cfg","o","u","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","$customObserver","dontBother","indexOf","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,29,30,31,32,46]}