{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../esm/workers.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/proxy/traps.js","../node_modules/coincident/src/window/constants.js","../node_modules/sabayon/src/shared.js","../node_modules/sabayon/src/main.js","../node_modules/coincident/src/shared.js","../node_modules/coincident/src/main.js","../node_modules/proxy-target/esm/types.js","../node_modules/coincident/src/window/types.js","../node_modules/coincident/src/window/symbol.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","export const DESTROY = 'destroy';\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = 'c70de905-a212-4eca-80aa-dad8bd4e677b';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","// (c) Andrea Giammarchi - MIT\n\nconst ACTION_INIT = 0;\nconst ACTION_NOTIFY = 1;\nconst ACTION_WAIT = 2;\nconst ACTION_SW = 3;\n\nconst { ArrayBuffer, Atomics: $Atomics, Promise } = globalThis;\nconst { isArray } = Array;\nconst { create, getPrototypeOf, values } = Object;\n\nconst TypedArray = getPrototypeOf(Int32Array);\nconst Atomics = create($Atomics);\n\nconst dispatch = ({ currentTarget, type, origin, lastEventId, source, ports }, data) =>\n  currentTarget.dispatchEvent(new MessageEvent(type, { data, origin, lastEventId, source, ports }));\n\nconst withResolvers = () => Promise.withResolvers();\n\nlet id = 0;\nconst views = new Map;\nconst extend = (Class, SharedArrayBuffer) => class extends Class {\n  constructor(value, ...rest) {\n    super(value, ...rest);\n    if (value instanceof SharedArrayBuffer)\n      views.set(this, [id++, 0, withResolvers()]);\n  }\n};\n\nconst ignoreList = new WeakSet;\n\n/**\n * @template {T}\n * @callback PassThrough\n * @param {T} value\n * @returns {T}\n */\n\n/** @type {PassThrough} */\nconst ignoreDirect = value => value;\n\n/** @type {PassThrough} */\nconst ignorePatch = value => {\n  ignoreList.add(value);\n  return value;\n};\n\nconst isChannel = (event, channel) => {\n  const { data } = event;\n  const yes = isArray(data) && (\n    data.at(0) === channel ||\n    (data.at(1) === ACTION_INIT && !channel)\n  );\n  if (yes) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  return yes;\n};\n\nconst isObject = value => (\n  value !== null &&\n  typeof value === 'object' &&\n  !ignoreList.has(value)\n);\n\nconst transferred = new WeakMap;\nconst transferViews = (data, transfer, visited) => {\n  if (views.has(data))\n    transfer.set(data, views.get(data)[0]);\n  else if (!(data instanceof TypedArray || data instanceof ArrayBuffer)) {\n    for (const value of values(data)) {\n      if (isObject(value) && !visited.has(value)) {\n        visited.add(value);\n        transferViews(value, transfer, visited);\n      }\n    }\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync#browser_compatibility\nconst waitAsyncPatch = (...args) => ({\n  value: new Promise(resolve => {\n    // encodeURIComponent('onmessage=e=>postMessage(!Atomics.wait(...e.data))')\n    let w = new Worker('data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))');\n    w.onmessage = () => resolve('ok');\n    w.postMessage(args);\n  })\n});\n\nconst waitAsyncPoly = (view, index) => {\n  const value = views.get(view), [id, _, { promise }] = value;\n  value[1] = index;\n  return [id, promise];\n};\n\nconst actionNotify = (_view, _id, _index) => {\n  for (const [view, [id, index, { resolve }]] of views) {\n    if (_id === id && _index === index) {\n      for (let i = 0; i < _view.length; i++) view[i] = _view[i];\n      views.delete(view);\n      resolve('ok');\n      break;\n    }\n  }\n};\n\nconst actionWait = (event, transfer, data) => {\n  for (const [view, id] of transfer)\n    transferred.set(view, [id, event.currentTarget]);\n  dispatch(event, data);\n};\n\nconst postData = (CHANNEL, data) => {\n  const transfer = new Map;\n  if (isObject(data)) transferViews(data, transfer, new Set);\n  return transfer.size ? [CHANNEL, ACTION_WAIT, transfer, data] : data;\n};\n\nconst getData = view => transferred.get(view);\n\nexport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics, TypedArray,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  dispatch,\n  extend,\n  isChannel,\n  views,\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  extend,\n  isChannel,\n  withResolvers,\n} from './shared.js';\n\nlet {\n  BigInt64Array,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker,\n} = globalThis;\n\nlet ignore = ignoreDirect;\nlet polyfill = false;\n\nconst asModule = options => ({ ...options, type: 'module' });\n\ntry {\n  new SharedArrayBuffer(4);\n\n  Worker = class extends Worker {\n    constructor(url, options) {\n      super(url, asModule(options));\n    }\n  }\n\n  if (!Atomics.waitAsync)\n    Atomics.waitAsync = waitAsyncPatch;\n}\ncatch (_) {\n  const CHANNEL = crypto.randomUUID();\n\n  const sync = new Map;\n\n  const addListener = (self, type, handler, ...rest) => {\n    self.addEventListener(type, handler, ...rest);\n  };\n\n  const register = ({ serviceWorker: s }, sw, done) => {\n    let w, c = true;\n    addListener(s, 'message', event => {\n      if (isChannel(event, CHANNEL)) {\n        const [_, id, index] = event.data;\n        const uid = [id, index].join(',');\n        const done = view => {\n          sync.delete(uid);\n          w.postMessage([ CHANNEL, id, index, view ]);\n        };\n        const view = sync.get(uid);\n        if (view) done(view);\n        else {\n          const { promise, resolve } = withResolvers();\n          sync.set(uid, resolve);\n          promise.then(done);\n        }\n      }\n    });\n    // use previous registration, if any, before registering it\n    s.getRegistration(sw)\n      .then(r => (r ?? s.register(sw)))\n      .then(function ready(r) {\n        c = c && !!s.controller;\n        w = (r.installing || r.waiting || r.active);\n        if (w.state === 'activated') {\n          if (c) done();\n          else location.reload();\n        }\n        else\n          addListener(w, 'statechange', () => ready(r), { once: true });\n      });\n  };\n\n  ignore = ignorePatch;\n  polyfill = true;\n\n  Atomics.notify = (view, index) => {\n    const [id, worker] = getData(view);\n    const uid = [id, index].join(',');\n    const known = sync.get(uid);\n    if (known) known(view);\n    else sync.set(uid, view);\n    worker.postMessage([CHANNEL, ACTION_NOTIFY, view, id, index]);\n    return 0;\n  };\n\n  Atomics.waitAsync = (view, ...rest) => {\n    const [_, value] = waitAsyncPoly(view, ...rest);\n    return { value };\n  };\n\n  SharedArrayBuffer = class extends ArrayBuffer {}\n  BigInt64Array = extend(BigInt64Array, SharedArrayBuffer);\n  Int32Array = extend(Int32Array, SharedArrayBuffer);\n\n  let serviceWorker = null;\n  Worker = class extends Worker {\n    constructor(url, options) {\n      let sw = options?.serviceWorker || '';\n      if (sw) {\n        sw = new URL(sw, location.href).href;\n        options = { ...options, serviceWorker: sw };\n        if (!serviceWorker) {\n          const { promise, resolve } = withResolvers();\n          register(navigator, sw, resolve);\n          serviceWorker = promise;\n        }\n        serviceWorker.then(\n          () => super.postMessage([CHANNEL, ACTION_SW])\n        );\n      }\n      super(url, asModule(options));\n      super.postMessage([CHANNEL, ACTION_INIT, options]);\n      addListener(this, 'message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_NOTIFY: {\n              actionNotify(...rest);\n              break;\n            }\n            case ACTION_WAIT: {\n              actionWait(event, ...rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n    postMessage(data, ...rest) {\n      return super.postMessage(postData(CHANNEL, data), ...rest);\n    }\n  }\n}\n\nexport {\n  /** @type {globalThis.Atomics} */ Atomics,\n  /** @type {globalThis.BigInt64Array} */ BigInt64Array,\n  /** @type {globalThis.Int32Array} */ Int32Array,\n  /** @type {globalThis.SharedArrayBuffer} */ SharedArrayBuffer,\n  /** @type {globalThis.Worker} */ Worker,\n  ignore,\n  polyfill,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT,\n  ACTION_NOTIFY,\n  ACTION_WAIT,\n  Atomics,\n  isChannel,\n  withResolvers,\n} from 'sabayon/shared';\n\nconst { BYTES_PER_ELEMENT: I32_BYTES } = Int32Array;\nconst { BYTES_PER_ELEMENT: UI16_BYTES } = Uint16Array;\n\nconst { notify } = Atomics;\n\nconst decoder = new TextDecoder('utf-16');\n\nconst buffers = new WeakSet;\n\nconst transfer = (...args) => (buffers.add(args), args);\n\nlet seppuku = '';\nconst actionLength = (stringify, transform) => async (callback, results, [name, id, sb, args, isSync]) => {\n  if (isSync) seppuku = name;\n  try {\n    const result = await callback(...args);\n    if (result !== void 0) {\n      const serialized = stringify(transform ? transform(result) : result);\n      results.set(id, serialized);\n      sb[1] = serialized.length;\n    }\n  }\n  finally {\n    if (isSync) seppuku = '';\n    sb[0] = 1;\n    notify(sb, 0);\n  }\n};\nconst actionFill = (results, [id, sb]) => {\n  const result = results.get(id);\n  results.delete(id);\n  for (let ui16a = new Uint16Array(sb.buffer), i = 0, { length } = result; i < length; i++)\n    ui16a[i] = result.charCodeAt(i);\n  notify(sb, 0);\n};\nconst actionWait = (waitLength, results, map, rest) => {\n  const [name] = rest;\n  const callback = map.get(name);\n  if (!callback) throw new Error(`Unknown proxy.${name}()`);\n  waitLength(callback, results, rest);\n};\n\nconst warn = (name, seppuku) => setTimeout(\n  console.warn,\n  3e3,\n  `💀🔒 - proxy.${name}() in proxy.${seppuku}()`\n);\n\nlet uid = 0;\nconst invoke = (\n  [\n    CHANNEL,\n    i32View,\n    ignore,\n    isSync,\n    parse,\n    polyfill,\n    postMessage,\n    transform,\n    waitAsync,\n  ],\n  name,\n) => (...args) => {\n  let deadlock = seppuku !== '', timer = 0;\n  // slow operations between main and worker should likely not\n  // be tracked as the dance there would never deadlock, it just\n  // eventually slow down and that's it\n  if (deadlock && seppuku[0] !== '=' && seppuku[0] !== '-')\n    timer = warn(name, seppuku);\n  const id = uid++;\n  let transfer = [];\n  if (buffers.has(args.at(-1) || transfer))\n    buffers.delete(transfer = args.pop());\n  const data = ignore(transform ? args.map(transform) : args);\n  let sb = i32View(I32_BYTES * 2);\n  postMessage([CHANNEL, ACTION_WAIT, name, id, sb, data, isSync], { transfer });\n  return waitAsync(sb, 0).value.then(() => {\n    if (deadlock) clearTimeout(timer);\n    const length = sb[1];\n    if (!length) return;\n    const bytes = UI16_BYTES * length;\n    sb = i32View(bytes + (bytes % I32_BYTES));\n    postMessage([CHANNEL, ACTION_NOTIFY, id, sb]);\n    return waitAsync(sb, 0).value.then(() =>{\n      const ui16a = new Uint16Array(sb.buffer);\n      const sub = polyfill ? ui16a.subarray(0, length) : ui16a.slice(0, length);\n      return parse(decoder.decode(sub));\n    });\n  });\n};\n\nconst createProxy = (details, map) => new Proxy(map, {\n  get: (map, name) => {\n    let cb;\n    // the curse of potentially awaiting proxies in the wild\n    // requires this ugly guard around `then`\n    if (name !== 'then') {\n      cb = map.get(name);\n      if (!cb) {\n        cb = invoke(details, name);\n        map.set(name, cb);\n      }\n    }\n    return cb;\n  },\n  set: (map, name, callback) => (\n    name !== 'then' &&\n    !!map.set(name, callback)\n  ),\n});\n\nexport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  Atomics,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker as $Worker,\n  ignore,\n  polyfill,\n} from 'sabayon/main';\n\nimport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n} from './shared.js';\n\n/**\n * @typedef {Object} MainOptions\n * @prop {(text: string, ...args:any) => any} [parse=JSON.parse]\n * @prop {(value: any, ...args:any) => string} [stringify=JSON.stringify]\n * @prop {(value: any) => any} [transform]\n */\n\n/**\n * @callback Coincident\n * @param {MainOptions} [options]\n * @returns {{Worker: import('./ts.js').CoincidentWorker, polyfill: boolean, transfer: (...args: Transferable[]) => Transferable[]}}\n */\n\nexport default /** @type {Coincident} */ ({\n  parse,\n  stringify,\n  transform,\n} = JSON) => {\n  const waitLength = actionLength(stringify, transform);\n\n  class Worker extends $Worker {\n    constructor(url, options) {\n      const CHANNEL = crypto.randomUUID();\n      const map = new Map;\n      const results = new Map;\n      super(url, options);\n      this.proxy = createProxy(\n        [\n          CHANNEL,\n          bytes => new Int32Array(new SharedArrayBuffer(bytes)),\n          ignore,\n          false,\n          parse,\n          polyfill,\n          (...args) => this.postMessage(...args),\n          transform,\n          Atomics.waitAsync,\n        ],\n        map,\n      );\n      this.postMessage(ignore([CHANNEL, ACTION_INIT, options]));\n      this.addEventListener('message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_WAIT: {\n              actionWait(waitLength, results, map, rest);\n              break;\n            }\n            case ACTION_NOTIFY: {\n              actionFill(results, rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  return {\n    Worker,\n    polyfill,\n    transfer,\n  };\n};\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n].map((k, i) => [k, i]));\n","import { OWN_KEYS } from 'js-proxy/traps';\nimport { SYMBOL } from 'js-proxy/types';\n\nconst { [OWN_KEYS]: ownKeys } = Reflect;\n\nconst known = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const fromSymbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of known) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const toSymbol = value => (\n  known.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\nimport { TypedArray } from 'sabayon/shared';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        return [numeric[OBJECT], value instanceof TypedArray ? value : hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        if (!(value instanceof TypedArray)) {\n          for (const key in value)\n            value[key] = fromEntry(value[key]);\n        }\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident(JSON);\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const e=\\\"object\\\"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of i)e[s(t)]=s(n);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of i)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:n}=i;return r(new e[t](n),o)}case 8:return r(BigInt(i),o);case\\\"BigInt\\\":return r(Object(BigInt(i)),o);case\\\"ArrayBuffer\\\":return r(new Uint8Array(i).buffer,i);case\\\"DataView\\\":{const{buffer:e}=new Uint8Array(i);return r(new DataView(e),i)}}return r(new e[a](i),o)};return s})(new Map,t)(0),n=\\\"\\\",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case\\\"Array\\\":return[1,n];case\\\"Object\\\":return[2,n];case\\\"Date\\\":return[3,n];case\\\"RegExp\\\":return[4,n];case\\\"Map\\\":return[5,n];case\\\"Set\\\":return[6,n];case\\\"DataView\\\":return[1,s]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),i=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const i=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,u]=o(r);switch(l){case 0:{let t=r;switch(u){case\\\"bigint\\\":l=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+u);t=null;break;case\\\"undefined\\\":return i([-1],r)}return i([l,t],r)}case 1:{if(u){let e=r;return\\\"DataView\\\"===u?e=new Uint8Array(r.buffer):\\\"ArrayBuffer\\\"===u&&(e=new Uint8Array(r)),i([u,[...e]],r)}const e=[],t=i([l,e],r);for(const t of r)e.push(c(t));return t}case 2:{if(u)switch(u){case\\\"BigInt\\\":return i([u,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([u,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return c(r.toJSON());const n=[],p=i([l,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([c(t),c(r[t])]);return p}case 3:return i([l,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return i([l,{source:e,flags:t}],r)}case 5:{const t=[],n=i([l,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([c(n),c(s)]);return n}case 6:{const t=[],n=i([l,t],r);for(const n of r)!e&&a(o(n))||t.push(c(n));return n}}const{message:p}=r;return i([l,{name:u,message:p}],r)};return c})(!(t||n),!!t,new Map,r)(e),r},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var p=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,u))});const f=\\\"apply\\\",d=\\\"construct\\\",y=\\\"defineProperty\\\",h=\\\"deleteProperty\\\",w=\\\"get\\\",g=\\\"getOwnPropertyDescriptor\\\",m=\\\"getPrototypeOf\\\",_=\\\"has\\\",A=\\\"isExtensible\\\",b=\\\"ownKeys\\\",E=\\\"preventExtensions\\\",v=\\\"set\\\",k=\\\"setPrototypeOf\\\";var x=Object.freeze({__proto__:null,APPLY:f,CONSTRUCT:d,DEFINE_PROPERTY:y,DELETE_PROPERTY:h,GET:w,GET_OWN_PROPERTY_DESCRIPTOR:g,GET_PROTOTYPE_OF:m,HAS:_,IS_EXTENSIBLE:A,OWN_KEYS:b,PREVENT_EXTENSION:E,SET:v,SET_PROTOTYPE_OF:k});const j=\\\"destruct\\\",S=\\\"c70de905-a212-4eca-80aa-dad8bd4e677b\\\",$=\\\"=\\\"+S,P=\\\"-\\\"+S,{ArrayBuffer:B,Atomics:T,Promise:R}=globalThis,{isArray:O}=Array,{create:M,getPrototypeOf:F,values:C}=Object,D=F(Int32Array),I=M(T),L=({currentTarget:e,type:t,origin:n,lastEventId:r,source:s,ports:o},a)=>e.dispatchEvent(new MessageEvent(t,{data:a,origin:n,lastEventId:r,source:s,ports:o})),W=()=>R.withResolvers();let H=0;const N=new Map,U=(e,t)=>class extends e{constructor(e,...n){super(e,...n),e instanceof t&&N.set(this,[H++,0,W()])}},J=new WeakSet,q=e=>(J.add(e),e),z=(e,t)=>{const{data:n}=e,r=O(n)&&(n.at(0)===t||0===n.at(1)&&!t);return r&&(e.stopImmediatePropagation(),e.preventDefault()),r},K=e=>null!==e&&\\\"object\\\"==typeof e&&!J.has(e),G=new WeakMap,Y=(e,t,n)=>{if(N.has(e))t.set(e,N.get(e)[0]);else if(!(e instanceof D||e instanceof B))for(const r of C(e))K(r)&&!n.has(r)&&(n.add(r),Y(r,t,n))},V=(...e)=>({value:new R((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))\\\");n.onmessage=()=>t(\\\"ok\\\"),n.postMessage(e)}))}),X=(e,t)=>{const n=N.get(e),[r,s,{promise:o}]=n;return n[1]=t,[r,o]};let{Int32Array:Z,SharedArrayBuffer:Q,addEventListener:ee,postMessage:te}=globalThis,ne=!0,re=e=>e,se=!1;const oe=W();try{new Q(4),I.waitAsync||(I.waitAsync=V),oe.resolve()}catch(e){const t=te,n=ee,r=[];let s=\\\"\\\",o=\\\"\\\";Q=class extends B{},Z=U(Z,Q),re=q,se=!0,I.notify=(e,n)=>{const[r]=(e=>G.get(e))(e);return t([s,1,e,r,n]),0},I.waitAsync=(...e)=>{const[t,n]=X(...e);return{value:n}},I.wait=(e,t,...n)=>{const[r]=X(e,t,...n),a=new XMLHttpRequest;a.responseType=\\\"json\\\",a.open(\\\"POST\\\",`${o}?sabayon`,!1),a.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),a.send(`[\\\"${s}\\\",${r},${t}]`);const{response:i}=a;N.delete(e);for(let t=0;t<i.length;t++)e[t]=i[t];return\\\"ok\\\"},n(\\\"message\\\",(e=>{if(z(e,s)){const[t,n,...r]=e.data;switch(n){case 0:s=t,o=r.at(0)?.serviceWorker||\\\"\\\",o||(I.wait=null,oe.resolve());break;case 1:((e,t,n)=>{for(const[r,[s,o,{resolve:a}]]of N)if(t===s&&n===o){for(let t=0;t<e.length;t++)r[t]=e[t];N.delete(r),a(\\\"ok\\\");break}})(...r);break;case 2:((e,t,n)=>{for(const[n,r]of t)G.set(n,[r,e.currentTarget]);L(e,n)})(e,...r);break;case 3:oe.resolve()}}else if(ne){const{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i}=e;r.push([{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i},e.data])}})),ee=(e,...t)=>{if(n(e,...t),r.length)for(const e of r.splice(0))L(...e)},te=(e,...n)=>t(((e,t)=>{const n=new Map;return K(t)&&Y(t,n,new Set),n.size?[e,2,n,t]:t})(s,e),...n)}await oe.promise,ne=!1;const{BYTES_PER_ELEMENT:ae}=Int32Array,{BYTES_PER_ELEMENT:ie}=Uint16Array,{notify:ce}=I,le=new TextDecoder(\\\"utf-16\\\"),ue=new WeakSet,pe=(...e)=>(ue.add(e),e);let fe=\\\"\\\";const de=(e,t,n,r)=>{const[s]=r,o=n.get(s);if(!o)throw new Error(`Unknown proxy.${s}()`);e(o,t,r)};let ye=0;const he=([e,t,n,r,s,o,a,i,c],l)=>(...u)=>{let p=\\\"\\\"!==fe,f=0;p&&\\\"=\\\"!==fe[0]&&\\\"-\\\"!==fe[0]&&(f=((e,t)=>setTimeout(console.warn,3e3,`💀🔒 - proxy.${e}() in proxy.${t}()`))(l,fe));const d=ye++;let y=[];ue.has(u.at(-1)||y)&&ue.delete(y=u.pop());const h=n(i?u.map(i):u);let w=t(2*ae);return a([e,2,l,d,w,h,r],{transfer:y}),c(w,0).value.then((()=>{p&&clearTimeout(f);const n=w[1];if(!n)return;const r=ie*n;return w=t(r+r%ae),a([e,1,d,w]),c(w,0).value.then((()=>{const e=new Uint16Array(w.buffer),t=o?e.subarray(0,n):e.slice(0,n);return s(le.decode(t))}))}))},we=(e,t)=>new Proxy(t,{get:(t,n)=>{let r;return\\\"then\\\"!==n&&(r=t.get(n),r||(r=he(e,n),t.set(n,r))),r},set:(e,t,n)=>\\\"then\\\"!==t&&!!e.set(t,n)}),{wait:ge,waitAsync:me}=I;var _e=({parse:e,stringify:t,transform:n,interrupt:r}=JSON)=>{const s=((e,t)=>async(n,r,[s,o,a,i,c])=>{c&&(fe=s);try{const s=await n(...i);if(void 0!==s){const n=e(t?t(s):s);r.set(o,n),a[1]=n.length}}finally{c&&(fe=\\\"\\\"),a[0]=1,ce(a,0)}})(t,n),o=W(),a=new Map,i=new Map;let c=\\\"\\\",l=ge;if(ge&&r){const{handler:e,timeout:t=42}=r;l=(n,r,s)=>{for(;\\\"timed-out\\\"===(s=ge(n,r,0,t));)e();return s}}return ee(\\\"message\\\",(t=>{if(z(t,c)){const[r,u,...p]=t.data;switch(u){case 0:{const t=!!ge;c=r,o.resolve({polyfill:se,sync:t,transfer:pe,proxy:we([c,e=>new Z(new Q(e)),re,t,e,se,te,n,t?(...e)=>({value:{then:t=>t(l(...e))}}):me],a)});break}case 2:a.size?de(s,i,a,p):setTimeout(de,0,s,i,a,p);break;case 1:((e,[t,n])=>{const r=e.get(t);e.delete(t);for(let e=new Uint16Array(n.buffer),t=0,{length:s}=r;t<s;t++)e[t]=r.charCodeAt(t);ce(n,0)})(i,p)}}})),o.promise};const Ae=\\\"array\\\",be=\\\"function\\\",Ee=\\\"null\\\",ve=\\\"number\\\",ke=\\\"object\\\",xe=\\\"symbol\\\",je=\\\"undefined\\\";function Se(){return this}const $e=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),Pe=Object.create(null),{Object:Be,Proxy:Te,Reflect:Re}=globalThis,{isArray:Oe}=Array,{ownKeys:Me}=Re,{create:Fe,hasOwn:Ce,values:De}=Be,Ie=(e,t)=>t===Ae?e[0]:t===be?e():t===ke?e.$:e,Le=(e,t,n,r)=>{const s={type:{value:t}},o=Ce(e,\\\"valueOf\\\");for(const a of De(x)){let i=r(e[a]||Re[a]);if(o&&a===w){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,Ie(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return Fe(e,s)},We=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case ke:case je:r||(r=!1);case be:break;default:r=!1,t===e&&(t=Be(e))}const s=new Te(t,n),{destruct:o}=n;return o?((e,t,{debug:n,handler:r,return:s,token:o=e}=Pe)=>{const a=s||new Proxy(e,r||Pe),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),$e.register(...i),a})(e,o,{token:r,return:s}):s},He=e=>t=>{const n=typeof t;return n===ke?t?e.get(t)?.[0]??(e=>Oe(e)?Ae:ke)(t):Ee:n},Ne=e=>t=>{let n=typeof t;switch(n){case ke:if(!t){n=Ee;break}case be:const r=e.get(t);r&&([n,t]=r)}return[n,t]},Ue=e=>((e=>{$e.unregister(e)})(e),e);var Je=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:Ue,pair:Ne(t),typeOf:He(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of Me(e)){if(Ce(o,t))continue;const a=e[t];switch(t){case Ae:{const e=Le(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(We(t,[t],e,...n),Ae,t);break}case be:{const e=Le(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(We(t,(r=t,Se.bind(r)),e,...n),be,t);var r};break}case ke:{const e=Le(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(We(t,{$:t},e,...n),ke,t);break}default:{const e=Le(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(We(n,n,e,...r),t,n);break}}}return o};const{drop:qe,get:ze,hold:Ke}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===ve?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})();var Ge=Object.fromEntries([Ae,\\\"bigint\\\",\\\"boolean\\\",be,Ee,ve,ke,\\\"string\\\",xe,je].map(((e,t)=>[e,t])));const{[b]:Ye}=Reflect,Ve=new Map(Ye(Symbol).filter((e=>typeof Symbol[e]===xe)).map((e=>[Symbol[e],e]))),Xe=e=>Ve.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:Ze}=Array,{[f]:Qe}=Reflect;var et=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case Ge[ke]:return null==t?globalThis:typeof t===ve?r(t,l.object):t;case Ge[Ae]:return typeof t===ve?r(t,l.array):t;case Ge[be]:return typeof t===ve?r(t,l.function):ze(parseInt(t));case Ge[xe]:return(e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of Ve)if(n===e)return t})(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case ke:if(r==globalThis||null==r)r=null;else if(typeof r===ke&&!(r instanceof D))if(r=t(r),Ze(r))r=r.map(o);else for(const e in r)r[e]=o(r[e]);return[Ge[ke],r];case Ae:return[Ge[Ae],typeof r===ve?r:t(r).map(o)];case be:return[Ge[be],typeof r===be?String(Ke(t(r))):r];case xe:return[Ge[xe],Xe(e)];default:return[Ge[n],r]}},a=(...t)=>s(e(...t)),i={[y]:(e,t,n)=>a(y,e,o(t),o(n)),[h]:(e,t)=>a(h,e,o(t)),[w]:(e,t)=>a(w,e,o(t)),[m]:e=>a(m,e),[g]:(e,t)=>{const n=a(g,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[_]:(e,t)=>a(_,e,o(t)),[A]:e=>a(A,e),[b]:e=>a(b,e).map(s),[E]:e=>a(E,e),[v]:(e,t,n)=>a(v,e,o(t),o(n)),[k]:(e,t)=>a(k,e,o(t)),[j](t){n.delete(t),e(j,t)}},c={[ke]:i,[Ae]:i,[be]:{...i,[f]:(e,...t)=>a(f,e,...t.map(o)),[d]:(e,...t)=>a(d,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=Je(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case f:{const[e,t]=n;return o(await Qe(ze(r),s(e),t.map(s)))}case j:qe(r)}}}};const{assign:tt}=Object,nt=\\\"entries\\\",rt=\\\"readonly\\\",st=\\\"readwrite\\\",ot={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},at=({target:{result:e}})=>e;class it extends EventTarget{#e;#t;#n;async#r(e,t){const n=(await this.#e).transaction(nt,t,this.#t);return new Promise(((t,r)=>tt(e(n.objectStore(nt)),{onsuccess:t,onerror:r})))}constructor(e,{durability:t=ot.durability,prefix:n=ot.prefix}=ot){super(),this.#n=n,this.#t={durability:t},this.#e=new Promise(((t,n)=>{tt(indexedDB.open(`${this.#n}/${e}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(nt),n.oncomplete=()=>t(e)},onsuccess(e){t(at(e))},onerror(e){n(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(e){const{type:t,message:n,isTrusted:r}=e;return super.dispatchEvent(r?tt(new Event(t),{message:n}):e)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),rt).then(at)}async clear(){await this.#r((e=>e.clear()),st)}async delete(e){await this.#r((t=>t.delete(e)),st)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),rt).then(at)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),rt).then(at)}async keys(){return await this.#r((e=>e.getAllKeys()),rt).then(at)}async set(e,t){return await this.#r((n=>n.put(t,e)),st),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class ct extends Map{#s;#o;constructor(...e){super(),this.#s=new it(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}const lt={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},ut=new WeakMap,pt=e=>{const t=e||console,n={buffered:dt,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return ut.set(t,n),t}}},ft=new TextDecoder,dt=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(ft.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},yt=(e,...t)=>lt[typeof e](e,...t),{isArray:ht}=Array,{assign:wt,create:gt,defineProperty:mt,entries:_t}=Object,{all:At,resolve:bt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Et=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,vt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},kt=e=>Function(`'use strict';return (${e})`)(),xt=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),jt=Symbol.for(\\\"polyscript.js_modules\\\"),St=new Map;mt(globalThis,jt,{value:St}),new Proxy(St,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const $t=(e,t)=>!t.startsWith(\\\"_\\\"),Pt=(e,t)=>new Proxy(e,{has:$t,get:(e,n)=>e[t][n]}),Bt=(e,t)=>import(e).then((e=>{St.set(t,{...e})})),Tt=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(wt(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),Rt=e=>/\\\\.css$/i.test(new URL(e).pathname),Ot=(e,t)=>e.has(t),Mt=e=>[...e.keys()];var Ft=(e,t,n,r)=>{const s=globalThis[jt];if(n)for(let[e,t]of _t(n)){let n=s.get(t);n&&!ht(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:Ot,ownKeys:Mt,get:(e,s)=>{let o=e.get(s);if(ht(o)){let a=o;o=null;for(let e of a)e=Et(e,r),Rt(e)?n.importCSS(e):(n.importJS(e,s),o=t[jt].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Ct=new Map,Dt=e=>Ct.get(e),It=(e,t)=>{try{return Function(\\\"require\\\",t)(Dt)}catch(t){ut.get(e).stderr(t)}};var Lt={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:e=>pt().get(e),registerJSModule(e,t,n){Ct.set(t,n)},run:It,runAsync:It,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(Dt,n)}catch(t){ut.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Wt=Object.getOwnPropertyDescriptors(Response.prototype),Ht=e=>\\\"function\\\"==typeof e,Nt={get:(e,t)=>Wt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!Ht(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,Wt[t]):((e,t)=>Ht(t)?t.bind(e):t)(e,e[t])};var Ut=(e,...t)=>new Proxy(fetch(e,...t),Nt);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const Jt=!globalThis.window,qt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):Kt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},zt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},Kt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},Gt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},Yt=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},Vt=(e,t)=>Ut(Et(e,t)).arrayBuffer(),Xt=(e,t,n,r)=>At((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(ht(r))return r.map((n=>({url:Yt([e,n]),path:Yt([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:Yt([t,s])}]}))})(n).map((({url:n,path:s})=>Vt(n,r).then((n=>e.writeFile(t,s,n)))))),Zt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,Qt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),en=(e,t,n,r)=>At((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of _t(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,Qt(o,t))}else{const e=Qt(s,t),a=Zt(e,Qt(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>Vt(n,r).then((r=>e.writeFile(t,s,r,n)))))),tn=({main:e,worker:t},n)=>{const r=[];if(t&&Jt)for(let[e,s]of _t(t))e=Et(e,n),r.push(Bt(e,s));if(e&&!Jt)for(let[t,s]of _t(e))t=Et(t,n),Rt(t)?Tt(t):r.push(Bt(t,s));return At(r)},nn=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},rn=new WeakMap,sn=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await en(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await Xt(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await tn(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},on=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await rn.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new ct(e);return await t.sync(),t},n.JSON=p),e.registerJsModule(t,n)},an=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},cn=(e,t,...n)=>{try{return e.runPython(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},ln=async(e,t,...n)=>{try{return await e.runPythonAsync(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},un=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){ut.get(e).stderr(t)}};var pn=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const fn=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e),dn=(e,t)=>{try{e.mkdir(t)}catch(e){}},yn=nn(\\\"mpy\\\");var hn={type:\\\"micropython\\\",module:(e=\\\"1.24.1\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=pt({stderr:dt(console.error),stdout:dt(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),yn(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=wn.bind(this,i,r);return rn.set(i,c),await sn(this,yn,i,t,r),this.writeFile(i,\\\"./mip.py\\\",pn),t.packages&&(yn(\\\"Loading packages\\\"),await c(t.packages),yn(\\\"Loaded packages\\\")),yn(\\\"Loaded MicroPython\\\"),i},registerJSModule:on,run:cn,runAsync:ln,runEvent:un,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=an(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DPXsOtR5.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)dn(s,i);else{dn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return qt(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return qt(i,t,n)}};async function wn(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Et(s,t),r=await Ut(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const gn=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)})),mn=Object.create(null),_n=(e,t,{debug:n,handler:r,return:s,token:o=e}=mn)=>{const a=s||new Proxy(e,r||mn),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),gn.register(...i),a},An={dict_converter:Object.fromEntries},{stringify:bn}=JSON;let En=!1;const vn=e=>(...t)=>{try{return En=!0,e(...t)}finally{En=!1}};let kn=!1;const xn=()=>{if(kn)return;kn=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){En=!1;let o=e.get(s)?.deref();if(!o)try{o=_n(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),En=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return En&&n(t),s(this,e,t)}},call:{value(e,...t){return En&&n(t),s(this,e,t)}}})},jn=nn(\\\"py\\\"),Sn=new WeakMap;var $n={type:\\\"pyodide\\\",module:(e=\\\"0.27.2\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){Jt||\\\"auto\\\"!==t.experimental_create_proxy||xn(),jn(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;jn(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),i=new ct(a),c={indexURL:a},l=\\\"never\\\"!==t.packages_cache;if(await i.sync(),l){if(s){s=s.slice(0).sort();const e=bn(s);if(i.has(e)){const t=new Blob([i.get(e)],{type:\\\"application/json\\\"});c.lockFileURL=URL.createObjectURL(t),c.packages=s.map((e=>e.split(/[>=<]=/)[0])),s=null}}}else i.clear();jn(\\\"Loaded Storage\\\");const{stderr:u,stdout:p,get:f}=pt(),d=await f(e({stderr:u,stdout:p,...c})),y=Bn.bind(d);return o&&Sn.set(d,o),rn.set(d,y),await sn(this,jn,d,t,r),s&&await y(s,i,l),await i.close(),c.lockFileURL&&URL.revokeObjectURL(c.lockFileURL),jn(\\\"Loaded Pyodide\\\"),d},registerJSModule:on,run:vn(cn),runAsync:vn(ln),runEvent:vn(un),transform:(e,t)=>Pn.call(e,t),writeFile:(e,t,n,r)=>{const s=an(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return qt({FS:o,PATH:a,PATH_FS:i},t,n)}};function Pn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(An);if(e instanceof Map)return new Map([...e.entries()]);if(ht(e))return e.map(Pn,this)}return e}async function Bn(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,jn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(Sn.has(this)&&o.set_index_urls(Sn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof ct){const n=o.freeze();t.set(bn(e),n)}o.destroy()}const Tn=\\\"ruby-wasm-wasi\\\",Rn=Tn.replace(/\\\\W+/g,\\\"_\\\");var On={type:Tn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await Ut(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await en(this,a,t.files,r),t.fetch&&await Xt(this,a,t.fetch,r),t.js_modules&&await tn(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Rn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(yt(t),...n),runAsync:(e,t,...n)=>e.evalAsync(yt(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Rn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${Tn}`)}};var Mn={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=pt(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await en(this,c,n.files,s),n.fetch&&await Xt(this,c,n.fetch,s),n.js_modules&&await tn(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){ut.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(Kt(e,zt(t)),t=Gt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const Fn=new WeakMap,Cn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=Fn.get(e),{output:o,result:a}=await n.captureR(yt(t));for(const{type:e,data:t}of o)s[e](t);return _n(a,r,{token:!1})};var Dn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.2\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=pt(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return Fn.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:ut.get(o)}),t.files&&await en(this,o,t.files,r),t.fetch&&await Xt(this,o,t.fetch,r),t.js_modules&&await tn(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:Cn,runAsync:Cn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const In=new Map,Ln=new Map,Wn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=In.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(Ln.set(t,e),s(r,e,n,o))))}}),Hn=e=>{for(const t of[].concat(e.type))In.set(t,e)};for(const e of[Lt,hn,$n,On,Mn,Dn])Hn(e);const{parse:Nn}=JSON,Un=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Et(e),n]})(e,t);return\\\"json\\\"===s?n=Ut(r).json():\\\"toml\\\"===s?n=Ut(r).text().then(fn):\\\"string\\\"===s?n=Jn(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=Jn(n)),[n,e=r]},Jn=e=>{try{return Nn(e)}catch(t){return fn(e)}},qn=\\\"BeforeRun\\\",zn=\\\"AfterRun\\\",Kn=[`code${qn}`,`code${qn}Async`,`code${zn}`,`code${zn}Async`],Gn=[\\\"onWorker\\\",\\\"onReady\\\",`on${qn}`,`on${qn}Async`,`on${zn}`,`on${zn}Async`];function Yn(e,t){const{run:n,runAsync:r}=In.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Vn=(e,t,n,r,s,o)=>{if(s||o){const a=Yn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let Xn,Zn,Qn;const er=(e,t)=>{addEventListener(e,t||(async t=>{try{await Xn,Zn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:tr,stringify:nr}=p,{proxy:rr,sync:sr,polyfill:or,window:ar,isWindowProxy:ir}=await(async e=>{const t=await _e(e),{isProxy:n,global:r,method:s}=et(t.proxy[$],e?.transform||(e=>e));return t.proxy[P]=s,{...t,window:r,isWindowProxy:n}})({parse:tr,stringify:nr,transform:e=>Qn?Qn(e):e}),cr={polyfill:or,sync:rr,window:sr?ar:null,isWindowProxy:ir,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};er(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Xn=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:u,async:p}=e,f=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(i,l),d=await((e,t,n,r={})=>(t&&([r,t]=Un(t,n,r)),bt(r).then((n=>Wn[e](n,t)))))(f,t,n,u),{js_modules:y}=Ln.get(f),h=y?.main,w=gt(In.get(i)),g=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:ut.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(w,c||i,u||{},d);let m=\\\"run\\\";if(p&&(m+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Kn){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&p||!s&&!p)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,xt(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,xt(t),...o);return r&&await s(e,r,...o),a}})(w,m,n,r);for(const n of Gn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&p||!s&&!p){const s=kt(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}Vn(w,g,cr,p,e,t)}let _,A,b,E=null,v=\\\"\\\";sr&&(({CustomEvent:_,document:A}=ar),E=o&&A.getElementById(o)||null,b=e=>vt(E,c||i,e,!0,_));const k=Ft(ar,rr,h,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Pt(r,e));t.registerJSModule(n,s,r)})(i,w,d,k),w.registerJSModule(d,\\\"polyscript\\\",{xworker:cr,currentScript:E,config:g.config,js_modules:k,get target(){return!v&&E&&(\\\"SCRIPT\\\"===a?E.after(wt(ar.document.createElement(`script-${c||i}`),{id:v=`${o}-target`})):(v=o,E.replaceChildren(),E.style.display=\\\"block\\\")),v}}),Zn=w.runEvent.bind(w,d),Qn=w.transform.bind(w,d),E&&b(\\\"ready\\\"),s?.onReady&&kt(s?.onReady).call(w,Yn.call(w,g,d),cr),await w[m](d,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(w.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";d.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&d.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return E&&b(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),d}catch(e){postMessage(e)}})(),er(\\\"error\\\"),er(\\\"message\\\"),er(\\\"messageerror\\\"),sr&&addEventListener(\\\"py:progress\\\",(({type:e,detail:t})=>{ar.dispatchEvent(new ar.CustomEvent(e,{detail:t}))}))}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTRUCT } from 'js-proxy/traps';\nimport { DESTROY } from '../proxy/traps.js';\n\nimport { MAIN, WORKER } from './constants.js';\nimport DEBUG from '../debug.js';\n\nimport coincident from '../main.js';\nimport proxyMain from '../proxy/main.js';\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  const esm = options?.import;\n  const exports = coincident(options);\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      proxy[MAIN] = proxyMain(\n        // options.import = name => valid(name) && name\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n\n      if (DEBUG) {\n        const debug = proxy[MAIN];\n        proxy[MAIN] = (TRAP, ...args) => {\n          const destructing = TRAP === DESTRUCT;\n          const method = destructing ? console.warn : console.log;\n          method('Main before', TRAP, ...args);\n          const result = debug(TRAP, ...args);\n          if (!destructing) method('Main after', TRAP, result);\n          return result;\n        };\n      }\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.24.1') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages);\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.2') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.slice(0).sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.2') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","workers","Map","map","name","has","set","Promise","withResolvers","ignore","Set","workersHandler","freeze","_","undefined","promise","w","sync","env","self","globalThis","deserialize","serialized","$","as","out","index","unpair","type","arr","object","key","Date","source","flags","RegExp","add","message","BigInt","Uint8Array","buffer","DataView","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","spread","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","OWN_KEYS","DESTRUCT","DESTROY","CHANNEL","MAIN","WORKER","ArrayBuffer","Atomics","$Atomics","isArray","Array","create","getPrototypeOf","values","TypedArray","Int32Array","id","views","extend","Class","SharedArrayBuffer","constructor","rest","super","this","ignoreList","WeakSet","ignorePatch","isChannel","event","channel","data","yes","at","stopImmediatePropagation","preventDefault","isObject","transferred","WeakMap","transferViews","transfer","visited","waitAsyncPatch","resolve","Worker","onmessage","postMessage","actionWait","view","currentTarget","origin","lastEventId","ports","dispatchEvent","MessageEvent","dispatch","polyfill","asModule","url","waitAsync","crypto","randomUUID","addListener","addEventListener","register","serviceWorker","s","sw","done","c","uid","join","delete","getRegistration","ready","controller","installing","waiting","active","state","location","reload","once","notify","worker","getData","known","waitAsyncPoly","URL","href","navigator","ACTION","_view","_id","_index","length","actionNotify","size","postData","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","Uint16Array","decoder","TextDecoder","buffers","seppuku","invoke","i32View","isSync","transform","deadlock","timer","setTimeout","console","warn","pop","sb","clearTimeout","bytes","ui16a","sub","subarray","decode","coincident$1","waitLength","async","callback","results","actionLength","$Worker","proxy","details","cb","createProxy","Error","charCodeAt","actionFill","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","numeric","fromEntries","ownKeys","Reflect","Symbol","filter","toSymbol","keyFor","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","hold","return","token","target","EventTarget","eventsHandler","defineProperty","listener","concat","proxyMain","__worker__","clear","drop","ids","a","b","had","heap","proxies","onGC","ref","toEntry","fromEntry","numericTYPE","fn","deref","Event","methods","method","handleEvent","WeakRef","startsWith","for","symbol","fromSymbol","asEntry","asImport","import","globals","TRAP","descriptor","re","place","q","f","esm","exports","coincident","terminate","io","stdio","context","localIO","buffered","stderr","error","stdout","log","engine","interpreter","EOL","maybeUI8","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","reject","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","IDBMap","db","transaction","what","how","t","onsuccess","onerror","objectStore","indexedDB","open","onupgradeneeded","objectStoreNames","createObjectStore","oncomplete","boundDispatch","isTrusted","close","store","count","all","forEach","getKey","getAllKeys","put","toStringTag","IDBMapSync","queue","dedent","string","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","absoluteURL","base","nodeInfo","node","tag","tagName","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","createProgress","loader","loadProgress","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","mip","TextEncoder","encode","toml","text","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","PyProxy","toJs","_module","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","apply","indexURLs","pyodide","loadPyodide","experimental_create_proxy","index_urls","indexURL","save","packages_cache","sort","lockFileURL","createObjectURL","revokeObjectURL","unpackArchive","ffi","_log","loadPackage","micropip","set_index_urls","keep_going","frozen","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","service_worker","isHook","Hook","resolver","bootstrap","writable","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handle","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","body","wn","versionValue","configValue","workerName","targetValue","currentScript","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","v","cfg","o","u","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","$customObserver","dontBother","indexOf","remove","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,27,28,29,30,31,32,45]}