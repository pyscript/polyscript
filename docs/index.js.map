{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../esm/workers.js","../node_modules/@webreflection/coincident/dist/flatted_encoder.js","../node_modules/@webreflection/coincident/src/proxy/traps.js","../node_modules/@webreflection/coincident/src/utils/encoder.js","../node_modules/@webreflection/coincident/src/json/encoder.js","../node_modules/proxy-target/esm/types.js","../node_modules/@webreflection/coincident/src/utils/shared.js","../node_modules/@webreflection/coincident/src/window/types.js","../node_modules/@webreflection/coincident/src/proxy/encoder.js","../node_modules/@webreflection/coincident/src/window/constants.js","../node_modules/@webreflection/coincident/src/utils.js","../node_modules/@webreflection/coincident/src/main.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/@webreflection/coincident/src/window/symbol.js","../node_modules/gc-hook/esm/index.js","../node_modules/@webreflection/coincident/src/window/events.js","../node_modules/@webreflection/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../esm/worker/xworker.js","../node_modules/@webreflection/coincident/src/window/main.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../node_modules/@webreflection/coincident/dist/flatted.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/_nativefs.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","var e={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};let t=\"coincident-\";try{new SharedArrayBuffer(4,{maxByteLength:8}),t+=crypto.randomUUID()}catch(e){t+=Math.random().toString(36).substring(2)}const{getPrototypeOf:r}=Object,s=e=>{const t=typeof e;switch(t){case\"function\":case\"undefined\":return\"\";case\"object\":return null===e?\"null\":\"object\";default:return t}},{isArray:n}=Array,{isView:a}=ArrayBuffer,{stringify:o}=JSON,c=(t,r,s)=>{const n=r.get(s);return\"number\"==typeof n?(t.push(e.ref,n),!0):(r.set(s,t.length),!1)},f=(t,o,u,i=s(u))=>{switch(i){case\"null\":t.push(e.null);break;case\"object\":if(c(t,o,u))break;switch(!0){case n(u):{const r=u.length;t.push(e.array,r);for(let e=0;e<r;e++)f(t,o,u[e]);break}case a(u):{const{BYTES_PER_ELEMENT:s,buffer:n,byteOffset:a,length:f}=u;if(t.push(e.view,(e=>{for(;!(e.name in globalThis);)e=r(e);return e.name})(u.constructor),a,f!==(n.byteLength-a)/s?f:0),c(t,o,n))break;u=n}case u instanceof ArrayBuffer:{const r=u.byteLength,s=u.resizable?u.maxByteLength:0;if(t.push(e.buffer,r,s),r){const e=new Uint8Array(u,0,r);for(let r=0;r<e.length;r+=65535)t.push.apply(t,e.subarray(r,r+65535))}break}case u instanceof Date:t.push(e.date,+u);break;case u instanceof Map:{const r=t.push(e.map,0);let n=0;for(const[e,r]of u){const a=s(e),c=s(r);a&&c&&(f(t,o,e,a),f(t,o,r,c),n++)}t[r-1]=n;break}case u instanceof Set:{const r=t.push(e.set,0);let n=0;for(const e of u){const r=s(e);r&&(f(t,o,e,r),n++)}t[r-1]=n;break}case u instanceof RegExp:t.push(e.regexp,u.source,u.flags);break;case u instanceof Error:t.push(e.error,u.name,u.message,u.stack,u.cause);break;default:{if(\"toJSON\"in u){const r=u.toJSON();if(r===u){t.push(e.object,0);break}if(c(t,o,u=r))break}const r=t.push(e.object,0);let n=0;for(const e in u){const r=u[e],a=s(r);a&&(f(t,o,e,\"string\"),f(t,o,r,a),n++)}t[r-1]=n;break}}break;case\"boolean\":t.push(u?e.true:e.false);break;case\"string\":if(c(t,o,u))break;t.push(e.string,u);break;case\"bigint\":t.push(e[i],u.toString());break;case\"symbol\":{const r=(e=>{const t=String(e).slice(7,-1);return t.startsWith(\"Symbol.\")||Symbol.keyFor(e)?t:\"\"})(u);if(r){t.push(e[i],r);break}}case\"\":t.push(e.undefined);break;default:t.push(e[i],u)}},u=e=>{const t=[];return f(t,new Map,e),o(t)},i=(e=>({byteOffset:t=0}={})=>(r,s)=>{const n=e(r),a=n.length,o=2*a+t;s.byteLength<o&&s.grow(o);const c=new Uint16Array(s,t,a);for(let e=0;e<a;e++)c[e]=n.charCodeAt(e);return a})(u);export{u as encode,i as encoder};\n","export const DESTROY = 'destroy';\n","export default encode => ({ byteOffset = 0 } = {}) => (value, buffer) => {\r\n  const string = encode(value);\r\n  const length = string.length;\r\n  const size = length * 2 + byteOffset;\r\n  if (buffer.byteLength < size) buffer.grow(size);\r\n  const ui16a = new Uint16Array(buffer, byteOffset, length);\r\n  for (let i = 0; i < length; i++)\r\n    ui16a[i] = string.charCodeAt(i);\r\n  return length;\r\n};\r\n","import createEncoder from '../utils/encoder.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => stringify(value);\r\n\r\nexport const encoder = createEncoder(stringify);\r\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","const { getPrototypeOf } = Object;\r\nexport const toConstructorName = constructor => {\r\n  while (!(constructor.name in globalThis))\r\n    constructor = getPrototypeOf(constructor);\r\n  return constructor.name;\r\n};\r\n\r\nexport const toSymbolName = value => {\r\n  const name = String(value).slice(7, -1);\r\n  return name.startsWith('Symbol.') || Symbol.keyFor(value) ? name : '';\r\n};\r\n\r\nexport const toSymbolValue = name => name.startsWith('Symbol.') ?\r\n  Symbol[name.slice(name.indexOf('.') + 1)] :\r\n  Symbol.for(name)\r\n;\r\n\r\nexport const toType = value => {\r\n  const type = typeof value;\r\n  switch (type) {\r\n    case 'function':\r\n    case 'undefined':\r\n      return '';\r\n    case 'object':\r\n      return value === null ? 'null' : 'object';\r\n    default:\r\n      return type;\r\n  }\r\n};\r\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n  'view',\n].map((k, i) => [k, i]));\n","import { BIGINT } from 'js-proxy/types';\r\n\r\nimport { toConstructorName } from '../utils/shared.js';\r\nimport createEncoder from '../utils/encoder.js';\r\nimport numeric from '../window/types.js';\r\n\r\nconst { stringify } = JSON;\r\n\r\nexport const encode = value => {\r\n  switch (value[0]) {\r\n    case numeric.view: {\r\n      const { constructor, buffer } = value[1];\r\n      value[1] = [toConstructorName(constructor), [...new Uint8Array(buffer)]];\r\n      break;\r\n    }\r\n    case numeric[BIGINT]: {\r\n      value[1] = value[1].toString();\r\n      break;\r\n    }\r\n  }\r\n  return stringify(value);\r\n};\r\n\r\nexport const encoder = createEncoder(encode);\r\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = '592e34ef';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","const {\r\n  assign,\r\n  create,\r\n} = Object;\r\n\r\n/* c8 ignore start */\r\nlet ID = 'coincident-', native = true;\r\ntry {\r\n  new SharedArrayBuffer(4, { maxByteLength: 8 });\r\n  ID += crypto.randomUUID();\r\n}\r\ncatch (_) {\r\n  native = false;\r\n  ID += Math.random().toString(36).substring(2);\r\n}\r\n/* c8 ignore end */\r\n\r\nconst byteOffset = 2 * Int32Array.BYTES_PER_ELEMENT;\r\nconst minByteLength = 0xFFFF;\r\nconst maxByteLength = 0x1000000;\r\n\r\nconst defaults = {\r\n  // ⚠️ mandatory: first int32 to notify, second one to store the written length\r\n  byteOffset,\r\n  // ⚠️ mandatory: to encode *into* a SharedArrayBuffer\r\n  useUTF16: true,\r\n  // ⚠️ mandatory: to satisfy circular/cyclic data\r\n  circular: true,\r\n};\r\n\r\nconst map = new Map;\r\nconst rtr = ($, id = 0) => [\r\n  uid => {\r\n    const wr = withResolvers();\r\n    do { uid = $(id++) }\r\n    while (map.has(uid));\r\n    map.set(uid, wr);\r\n    return [uid, wr];\r\n  },\r\n  (uid, value, error) => {\r\n    const wr = map.get(uid);\r\n    map.delete(uid);\r\n    if (error) wr.reject(error);\r\n    else wr.resolve(value);\r\n  },\r\n];\r\n\r\nconst result = async (data, proxied, transform) => {\r\n  try {\r\n    const result = await proxied[data[1]].apply(null, data[2]);\r\n    data[1] = transform ? transform(result) : result;\r\n    data[2] = null;\r\n  }\r\n  catch (error) { data[2] = error }\r\n};\r\n\r\nconst set = (proxied, name, callback) => {\r\n  const ok = name !== 'then';\r\n  if (ok) proxied[name] = callback;\r\n  return ok;\r\n};\r\n\r\n/** @param {Event} event */\r\nconst stop = event => {\r\n  event.stopImmediatePropagation();\r\n  event.preventDefault();\r\n};\r\n\r\nconst withResolvers = () => Promise.withResolvers();\r\n\r\nexport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  maxByteLength,\r\n  minByteLength,\r\n  native,\r\n  result,\r\n  rtr,\r\n  set,\r\n  stop,\r\n  withResolvers,\r\n};\r\n","import { encoder } from './json/encoder.js';\r\n\r\nimport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  native,\r\n  result,\r\n  rtr,\r\n  set,\r\n  stop,\r\n} from './utils.js';\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n// Note: InstallTrigger is deprecated so once it's gone I do hope\r\n//       this workaround would be gone too!\r\nconst UID = 'InstallTrigger' in globalThis ? ID : '';\r\n\r\nconst { notify } = Atomics;\r\n\r\nconst Number = value => value;\r\n\r\nexport default options => {\r\n  const transform = options?.transform;\r\n  const encode = (options?.encoder || encoder)(defaults);\r\n\r\n  class Worker extends globalThis.Worker {\r\n    constructor(url, options) {\r\n      const { port1: channel, port2 } = new MessageChannel;\r\n      const [ next, resolve ] = rtr(Number);\r\n      const callbacks = new Map;\r\n      const proxied = create(null);\r\n\r\n      let resolving = '';\r\n\r\n      const deadlock = ({ promise }, name) => {\r\n        if (resolving) {\r\n          const t = setTimeout(\r\n            console.warn,\r\n            3e3,\r\n            `💀🔒 - is proxy.${resolving}() awaiting proxy.${name}() ?`\r\n          );\r\n          promise = promise.then(\r\n            result => {\r\n              clearTimeout(t);\r\n              return result;\r\n            },\r\n            error => {\r\n              clearTimeout(t);\r\n              return Promise.reject(error);\r\n            },\r\n          );\r\n        }\r\n        return promise;\r\n      };\r\n\r\n      super(url, assign({ type: 'module' }, options)).proxy = new Proxy(proxied, {\r\n        get: (_, name) => {\r\n          // the curse of potentially awaiting proxies in the wild\r\n          // requires this ugly guard around `then`\r\n          if (name === 'then') return;\r\n          let cb = callbacks.get(name);\r\n          if (!cb) {\r\n            callbacks.set(name, cb = (...args) => {\r\n              const [uid, wr] = next();\r\n              channel.postMessage([uid, name, transform ? args.map(transform) : args]);\r\n              return deadlock(wr, name);\r\n            });\r\n          }\r\n          return cb;\r\n        },\r\n        set\r\n      });\r\n\r\n      super.postMessage(UID, [port2]);\r\n\r\n      // @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n      if (native && UID) {\r\n        super.addEventListener('message', event => {\r\n          const { data } = event;\r\n          if (data?.ID === UID) {\r\n            stop(event);\r\n            channel.onmessage(data);\r\n          }\r\n        });\r\n      }\r\n\r\n      channel.onmessage = async ({ data }) => {\r\n        const i32 = data[0];\r\n        const type = typeof i32;\r\n        if (type === 'number')\r\n          resolve.apply(null, data);\r\n        else {\r\n          resolving = data[1];\r\n          await result(data, proxied, transform);\r\n          resolving = '';\r\n          if (type === 'string')\r\n            channel.postMessage(data);\r\n          else {\r\n            const result = data[2] || data[1];\r\n            // at index 1 we store the written length or 0, if undefined\r\n            i32[1] = result === void 0 ? 0 : encode(result, i32.buffer);\r\n            // at index 0 we set the SharedArrayBuffer as ready\r\n            i32[0] = 1;\r\n            notify(i32, 0);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    Worker,\r\n    native,\r\n  };\r\n};\r\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","import { SYMBOL } from 'js-proxy/types';\n\nconst symbols = new Map;\n\nfor (const s of Reflect.ownKeys(Symbol)) {\n  if (typeof Symbol[s] === SYMBOL) {\n    symbols.set(Symbol[s], s);\n    symbols.set(s, Symbol[s]);\n  }\n}\n\nexport const fromSymbol = value => (\n  symbols.get(value) ||\n  Symbol.for(value.slice(1))\n);\n\nexport const toSymbol = value => (\n  symbols.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\nconst { isView } = ArrayBuffer;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        if (isView(value)) return [numeric.view, value];\n        return [numeric[OBJECT], hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        for (const key in value)\n          value[key] = fromEntry(value[key]);\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n    return [numeric[UNDEFINED], void 0];\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport { encoder } from '@webreflection/coincident/flatted/encoder';\nimport coincident from '@webreflection/coincident/window/main';\nconst { Worker } = coincident({ encoder });\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise(((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o})))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise(((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),n).then(o)}async clear(){await this.#r((e=>e.clear()),r)}async delete(e){await this.#r((t=>t.delete(e)),r)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),n).then(o)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),n).then(o)}async keys(){return await this.#r((e=>e.getAllKeys()),n).then(o)}async set(e,t){return await this.#r((n=>n.put(t,e)),r),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}let c=\\\"coincident-\\\";try{new SharedArrayBuffer(4,{maxByteLength:8}),c+=crypto.randomUUID()}catch(An){c+=Math.random().toString(36).substring(2)}const{fromCharCode:l}=String,{min:u}=Math;const{defineProperty:p}=Object,d=e=>{switch(e[y++]){case 1:{const t=e[y++],n=[];e[y-2]=n;for(let r=0;r<t;r++)n[r]=d(e);return n}case 2:{const t=e[y++],n={};e[y-2]=n;for(let r=0;r<t;r++)n[d(e)]=d(e);return n}case 4:{const t=e[y++];return e[y-2]=t,t}case 0:return e[e[y++]];case 3:return e[y++];case 12:return BigInt(e[y++]);case 5:return!0;case 6:return!1;case 7:return null;case 13:return;case 8:{const t=e[y++],n=e[y++],r=[t];n&&r.push({maxByteLength:n});const s=new ArrayBuffer(...r);e[y-3]=s;const o=new Uint8Array(s,0,t);for(let n=0;n<t;n++)o[n]=e[y++];return s}case 9:{const t=e[y++],n=e[y++],r=e[y++],s=[d(e),n];r&&s.push(r);const o=new globalThis[t](...s);return e[y-4]=o,o}case 10:return(t=e[y++]).startsWith(\\\"Symbol.\\\")?Symbol[t.slice(t.indexOf(\\\".\\\")+1)]:Symbol.for(t);case 11:{const t=new Date(e[y++]);return e[y-2]=t,t}case 14:{const t=e[y++],n=new Map;e[y-2]=n;for(let r=0;r<t;r++){const t=d(e),r=d(e);void 0!==t&&n.set(t,r)}return n}case 15:{const t=e[y++],n=new Set;e[y-2]=n;for(let r=0;r<t;r++){const t=d(e);void 0!==t&&n.add(t)}return n}case 16:{const t=e[y++],n=e[y++],r=new RegExp(t,n);return e[y-3]=r,r}case 17:{const t=globalThis[e[y++]]||Error,n=e[y++],r=e[y++],s=new t(n,{cause:e[y++]});return e[y-5]=p(s,\\\"stack\\\",{value:r}),s}default:throw new Error(`Unknown type: ${e[y-1]}`)}var t},{parse:f}=JSON;let y=0;const h=(e=>({byteOffset:t})=>(n,r)=>{const s=new Uint16Array(r,t,n);let o=\\\"\\\",a=0;for(;a<n;){const e=u(a+65535,n);o+=l.apply(null,s.subarray(a,e)),a=e}return e(o)})((e=>{y=0;const t=f(e);return t.length?d(t):void 0})),m=\\\"592e34ef\\\",w=\\\"=\\\"+m,g=\\\"-\\\"+m,{create:b}=Object;let _=\\\"coincident-\\\",A=!0;try{new SharedArrayBuffer(4,{maxByteLength:8}),_+=crypto.randomUUID()}catch(e){A=!1,_+=Math.random().toString(36).substring(2)}const E=2*Int32Array.BYTES_PER_ELEMENT,v={byteOffset:E,useUTF16:!0,circular:!0},S=new Map,k=(e,t,n)=>{const r=\\\"then\\\"!==t;return r&&(e[t]=n),r},x=()=>Promise.withResolvers(),{fromCharCode:j}=String,{min:B}=Math;var P=e=>({byteOffset:t})=>(n,r)=>{const s=new Uint16Array(r,t,n);let o=\\\"\\\",a=0;for(;a<n;){const e=B(a+65535,n);o+=j.apply(null,s.subarray(a,e)),a=e}return e(o)};const{parse:$}=JSON,O=P($),F=\\\"array\\\",T=\\\"bigint\\\",R=\\\"function\\\",M=\\\"null\\\",D=\\\"number\\\",L=\\\"object\\\",C=\\\"symbol\\\",I=\\\"undefined\\\";var N=Object.fromEntries([F,T,\\\"boolean\\\",R,M,D,L,\\\"string\\\",C,I,\\\"view\\\"].map(((e,t)=>[e,t])));const{parse:U}=JSON,H=P((e=>{const t=U(e);switch(t[0]){case N.view:{const[e,n]=t[1],r=new Uint8Array(n);t[1]=new globalThis[e](r.buffer);break}case N[I]:t[1]=void 0;break;case N[T]:t[1]=BigInt(t[1])}return t})),W=x();addEventListener(\\\"message\\\",(e=>{(e=>{e.stopImmediatePropagation(),e.preventDefault()})(e),W.resolve([e.data,e.ports[0]])}),{once:!0});var J=async e=>{const[t,n]=await W.promise,r=A&&!!t,s=e?.transform,o=(e?.decoder||O)(v);let a,i;if(A){const t=new SharedArrayBuffer(e?.minByteLength||65535,{maxByteLength:e?.maxByteLength||16777216});a=new Int32Array(t),i=Atomics.wait}const[c,l]=((e,t=0)=>[n=>{const r=x();do{n=e(t++)}while(S.has(n));return S.set(n,r),[n,r]},(e,t,n)=>{const r=S.get(e);S.delete(e),n?r.reject(n):r.resolve(t)}])(String),u=new Map,p=b(null),d=new Proxy(p,{get(e,l){if(\\\"then\\\"===l)return;let p=u.get(l);return p||u.set(l,p=(...e)=>{const u=[a,l,s?e.map(s):e];if(A){r?postMessage({ID:t,data:u}):n.postMessage(u),i(a,0),a[0]=0;const e=a[1]?o(a[1],a.buffer):void 0;if(e instanceof Error)throw e;return e}{const[e,t]=c();return u[0]=e,n.postMessage(u),t.promise}}),p},set:k});return n.onmessage=async({data:e})=>{\\\"string\\\"==typeof e[0]?l.apply(null,e):(await(async(e,t,n)=>{try{const r=await t[e[1]].apply(null,e[2]);e[1]=n?n(r):r,e[2]=null}catch(t){e[2]=t}})(e,p,s),n.postMessage(e))},{native:A,proxy:d}};const q=\\\"apply\\\",z=\\\"construct\\\",K=\\\"defineProperty\\\",G=\\\"deleteProperty\\\",Y=\\\"get\\\",V=\\\"getOwnPropertyDescriptor\\\",X=\\\"getPrototypeOf\\\",Z=\\\"has\\\",Q=\\\"isExtensible\\\",ee=\\\"ownKeys\\\",te=\\\"preventExtensions\\\",ne=\\\"set\\\",re=\\\"setPrototypeOf\\\";var se=Object.freeze({__proto__:null,APPLY:q,CONSTRUCT:z,DEFINE_PROPERTY:K,DELETE_PROPERTY:G,GET:Y,GET_OWN_PROPERTY_DESCRIPTOR:V,GET_PROTOTYPE_OF:X,HAS:Z,IS_EXTENSIBLE:Q,OWN_KEYS:ee,PREVENT_EXTENSION:te,SET:ne,SET_PROTOTYPE_OF:re});const oe=\\\"destruct\\\";function ae(){return this}const ie=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)})),ce=Object.create(null),le=(e,t,{debug:n,handler:r,return:s,token:o=e}=ce)=>{const a=s||new Proxy(e,r||ce),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),ie.register(...i),a},{Object:ue,Proxy:pe,Reflect:de}=globalThis,{isArray:fe}=Array,{ownKeys:ye}=de,{create:he,hasOwn:me,values:we}=ue,ge=(e,t)=>t===F?e[0]:t===R?e():t===L?e.$:e,be=(e,t,n,r)=>{const s={type:{value:t}},o=me(e,\\\"valueOf\\\");for(const a of we(se)){let i=r(e[a]||de[a]);if(o&&a===Y){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,ge(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return he(e,s)},_e=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case L:case I:r||(r=!1);case R:break;default:r=!1,t===e&&(t=ue(e))}const s=new pe(t,n),{destruct:o}=n;return o?le(e,o,{token:r,return:s}):s},Ae=e=>t=>{const n=typeof t;return n===L?t?e.get(t)?.[0]??(e=>fe(e)?F:L)(t):M:n},Ee=e=>t=>{let n=typeof t;switch(n){case L:if(!t){n=M;break}case R:const r=e.get(t);r&&([n,t]=r)}return[n,t]},ve=e=>((e=>{ie.unregister(e)})(e),e);var Se=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:ve,pair:Ee(t),typeOf:Ae(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of ye(e)){if(me(o,t))continue;const a=e[t];switch(t){case F:{const e=be(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(_e(t,[t],e,...n),F,t);break}case R:{const e=be(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(_e(t,(r=t,ae.bind(r)),e,...n),R,t);var r};break}case L:{const e=be(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(_e(t,{$:t},e,...n),L,t);break}default:{const e=be(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(_e(n,n,e,...r),t,n);break}}}return o};const{drop:ke,get:xe,hold:je}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===D?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})(),Be=new Map;for(const e of Reflect.ownKeys(Symbol))typeof Symbol[e]===C&&(Be.set(Symbol[e],e),Be.set(e,Symbol[e]));const Pe=e=>Be.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:$e}=Array,{isView:Oe}=ArrayBuffer,{[q]:Fe}=Reflect;var Te=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case N[L]:return null==t?globalThis:typeof t===D?r(t,l.object):t;case N[F]:return typeof t===D?r(t,l.array):t;case N[R]:return typeof t===D?r(t,l.function):xe(parseInt(t));case N[C]:return(e=>Be.get(e)||Symbol.for(e.slice(1)))(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case L:if(r==globalThis||null==r)r=null;else if(typeof r===L){if(r=t(r),$e(r))return[N[F],r.map(o)];if(Oe(r))return[N.view,r];{const e={};for(const t in r)e[t]=o(r[t]);r=e}}return[N[L],r];case F:return[N[F],typeof r===D?r:t(r).map(o)];case R:return[N[R],typeof r===R?String(je(t(r))):r];case C:return[N[C],Pe(e)];default:return[N[n],r]}},a=(...t)=>s(e(...t)),i={[K]:(e,t,n)=>a(K,e,o(t),o(n)),[G]:(e,t)=>a(G,e,o(t)),[Y]:(e,t)=>a(Y,e,o(t)),[X]:e=>a(X,e),[V]:(e,t)=>{const n=a(V,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[Z]:(e,t)=>a(Z,e,o(t)),[Q]:e=>a(Q,e),[ee]:e=>a(ee,e).map(s),[te]:e=>a(te,e),[ne]:(e,t,n)=>a(ne,e,o(t),o(n)),[re]:(e,t)=>a(re,e,o(t)),[oe](t){n.delete(t),e(oe,t)}},c={[L]:i,[F]:i,[R]:{...i,[q]:(e,...t)=>a(q,e,...t.map(o)),[z]:(e,...t)=>a(z,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=Se(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case q:{const[e,t]=n;return o(await Fe(xe(r),s(e),t.map(s)))}case oe:ke(r)}}}};const Re={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Me=new WeakMap,De=e=>{const t=e||console,n={buffered:Ce,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Me.set(t,n),t}}},Le=new TextDecoder,Ce=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(Le.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},Ie=(e,...t)=>Re[typeof e](e,...t),{isArray:Ne}=Array,{assign:Ue,create:He,defineProperty:We,entries:Je}=Object,{all:qe,resolve:ze}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Ke=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function Ge(e){return e.startsWith(\\\".\\\")?Ke(e,this):e}const Ye=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Ve=e=>Function(`'use strict';return (${e})`)(),Xe=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Ze=Symbol.for(\\\"polyscript.js_modules\\\"),Qe=new Map;We(globalThis,Ze,{value:Qe}),new Proxy(Qe,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const et=(e,t)=>!t.startsWith(\\\"_\\\"),tt=(e,t)=>new Proxy(e,{has:et,get:(e,n)=>e[t][n]}),nt=(e,t)=>import(e).then((e=>{Qe.set(t,{...e})})),rt=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(Ue(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),st=e=>/\\\\.css$/i.test(new URL(e).pathname),ot=(e,t)=>e.has(t),at=e=>[...e.keys()];var it=(e,t,n,r)=>{const s=globalThis[Ze];if(n)for(let[e,t]of Je(n)){let n=s.get(t);n&&!Ne(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:ot,ownKeys:at,get:(e,s)=>{let o=e.get(s);if(Ne(o)){let a=o;o=null;for(let e of a)e=Ke(e,r),st(e)?n.importCSS(e):(n.importJS(e,s),o=t[Ze].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const ct=new Map,lt=e=>ct.get(e),ut=(e,t)=>{try{return Function(\\\"require\\\",t)(lt)}catch(t){Me.get(e).stderr(t)}};var pt={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:e=>De().get(e),registerJSModule(e,t,n){ct.set(t,n)},run:ut,runAsync:ut,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(lt,n)}catch(t){Me.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const dt=Object.getOwnPropertyDescriptors(Response.prototype),ft=e=>\\\"function\\\"==typeof e,yt={get:(e,t)=>dt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!ft(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,dt[t]):((e,t)=>ft(t)?t.bind(e):t)(e,e[t])};var ht=(e,...t)=>new Proxy(fetch(e,...t),yt);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const mt=!globalThis.window,wt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):bt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},gt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},bt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},_t=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},At=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},Et=(e,t)=>ht(Ke(e,t)).arrayBuffer(),vt=(e,t,n,r)=>qe((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(Ne(r))return r.map((n=>({url:At([e,n]),path:At([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:At([t,s])}]}))})(n).map((({url:n,path:s})=>Et(n,r).then((n=>e.writeFile(t,s,n)))))),St=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,kt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),xt=(e,t,n,r)=>qe((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of Je(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,kt(o,t))}else{const e=kt(s,t),a=St(e,kt(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>Et(n,r).then((r=>e.writeFile(t,s,r,n)))))),jt=({main:e,worker:t},n)=>{const r=[];if(t&&mt)for(let[e,s]of Je(t))e=Ke(e,n),r.push(nt(e,s));if(e&&!mt)for(let[t,s]of Je(e))t=Ke(t,n),st(t)?rt(t):r.push(nt(t,s));return qe(r)},Bt=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},{getPrototypeOf:Pt}=Object,$t=e=>{const t=typeof e;switch(t){case\\\"function\\\":case\\\"undefined\\\":return\\\"\\\";case\\\"object\\\":return null===e?\\\"null\\\":\\\"object\\\";default:return t}};let Ot=\\\"coincident-\\\";try{new SharedArrayBuffer(4,{maxByteLength:8}),Ot+=crypto.randomUUID()}catch(Pt){Ot+=Math.random().toString(36).substring(2)}var Ft={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{defineProperty:Tt}=Object,Rt=e=>{switch(e[Dt++]){case Ft.array:{const t=e[Dt++],n=[];e[Dt-2]=n;for(let r=0;r<t;r++)n[r]=Rt(e);return n}case Ft.object:{const t=e[Dt++],n={};e[Dt-2]=n;for(let r=0;r<t;r++)n[Rt(e)]=Rt(e);return n}case Ft.string:{const t=e[Dt++];return e[Dt-2]=t,t}case Ft.ref:return e[e[Dt++]];case Ft.number:return e[Dt++];case Ft.bigint:return BigInt(e[Dt++]);case Ft.true:return!0;case Ft.false:return!1;case Ft.null:return null;case Ft.undefined:return;case Ft.buffer:{const t=e[Dt++],n=e[Dt++],r=[t];n&&r.push({maxByteLength:n});const s=new ArrayBuffer(...r);e[Dt-3]=s;const o=new Uint8Array(s,0,t);for(let n=0;n<t;n++)o[n]=e[Dt++];return s}case Ft.view:{const t=e[Dt++],n=e[Dt++],r=e[Dt++],s=[Rt(e),n];r&&s.push(r);const o=new globalThis[t](...s);return e[Dt-4]=o,o}case Ft.symbol:return(t=e[Dt++]).startsWith(\\\"Symbol.\\\")?Symbol[t.slice(t.indexOf(\\\".\\\")+1)]:Symbol.for(t);case Ft.date:{const t=new Date(e[Dt++]);return e[Dt-2]=t,t}case Ft.map:{const t=e[Dt++],n=new Map;e[Dt-2]=n;for(let r=0;r<t;r++){const t=Rt(e),r=Rt(e);void 0!==t&&n.set(t,r)}return n}case Ft.set:{const t=e[Dt++],n=new Set;e[Dt-2]=n;for(let r=0;r<t;r++){const t=Rt(e);void 0!==t&&n.add(t)}return n}case Ft.regexp:{const t=e[Dt++],n=e[Dt++],r=new RegExp(t,n);return e[Dt-3]=r,r}case Ft.error:{const t=globalThis[e[Dt++]]||Error,n=e[Dt++],r=e[Dt++],s=new t(n,{cause:e[Dt++]});return e[Dt-5]=Tt(s,\\\"stack\\\",{value:r}),s}default:throw new Error(`Unknown type: ${e[Dt-1]}`)}var t},{parse:Mt}=JSON;let Dt=0;const{isArray:Lt}=Array,{isView:Ct}=ArrayBuffer,{stringify:It}=JSON,Nt=(e,t,n)=>{const r=t.get(n);return\\\"number\\\"==typeof r?(e.push(Ft.ref,r),!0):(t.set(n,e.length),!1)},Ut=(e,t,n,r=$t(n))=>{switch(r){case\\\"null\\\":e.push(Ft.null);break;case\\\"object\\\":if(Nt(e,t,n))break;switch(!0){case Lt(n):{const r=n.length;e.push(Ft.array,r);for(let s=0;s<r;s++)Ut(e,t,n[s]);break}case Ct(n):{const{BYTES_PER_ELEMENT:r,buffer:s,byteOffset:o,length:a}=n;if(e.push(Ft.view,(e=>{for(;!(e.name in globalThis);)e=Pt(e);return e.name})(n.constructor),o,a!==(s.byteLength-o)/r?a:0),Nt(e,t,s))break;n=s}case n instanceof ArrayBuffer:{const t=n.byteLength,r=n.resizable?n.maxByteLength:0;if(e.push(Ft.buffer,t,r),t){const r=new Uint8Array(n,0,t);for(let t=0;t<r.length;t+=65535)e.push.apply(e,r.subarray(t,t+65535))}break}case n instanceof Date:e.push(Ft.date,+n);break;case n instanceof Map:{const r=e.push(Ft.map,0);let s=0;for(const[r,o]of n){const n=$t(r),a=$t(o);n&&a&&(Ut(e,t,r,n),Ut(e,t,o,a),s++)}e[r-1]=s;break}case n instanceof Set:{const r=e.push(Ft.set,0);let s=0;for(const r of n){const n=$t(r);n&&(Ut(e,t,r,n),s++)}e[r-1]=s;break}case n instanceof RegExp:e.push(Ft.regexp,n.source,n.flags);break;case n instanceof Error:e.push(Ft.error,n.name,n.message,n.stack,n.cause);break;default:{if(\\\"toJSON\\\"in n){const r=n.toJSON();if(r===n){e.push(Ft.object,0);break}if(Nt(e,t,n=r))break}const r=e.push(Ft.object,0);let s=0;for(const r in n){const o=n[r],a=$t(o);a&&(Ut(e,t,r,\\\"string\\\"),Ut(e,t,o,a),s++)}e[r-1]=s;break}}break;case\\\"boolean\\\":e.push(n?Ft.true:Ft.false);break;case\\\"string\\\":if(Nt(e,t,n))break;e.push(Ft.string,n);break;case\\\"bigint\\\":e.push(Ft[r],n.toString());break;case\\\"symbol\\\":{const t=(e=>{const t=String(e).slice(7,-1);return t.startsWith(\\\"Symbol.\\\")||Symbol.keyFor(e)?t:\\\"\\\"})(n);if(t){e.push(Ft[r],t);break}}case\\\"\\\":e.push(Ft.undefined);break;default:e.push(Ft[r],n)}},Ht={parse:e=>{Dt=0;const t=Mt(e);return t.length?Rt(t):void 0},stringify:e=>{const t=[];return Ut(t,new Map,e),It(t)}},Wt=new WeakMap,Jt=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await xt(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await vt(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await jt(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},qt=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await Wt.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=Ht),e.registerJsModule(t,n)},zt=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},Kt=(e,t,...n)=>{try{return e.runPython(Ie(t),...n)}catch(t){Me.get(e).stderr(t)}},Gt=async(e,t,...n)=>{try{return await e.runPythonAsync(Ie(t),...n)}catch(t){Me.get(e).stderr(t)}},Yt=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Me.get(e).stderr(t)}};var Vt=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const Xt=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e);async function Zt(e,t){return new Promise(((n,r)=>{e.syncfs(t,(e=>{e?r(e):n()}))}))}function Qt(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await en(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach((function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)})),i.sort();const c=[];if(Object.keys(o.entries).forEach((function(e){n.entries[e]||(c.push(e),a++)})),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):bt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await Zt(t,!0),{syncfs:async()=>await Zt(t,!1)}}}const en=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},tn=(e,t)=>{try{e.mkdir(t)}catch(e){}},nn=Bt(\\\"mpy\\\");var rn={type:\\\"micropython\\\",module:(e=\\\"1.24.1\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=De({stderr:Ce(console.error),stdout:Ce(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),nn(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=sn.bind(this,i,r);return Wt.set(i,c),await Jt(this,nn,i,t,r),this.writeFile(i,\\\"./mip.py\\\",Vt),t.packages&&(nn(\\\"Loading packages\\\"),await c(t.packages.map(Ge,r)),nn(\\\"Loaded packages\\\")),nn(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=Qt(i._module)),i},registerJSModule:qt,run:Kt,runAsync:Gt,runEvent:Yt,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=zt(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DxlTOqbw.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)tn(s,i);else{tn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return wt(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return wt(i,t,n)}};async function sn(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Ke(s,t),r=await ht(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const on={dict_converter:Object.fromEntries},{stringify:an}=JSON;let cn=!1;const ln=e=>(...t)=>{try{return cn=!0,e(...t)}finally{cn=!1}};let un=!1;const pn=()=>{if(un)return;un=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){cn=!1;let o=e.get(s)?.deref();if(!o)try{o=le(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),cn=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return cn&&n(t),s(this,e,t)}},call:{value(e,...t){return cn&&n(t),s(this,e,t)}}})},dn=Bt(\\\"py\\\"),fn=new WeakMap;var yn={type:\\\"pyodide\\\",module:(e=\\\"0.27.5\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){mt||\\\"auto\\\"!==t.experimental_create_proxy||pn(),dn(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;s&&(s=s.map(Ge,r)),dn(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=new i(a),l={indexURL:a},u=\\\"never\\\"!==t.packages_cache;if(await c.sync(),u){if(s){s=s.sort();const e=an(s);if(c.has(e)){const t=new Blob([c.get(e)],{type:\\\"application/json\\\"});l.lockFileURL=URL.createObjectURL(t),l.packages=s.map((e=>e.split(/[>=<]=/)[0])),s=null}}}else c.clear();dn(\\\"Loaded Storage\\\");const{stderr:p,stdout:d,get:f}=De(),y=await f(e({stderr:p,stdout:d,...l})),h=mn.bind(y);return o&&fn.set(y,o),Wt.set(y,h),await Jt(this,dn,y,t,r),s&&await h(s,c,u),await c.close(),l.lockFileURL&&URL.revokeObjectURL(l.lockFileURL),dn(\\\"Loaded Pyodide\\\"),y},registerJSModule:qt,run:ln(Kt),runAsync:ln(Gt),runEvent:ln(Yt),transform:(e,t)=>hn.call(e,t),writeFile:(e,t,n,r)=>{const s=zt(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return wt({FS:o,PATH:a,PATH_FS:i},t,n)}};function hn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(on);if(e instanceof Map)return new Map([...e.entries()]);if(Ne(e))return e.map(hn,this)}return e}async function mn(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,dn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(fn.has(this)&&o.set_index_urls(fn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(an(e),n)}o.destroy()}const wn=\\\"ruby-wasm-wasi\\\",gn=wn.replace(/\\\\W+/g,\\\"_\\\");var bn={type:wn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await ht(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await xt(this,a,t.files,r),t.fetch&&await vt(this,a,t.fetch,r),t.js_modules&&await jt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${gn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(Ie(t),...n),runAsync:(e,t,...n)=>e.evalAsync(Ie(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${gn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${wn}`)}};var _n={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=De(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await xt(this,c,n.files,s),n.fetch&&await vt(this,c,n.fetch,s),n.js_modules&&await jt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(Ie(t),...n)}catch(t){Me.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(Ie(t),...n)}catch(t){Me.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Me.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(bt(e,gt(t)),t=_t(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const An=new WeakMap,En=async(e,t)=>{const{shelter:n,destroy:r,io:s}=An.get(e),{output:o,result:a}=await n.captureR(Ie(t));for(const{type:e,data:t}of o)s[e](t);return le(a,r,{token:!1})};var vn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.2\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=De(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return An.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:Me.get(o)}),t.files&&await xt(this,o,t.files,r),t.fetch&&await vt(this,o,t.fetch,r),t.js_modules&&await jt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:En,runAsync:En,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const Sn=new Map,kn=new Map,xn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=Sn.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(kn.set(t,e),s(r,e,n,o))))}}),jn=e=>{for(const t of[].concat(e.type))Sn.set(t,e)};for(const e of[pt,rn,yn,bn,_n,vn])jn(e);const{parse:Bn}=JSON,Pn=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Ke(e),n]})(e,t);return\\\"json\\\"===s?n=ht(r).json():\\\"toml\\\"===s?n=ht(r).text().then(Xt):\\\"string\\\"===s?n=$n(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=$n(n)),[n,e=r]},$n=e=>{try{return Bn(e)}catch(t){return Xt(e)}},On=\\\"BeforeRun\\\",Fn=\\\"AfterRun\\\",Tn=[`code${On}`,`code${On}Async`,`code${Fn}`,`code${Fn}Async`],Rn=[\\\"onWorker\\\",\\\"onReady\\\",`on${On}`,`on${On}Async`,`on${Fn}`,`on${Fn}Async`];function Mn(e,t){const{run:n,runAsync:r}=Sn.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Dn=(e,t,n,r,s,o)=>{if(s||o){const a=Mn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let Ln,Cn,In;const Nn=(e,t)=>{addEventListener(e,t||(async t=>{try{await Ln,Cn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{proxy:Un,native:Hn,window:Wn,isWindowProxy:Jn}=await(async e=>{let t=!1;const n=e?.decoder||O,r=await J({...e,decoder(e){const r=n(e),s=H(e);return(e,n)=>t?(t=!1,s(e,n)):r(e,n)}}),s=r.proxy[w],{isProxy:o,global:a,method:i}=Te((function(...e){return t=!0,s.apply(this,e)}),e?.transform||(e=>e));return r.proxy[g]=i,{...r,window:a,isWindowProxy:o}})({decoder:h,transform:e=>In?In(e):e}),qn={polyfill:!Hn,sync:Un,window:Hn?Wn:null,isWindowProxy:Jn,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Nn(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Ln=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:d,async:f}=e,y=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),h=await((e,t,n,r={})=>(t&&([r,t]=Pn(t,n,r)),ze(r).then((n=>xn[e](n,t)))))(y,t,n,d),{js_modules:m}=kn.get(y),w=m?.main,g=He(Sn.get(l)),b=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Me.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,u||l,d||{},h);let _=\\\"run\\\";if(f&&(_+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Tn){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,Xe(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,Xe(t),...o);return r&&await s(e,r,...o),a}})(g,_,n,r);for(const n of Rn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=Ve(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}Dn(g,b,qn,f,e,t)}let A,E,v,S=null,k=\\\"\\\";Hn&&(({CustomEvent:A,document:E}=Wn),S=o&&E.getElementById(o)||null,v=e=>Ye(S,u||l,e,!0,A));const x=it(Wn,Un,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,tt(r,e));t.registerJSModule(n,s,r)})(l,g,h,x),g.registerJSModule(h,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:qn,currentScript:S,config:b.config,js_modules:x,get target(){return!k&&S&&(\\\"SCRIPT\\\"===c?S.after(Ue(Wn.document.createElement(`script-${u||l}`),{id:k=`${o}-target`})):(k=o,S.replaceChildren(),S.style.display=\\\"block\\\")),k}}),Cn=g.runEvent.bind(g,h),In=g.transform.bind(g,h),S&&v(\\\"ready\\\"),s?.onReady&&Ve(s?.onReady).call(g,Mn.call(g,b,h),qn),await g[_](h,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";h.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&h.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return S&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),h}catch(e){postMessage(e)}})(),Nn(\\\"error\\\"),Nn(\\\"message\\\"),Nn(\\\"messageerror\\\"),Hn&&addEventListener(\\\"py:progress\\\",(({type:e,detail:t})=>{Wn.dispatchEvent(new Wn.CustomEvent(e,{detail:t}))}))}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTROY } from '../proxy/traps.js';\n\nimport { encoder as jsonEncoder } from '../json/encoder.js';\nimport { encoder as minimalEncoder } from '../proxy/encoder.js';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport coincident from '../main.js';\nimport callback from '../proxy/main.js';\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  let tracking = false;\n  const esm = options?.import;\n  const defaultEncoder = options?.encoder || jsonEncoder;\n  const exports = coincident({\n    ...options,\n    encoder(options) {\n      const original = defaultEncoder(options);\n      const minimal = minimalEncoder(options);\n      return (value, buffer) => {\n        if (tracking) {\n          tracking = false;\n          return minimal(value, buffer);\n        }\n        return original(value, buffer);\n      };\n    }\n  });\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      const main = callback(\n        // options.import = name => valid(name) && name\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n\n      proxy[MAIN] = function (...args) {\n        tracking = true;\n        return main.apply(this, args);\n      };\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","const{getPrototypeOf:e}=Object,t=e=>{const t=typeof e;switch(t){case\"function\":case\"undefined\":return\"\";case\"object\":return null===e?\"null\":\"object\";default:return t}};let r=\"coincident-\";try{new SharedArrayBuffer(4,{maxByteLength:8}),r+=crypto.randomUUID()}catch(e){r+=Math.random().toString(36).substring(2)}var n={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{defineProperty:s}=Object,a=e=>{switch(e[o++]){case n.array:{const t=e[o++],r=[];e[o-2]=r;for(let n=0;n<t;n++)r[n]=a(e);return r}case n.object:{const t=e[o++],r={};e[o-2]=r;for(let n=0;n<t;n++)r[a(e)]=a(e);return r}case n.string:{const t=e[o++];return e[o-2]=t,t}case n.ref:return e[e[o++]];case n.number:return e[o++];case n.bigint:return BigInt(e[o++]);case n.true:return!0;case n.false:return!1;case n.null:return null;case n.undefined:return;case n.buffer:{const t=e[o++],r=e[o++],n=[t];r&&n.push({maxByteLength:r});const s=new ArrayBuffer(...n);e[o-3]=s;const a=new Uint8Array(s,0,t);for(let r=0;r<t;r++)a[r]=e[o++];return s}case n.view:{const t=e[o++],r=e[o++],n=e[o++],s=[a(e),r];n&&s.push(n);const c=new globalThis[t](...s);return e[o-4]=c,c}case n.symbol:return(t=e[o++]).startsWith(\"Symbol.\")?Symbol[t.slice(t.indexOf(\".\")+1)]:Symbol.for(t);case n.date:{const t=new Date(e[o++]);return e[o-2]=t,t}case n.map:{const t=e[o++],r=new Map;e[o-2]=r;for(let n=0;n<t;n++){const t=a(e),n=a(e);void 0!==t&&r.set(t,n)}return r}case n.set:{const t=e[o++],r=new Set;e[o-2]=r;for(let n=0;n<t;n++){const t=a(e);void 0!==t&&r.add(t)}return r}case n.regexp:{const t=e[o++],r=e[o++],n=new RegExp(t,r);return e[o-3]=n,n}case n.error:{const t=globalThis[e[o++]]||Error,r=e[o++],n=e[o++],a=new t(r,{cause:e[o++]});return e[o-5]=s(a,\"stack\",{value:n}),a}default:throw new Error(`Unknown type: ${e[o-1]}`)}var t},{parse:c}=JSON;let o=0;const u=e=>{o=0;const t=c(e);return t.length?a(t):void 0},{isArray:f}=Array,{isView:i}=ArrayBuffer,{stringify:l}=JSON,b=(e,t,r)=>{const s=t.get(r);return\"number\"==typeof s?(e.push(n.ref,s),!0):(t.set(r,e.length),!1)},h=(r,s,a,c=t(a))=>{switch(c){case\"null\":r.push(n.null);break;case\"object\":if(b(r,s,a))break;switch(!0){case f(a):{const e=a.length;r.push(n.array,e);for(let t=0;t<e;t++)h(r,s,a[t]);break}case i(a):{const{BYTES_PER_ELEMENT:t,buffer:c,byteOffset:o,length:u}=a;if(r.push(n.view,(t=>{for(;!(t.name in globalThis);)t=e(t);return t.name})(a.constructor),o,u!==(c.byteLength-o)/t?u:0),b(r,s,c))break;a=c}case a instanceof ArrayBuffer:{const e=a.byteLength,t=a.resizable?a.maxByteLength:0;if(r.push(n.buffer,e,t),e){const t=new Uint8Array(a,0,e);for(let e=0;e<t.length;e+=65535)r.push.apply(r,t.subarray(e,e+65535))}break}case a instanceof Date:r.push(n.date,+a);break;case a instanceof Map:{const e=r.push(n.map,0);let c=0;for(const[e,n]of a){const a=t(e),o=t(n);a&&o&&(h(r,s,e,a),h(r,s,n,o),c++)}r[e-1]=c;break}case a instanceof Set:{const e=r.push(n.set,0);let c=0;for(const e of a){const n=t(e);n&&(h(r,s,e,n),c++)}r[e-1]=c;break}case a instanceof RegExp:r.push(n.regexp,a.source,a.flags);break;case a instanceof Error:r.push(n.error,a.name,a.message,a.stack,a.cause);break;default:{if(\"toJSON\"in a){const e=a.toJSON();if(e===a){r.push(n.object,0);break}if(b(r,s,a=e))break}const e=r.push(n.object,0);let c=0;for(const e in a){const n=a[e],o=t(n);o&&(h(r,s,e,\"string\"),h(r,s,n,o),c++)}r[e-1]=c;break}}break;case\"boolean\":r.push(a?n.true:n.false);break;case\"string\":if(b(r,s,a))break;r.push(n.string,a);break;case\"bigint\":r.push(n[c],a.toString());break;case\"symbol\":{const e=(e=>{const t=String(e).slice(7,-1);return t.startsWith(\"Symbol.\")||Symbol.keyFor(e)?t:\"\"})(a);if(e){r.push(n[c],e);break}}case\"\":r.push(n.undefined);break;default:r.push(n[c],a)}},p=e=>{const t=[];return h(t,new Map,e),l(t)};export{u as decode,p as encode};\n","import * as FLATTED from '@webreflection/coincident/flatted';\nconst JSON = { parse: FLATTED.decode, stringify: FLATTED.encode };\n\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.24.1') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.5') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.2') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","Promise","onsuccess","onerror","objectStore","constructor","name","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","startsWith","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","callback","context","call","has","getKey","getAllKeys","set","put","values","Symbol","toStringTag","IDBMapSync","Map","queue","sync","workers","withResolvers","ignore","Set","workersHandler","freeze","_","promise","w","e","ref","array","object","number","string","true","false","null","buffer","view","symbol","date","bigint","undefined","regexp","error","SharedArrayBuffer","maxByteLength","crypto","randomUUID","Math","random","toString","substring","getPrototypeOf","s","isArray","n","Array","isView","a","ArrayBuffer","stringify","o","JSON","c","f","u","BYTES_PER_ELEMENT","byteOffset","globalThis","byteLength","resizable","Uint8Array","apply","subarray","Date","RegExp","source","flags","Error","stack","cause","toJSON","String","slice","keyFor","grow","Uint16Array","charCodeAt","DESTROY","createEncoder","encode","ui16a","encoder","ARRAY","BIGINT","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","toConstructorName","numeric","fromEntries","CHANNEL","MAIN","WORKER","create","ID","native","defaults","Int32Array","useUTF16","circular","proxied","ok","UID","notify","Atomics","Number","coincident$1","transform","Worker","url","port1","channel","port2","MessageChannel","next","$","id","uid","wr","rtr","callbacks","resolving","proxy","cb","postMessage","setTimeout","console","warn","clearTimeout","deadlock","addEventListener","data","stopImmediatePropagation","preventDefault","stop","onmessage","async","i32","DESTRUCT","symbols","Reflect","ownKeys","toSymbol","registry","FinalizationRegistry","onGarbageCollected","held","debug","nullHandler","hold","return","token","register","eventsHandler","WeakMap","defineProperty","listener","invoke","at","concat","__worker__","drop","ids","b","had","heap","proxies","onGC","toEntry","TYPE","fromEntry","numericTYPE","fn","deref","currentTarget","methods","method","handleEvent","WeakRef","for","fromSymbol","asEntry","asImport","import","globals","TRAP","descriptor","add","re","place","q","URL","href","tracking","esm","defaultEncoder","jsonEncoder","exports","coincident","original","minimal","minimalEncoder","main","location","terminate","io","stdio","localIO","buffered","stderr","stdout","log","engine","interpreter","decoder","TextDecoder","EOL","maybeUI8","decode","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","dedent","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","absoluteURL","base","fixedRelative","nodeInfo","node","tag","tagName","dispatch","worker","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","isSync","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","pop","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","filter","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","promises","createProgress","BigInt","indexOf","parse","h","loader","loadProgress","self","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","mip","TextEncoder","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","isRealDir","toAbsolute","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","entry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","getTime","sort","remove","reverse","relPath","normalize","NATIVEFS_ASYNC","TypeError","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","indexURLs","pyodide","loadPyodide","experimental_create_proxy","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","revokeObjectURL","unpackArchive","ffi","_log","rest","loadPackage","micropip","set_index_urls","keep_going","frozen","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","index","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","env","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","json","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","serviceWorker","service_worker","isHook","Hook","resolver","bootstrap","ready","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","details","XWorker","$xworker","closest","body","wn","sw","versionValue","configValue","workerName","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","known","v","cfg","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","$customObserver","dontBother","WeakSet","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"AASA,MCKMA,EAAK,CAACC,EAAKC,EAAOC,WAAa,IAAID,EAAKE,iBAAiBH,IAQzDI,EAAK,CAACC,EAAMJ,EAAOC,YACvB,MACMI,GADa,IAAKC,gBAAgBC,iBAAiBH,GAChCI,SAASR,EAAMS,YAAYC,4BAC9CC,EAAS,GACf,IAAK,IAAIC,EAAI,GAAGC,eAACA,GAAkBR,EAAOO,EAAIC,EAAgBD,IAC5DD,EAAOG,KAAKT,EAAMU,aAAaH,IACjC,OAAOD,CAAM,ECnBTK,EAAIC,OAAOC,0BAA0BC,SAASC,WAE9CC,EAAaC,GAA0B,mBAAVA,EAQ7BC,EAAU,CACZC,IAAK,CAACC,EAAGC,IAAMV,EAAEW,eAAeD,GAPrB,EAACD,EAAGC,GAAKF,MAAKF,WAAYE,IAAQH,EAAWC,GAC5CG,EAAEG,MAAKC,GAAKA,EAAEH,KACd,IAAII,IAASL,EAAEG,MAAKC,GAAKA,EAAEH,MAAMI,KAKRC,CAAON,EAAGC,EAAGV,EAAEU,IAHzC,EAACD,EAAGH,IAAUD,EAAWC,GAASA,EAAMU,KAAKP,GAAKH,EAGHW,CAAOR,EAAGA,EAAEC,KAQ1E,IAAAQ,EAAe,CAACC,KAAUC,IAAS,IAAIC,MAAMC,MAAMH,KAAUC,GAAOb,GC5BpE,MAAQgB,OAAAA,GAAWtB,OAEbuB,EAAU,UACVC,EAAW,WACXC,EAAY,YAWZC,EAAiB,CAAEC,WAAY,UAAWC,OAAQ,UAOlDlC,EAAS,EAAGmC,QAAUnC,aAAeA,EAE5B,MAAMoC,UAAeC,YAEEC,GACPC,GACPL,GAQtB,OAAMM,CAAaC,EAAMC,GACvB,MACMC,SADWC,MAAKN,GACTE,YAAYX,EAASa,EAAKE,MAAKL,GAC5C,OAAO,IAAIM,SAAQ,CAACC,EAAWC,IAAYnB,EACzCa,EAAKE,EAAEK,YAAYnB,IACnB,CACEiB,YACAC,aAGR,CAME,WAAAE,CACEC,GACAjB,WACEA,EAAaD,EAAeC,WAAUC,OACtCA,EAASF,EAAeE,QACtBF,GAEJmB,QACAP,MAAKV,EAAUA,EACfU,MAAKL,EAAW,CAAEN,cAClBW,MAAKN,EAAM,IAAIO,SAAQ,CAACO,EAASC,KAC/BzB,EACE0B,UAAUC,KAAK,GAAGX,MAAKV,KAAWgB,KAClC,CACE,eAAAM,EAAkBrB,QAAQnC,OAAEA,EAAMwC,YAAEA,KAC7BxC,EAAOyD,iBAAiBC,QAC3B1D,EAAO2D,kBAAkB9B,GAC3BW,EAAYoB,WAAa,IAAMR,EAAQpD,EACxC,EACD,SAAA8C,CAAUe,GACRT,EAAQpD,EAAO6D,GAChB,EACD,OAAAd,CAAQc,GACNR,EAAOQ,GACPjB,KAAKkB,cAAcD,EACpB,GAEJ,IACA5C,MAAKjB,IACN,MAAM+D,EAAgBnB,KAAKkB,cAAczC,KAAKuB,MAC9C,IAAK,MAAMoB,KAAOhE,EACZgE,EAAIC,WAAW,QACjBjE,EAAOgE,GAAOD,GAElB,OAAO/D,CAAM,GAEnB,CAOE,aAAA8D,CAAcD,GACZ,MAAMK,KAAEA,EAAIC,QAAEA,EAAOC,UAAEA,GAAcP,EACrC,OAAOV,MAAMW,cAEXM,EACExC,EAAO,IAAIyC,MAAMH,GAAO,CAAEC,YAC1BN,EAER,CAGE,WAAMS,UACG1B,MAAKN,GAAKgC,OACrB,CAGE,QAAIC,GACF,OAAO3B,MAAKJ,GACVgC,GAASA,EAAMC,SACf3C,GACAb,KAAKjB,EACX,CAEE,WAAM0E,SACE9B,MAAKJ,GACTgC,GAASA,EAAME,SACf3C,EAEN,CAKE,YAAM,CAAOiC,SACLpB,MAAKJ,GACTgC,GAASA,EAAMG,OAAOX,IACtBjC,EAEN,CAKE,aAAM6C,GACJ,MAAMC,QAAajC,KAAKiC,OACxB,OAAOhC,QAAQiC,IAAID,EAAKE,KAAIf,GAAOpB,KAAK/B,IAAImD,GAAK/C,MAAKN,GAAS,CAACqD,EAAKrD,OACzE,CAME,aAAMqE,CAAQC,EAAUC,EAAUtC,MAChC,IAAK,MAAOoB,EAAKrD,WAAgBiC,KAAKgC,gBAC9BK,EAASE,KAAKD,EAASvE,EAAOqD,EAAKpB,KAC/C,CAME,SAAM/B,CAAImD,GAKR,aAJoBpB,MAAKJ,GACvBgC,GAASA,EAAM3D,IAAImD,IACnBlC,GACAb,KAAKjB,EAEX,CAKE,SAAMoF,CAAIpB,GAKR,YAAa,UAJGpB,MAAKJ,GACnBgC,GAASA,EAAMa,OAAOrB,IACtBlC,GACAb,KAAKjB,EAEX,CAEE,UAAM6E,GAKJ,aAJmBjC,MAAKJ,GACtBgC,GAASA,EAAMc,cACfxD,GACAb,KAAKjB,EAEX,CAME,SAAMuF,CAAIvB,EAAKrD,GAKb,aAJMiC,MAAKJ,GACTgC,GAASA,EAAMgB,IAAI7E,EAAOqD,IAC1BjC,GAEKa,IACX,CAEE,YAAM6C,GACJ,MAAMZ,QAAajC,KAAKiC,OACxB,OAAOhC,QAAQiC,IAAID,EAAKE,KAAIf,GAAOpB,KAAK/B,IAAImD,KAChD,CAEE,IAAK0B,OAAOC,eACV,OAAO/C,MAAKV,CAChB,ECxMe,MAAM0D,UAAmBC,IACtCd,GACAe,GACA,WAAA7C,IAAe9B,GACbgC,QACAP,MAAKmC,EAAO,IAAI3C,KAAUjB,GAC1ByB,MAAKkD,EAASlD,MAAKmC,EAAKH,UAAU3D,MAAK2D,IACrC,IAAK,MAAOZ,EAAKrD,KAAUiE,EACzBzB,MAAMoC,IAAIvB,EAAKrD,EAAM,GAE7B,CACE,WAAM2D,SACE1B,MAAKkD,QACLlD,MAAKmC,EAAKT,OACpB,CACE,UAAMyB,SACEnD,MAAKkD,CACf,CACE,KAAApB,GAEE,OADA9B,MAAKkD,EAASlD,MAAKkD,EAAO7E,MAAK,IAAM2B,MAAKmC,EAAKL,UACxCvB,MAAMuB,OACjB,CACE,OAAOV,GAEL,OADApB,MAAKkD,EAASlD,MAAKkD,EAAO7E,MAAK,IAAM2B,MAAKmC,EAAKJ,OAAOX,KAC/Cb,MAAMwB,OAAOX,EACxB,CACE,GAAAuB,CAAIvB,EAAKrD,GAEP,OADAiC,MAAKkD,EAASlD,MAAKkD,EAAO7E,MAAK,IAAM2B,MAAKmC,EAAKQ,IAAIvB,EAAKrD,KACjDwC,MAAMoC,IAAIvB,EAAKrD,EAC1B,EC7BO,MAAMqF,EAAU,IAAItE,MAAM,IAAImE,IAAK,CACxChF,IAAG,CAACkE,EAAK7B,KACF6B,EAAIK,IAAIlC,IACX6B,EAAIQ,IAAIrC,EAAML,QAAQoD,iBACjBlB,EAAIlE,IAAIqC,MAMbgD,EAAS,IAAIC,IAAI,CAAC,WAAY,cAAe,MAAO,MAAO,WAAY,OAAQ,MAAO,SAE/EC,EAAiB,IAAI1E,MAAMpB,OAAO+F,OAAO,CAAE,GAAG,CAGzDxF,IAAK,CAACyF,EAAGpD,IAA0B,iBAATA,GAAsBgD,EAAOd,IAAIlC,QAEzD,EADA8C,EAAQ9C,GAAMqD,QAAQtF,MAAKuF,GAAKA,EAAET,SClBtC,IAAIU,EAAE,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,GAAGC,KAAK,GAAGC,OAAO,GAAGC,UAAU,GAAGxC,IAAI,GAAGQ,IAAI,GAAGiC,OAAO,GAAGC,MAAM,IAAI,IAAI9E,EAAE,cAAc,IAAI,IAAI+E,kBAAkB,EAAE,CAACC,cAAc,IAAIhF,GAAGiF,OAAOC,YAAY,CAAC,MAAMpB,IAAG9D,GAAGmF,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAE,CAAC,MAAMC,eAAehH,GAAGZ,OAAO6H,EAAE1B,IAAI,MAAM9D,SAAS8D,EAAE,OAAO9D,GAAG,IAAI,WAAW,IAAI,YAAY,MAAM,GAAG,IAAI,SAAS,OAAO,OAAO8D,EAAE,OAAO,SAAS,QAAQ,OAAO9D,EAAC,GAAIyF,QAAQC,GAAGC,OAAOC,OAAOC,GAAGC,aAAaC,UAAUC,GAAGC,KAAKC,EAAE,CAAClG,EAAEzB,EAAEiH,KAAK,MAAME,EAAEnH,EAAEL,IAAIsH,GAAG,MAAM,iBAAiBE,GAAG1F,EAAExC,KAAKsG,EAAEC,IAAI2B,IAAG,IAAKnH,EAAEqE,IAAI4C,EAAExF,EAAEe,SAAQ,EAAE,EAAGoF,EAAE,CAACnG,EAAEgG,EAAEI,EAAE9I,EAAEkI,EAAEY,MAAM,OAAO9I,GAAG,IAAI,OAAO0C,EAAExC,KAAKsG,EAAEQ,MAAM,MAAM,IAAI,SAAS,GAAG4B,EAAElG,EAAEgG,EAAEI,GAAG,MAAM,QAAO,GAAI,KAAKV,EAAEU,GAAG,CAAC,MAAM7H,EAAE6H,EAAErF,OAAOf,EAAExC,KAAKsG,EAAEE,MAAMzF,GAAG,IAAI,IAAIuF,EAAE,EAAEA,EAAEvF,EAAEuF,IAAIqC,EAAEnG,EAAEgG,EAAEI,EAAEtC,IAAI,KAAK,CAAC,KAAK+B,EAAEO,GAAG,CAAC,MAAMC,kBAAkBb,EAAEjB,OAAOmB,EAAEY,WAAWT,EAAE9E,OAAOoF,GAAGC,EAAE,GAAGpG,EAAExC,KAAKsG,EAAEU,KAAK,CAACV,IAAI,OAAOA,EAAEvD,QAAQgG,aAAazC,EAAEvF,EAAEuF,GAAG,OAAOA,EAAEvD,IAAK,EAAxD,CAA0D6F,EAAE9F,aAAauF,EAAEM,KAAKT,EAAEc,WAAWX,GAAGL,EAAEW,EAAE,GAAGD,EAAElG,EAAEgG,EAAEN,GAAG,MAAMU,EAAEV,CAAC,CAAC,KAAKU,aAAaN,YAAY,CAAC,MAAMvH,EAAE6H,EAAEI,WAAWhB,EAAEY,EAAEK,UAAUL,EAAEpB,cAAc,EAAE,GAAGhF,EAAExC,KAAKsG,EAAES,OAAOhG,EAAEiH,GAAGjH,EAAE,CAAC,MAAMuF,EAAE,IAAI4C,WAAWN,EAAE,EAAE7H,GAAG,IAAI,IAAIA,EAAE,EAAEA,EAAEuF,EAAE/C,OAAOxC,GAAG,MAAMyB,EAAExC,KAAKmJ,MAAM3G,EAAE8D,EAAE8C,SAASrI,EAAEA,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK6H,aAAaS,KAAK7G,EAAExC,KAAKsG,EAAEY,MAAM0B,GAAG,MAAM,KAAKA,aAAalD,IAAI,CAAC,MAAM3E,EAAEyB,EAAExC,KAAKsG,EAAE1B,IAAI,GAAG,IAAIsD,EAAE,EAAE,IAAI,MAAM5B,EAAEvF,KAAK6H,EAAE,CAAC,MAAMP,EAAEL,EAAE1B,GAAGoC,EAAEV,EAAEjH,GAAGsH,GAAGK,IAAIC,EAAEnG,EAAEgG,EAAElC,EAAE+B,GAAGM,EAAEnG,EAAEgG,EAAEzH,EAAE2H,GAAGR,IAAI,CAAC1F,EAAEzB,EAAE,GAAGmH,EAAE,KAAK,CAAC,KAAKU,aAAa5C,IAAI,CAAC,MAAMjF,EAAEyB,EAAExC,KAAKsG,EAAElB,IAAI,GAAG,IAAI8C,EAAE,EAAE,IAAI,MAAM5B,KAAKsC,EAAE,CAAC,MAAM7H,EAAEiH,EAAE1B,GAAGvF,IAAI4H,EAAEnG,EAAEgG,EAAElC,EAAEvF,GAAGmH,IAAI,CAAC1F,EAAEzB,EAAE,GAAGmH,EAAE,KAAK,CAAC,KAAKU,aAAaU,OAAO9G,EAAExC,KAAKsG,EAAEe,OAAOuB,EAAEW,OAAOX,EAAEY,OAAO,MAAM,KAAKZ,aAAaa,MAAMjH,EAAExC,KAAKsG,EAAEgB,MAAMsB,EAAE7F,KAAK6F,EAAE5E,QAAQ4E,EAAEc,MAAMd,EAAEe,OAAO,MAAM,QAAQ,CAAC,GAAG,WAAWf,EAAE,CAAC,MAAM7H,EAAE6H,EAAEgB,SAAS,GAAG7I,IAAI6H,EAAE,CAACpG,EAAExC,KAAKsG,EAAEG,OAAO,GAAG,KAAK,CAAC,GAAGiC,EAAElG,EAAEgG,EAAEI,EAAE7H,GAAG,KAAK,CAAC,MAAMA,EAAEyB,EAAExC,KAAKsG,EAAEG,OAAO,GAAG,IAAIyB,EAAE,EAAE,IAAI,MAAM5B,KAAKsC,EAAE,CAAC,MAAM7H,EAAE6H,EAAEtC,GAAG+B,EAAEL,EAAEjH,GAAGsH,IAAIM,EAAEnG,EAAEgG,EAAElC,EAAE,UAAUqC,EAAEnG,EAAEgG,EAAEzH,EAAEsH,GAAGH,IAAI,CAAC1F,EAAEzB,EAAE,GAAGmH,EAAE,KAAK,EAAE,MAAM,IAAI,UAAU1F,EAAExC,KAAK4I,EAAEtC,EAAEM,KAAKN,EAAEO,OAAO,MAAM,IAAI,SAAS,GAAG6B,EAAElG,EAAEgG,EAAEI,GAAG,MAAMpG,EAAExC,KAAKsG,EAAEK,OAAOiC,GAAG,MAAM,IAAI,SAASpG,EAAExC,KAAKsG,EAAExG,GAAG8I,EAAEf,YAAY,MAAM,IAAI,SAAS,CAAC,MAAM9G,EAAE,CAACuF,IAAI,MAAM9D,EAAEqH,OAAOvD,GAAGwD,MAAM,GAAE,GAAI,OAAOtH,EAAEsB,WAAW,YAAYyB,OAAOwE,OAAOzD,GAAG9D,EAAE,EAAG,EAAzF,CAA2FoG,GAAG,GAAG7H,EAAE,CAACyB,EAAExC,KAAKsG,EAAExG,GAAGiB,GAAG,KAAK,CAAC,CAAC,IAAI,GAAGyB,EAAExC,KAAKsG,EAAEc,WAAW,MAAM,QAAQ5E,EAAExC,KAAKsG,EAAExG,GAAG8I,GAAE,EAAgD9I,EAAE,CAACwG,GAAG,EAAEwC,WAAWtG,EAAE,GAAG,KAAK,CAACzB,EAAEiH,KAAK,MAAME,EAAE5B,EAAEvF,GAAGsH,EAAEH,EAAE3E,OAAOiF,EAAE,EAAEH,EAAE7F,EAAEwF,EAAEgB,WAAWR,GAAGR,EAAEgC,KAAKxB,GAAG,MAAME,EAAE,IAAIuB,YAAYjC,EAAExF,EAAE6F,GAAG,IAAI,IAAI/B,EAAE,EAAEA,EAAE+B,EAAE/B,IAAIoC,EAAEpC,GAAG4B,EAAEgC,WAAW5D,GAAG,OAAO+B,GAA5K,EAA7C/B,IAAI,MAAM9D,EAAE,GAAG,OAAOmG,EAAEnG,EAAE,IAAIkD,IAAIY,GAAGkC,EAAEhG,EAAC,ICAtwE2H,EAAU,UCAvB,IAAAC,EAAeC,GAAU,EAAGvB,aAAa,GAAM,KAAO,CAACtI,EAAOuG,KAC5D,MAAMJ,EAAS0D,EAAO7J,GAChB+C,EAASoD,EAAOpD,OAChBa,EAAgB,EAATb,EAAauF,EACtB/B,EAAOiC,WAAa5E,GAAM2C,EAAOiD,KAAK5F,GAC1C,MAAMkG,EAAQ,IAAIL,YAAYlD,EAAQ+B,EAAYvF,GAClD,IAAK,IAAIzD,EAAI,EAAGA,EAAIyD,EAAQzD,IAC1BwK,EAAMxK,GAAK6G,EAAOuD,WAAWpK,GAC/B,OAAOyD,CAAM,ECNf,MAAQgF,UAAAA,GAAcE,KAIT8B,EAAUH,EAAc7B,GCNxBiC,EAAY,QACZC,EAAY,SAEZC,EAAY,WACZC,EAAY,OACZC,EAAY,SACZC,EAAY,SACZC,EAAY,SACZC,EAAY,SACZC,EAAY,aCTnBjD,eAAEA,GAAmB5H,OACd8K,EAAoBnI,IAC/B,OAASA,EAAYC,QAAQgG,aAC3BjG,EAAciF,EAAejF,GAC/B,OAAOA,EAAYC,IAAI,ECkBzB,IAAemI,EAAA/K,OAAOgL,YAAY,CAChCX,EACAC,EFtBuB,UEwBvBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,QACApG,KAAI,CAAChE,EAAGd,IAAM,CAACc,EAAGd,MC5BpB,MAAQyI,UAAAA,GAAcE,KAiBT8B,EAAUH,GAfD5J,IACpB,OAAQA,EAAM,IACZ,KAAK0K,EAAQlE,KAAM,CACjB,MAAMlE,YAAEA,EAAWiE,OAAEA,GAAWvG,EAAM,GACtCA,EAAM,GAAK,CAACyK,EAAkBnI,GAAc,IAAI,IAAIoG,WAAWnC,KAC/D,KACD,CACD,KAAKmE,EAAQT,GACXjK,EAAM,GAAKA,EAAM,GAAGqH,WAIxB,OAAOU,EAAU/H,EAAM,ICnBnB4K,EAAU,WACHC,EAAO,IAAMD,EACbE,EAAS,IAAMF,GCF5B3J,OAAEA,EACF8J,OAAEA,GACEpL,OAGJ,IAAIqL,EAAK,cAAeC,GAAS,EACjC,IACE,IAAIlE,kBAAkB,EAAG,CAAEC,cAAe,IAC1CgE,GAAM/D,OAAOC,YACf,CACA,MAAOvB,GACLsF,GAAS,EACTD,GAAM7D,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAC7C,CAGA,MAIM4D,EAAW,CAEf5C,WANiB,EAAI6C,WAAW9C,kBAQhC+C,UAAU,EAEVC,UAAU,GAGNjH,EAAM,IAAIc,IA0BVN,GAAM,CAAC0G,EAAS/I,EAAM+B,KAC1B,MAAMiH,EAAc,SAAThJ,EAEX,OADIgJ,IAAID,EAAQ/I,GAAQ+B,GACjBiH,CAAE,EASLjG,GAAgB,IAAMpD,QAAQoD,gBCnD9BkG,GAAM,mBAAoBjD,WAAayC,EAAK,IAE5CS,OAAEA,IAAWC,QAEbC,GAAS3L,GAASA,EAExB,IAAA4L,GAAehK,IACb,MAAMiK,EAAYjK,GAASiK,UACrBhC,GAAUjI,GAASmI,SAAWA,GAASmB,GAE7C,MAAMY,UAAevD,WAAWuD,OAC9B,WAAAxJ,CAAYyJ,EAAKnK,GACf,MAAQoK,MAAOC,EAAOC,MAAEA,GAAU,IAAIC,gBAC9BC,EAAM3J,GDCR,EAAC4J,EAAGC,EAAK,IAAM,CACzBC,IACE,MAAMC,EAAKlH,KACX,GAAKiH,EAAMF,EAAEC,WACNlI,EAAIK,IAAI8H,IAEf,OADAnI,EAAIQ,IAAI2H,EAAKC,GACN,CAACD,EAAKC,EAAG,EAElB,CAACD,EAAKvM,EAAO8G,KACX,MAAM0F,EAAKpI,EAAIlE,IAAIqM,GACnBnI,EAAIJ,OAAOuI,GACPzF,EAAO0F,EAAG9J,OAAOoE,GAChB0F,EAAG/J,QAAQzC,EAAM,GCbMyM,CAAId,IACxBe,EAAY,IAAIxH,IAChBoG,EAAUP,EAAO,MAEvB,IAAI4B,EAAY,GAuBhBnK,MAAMuJ,EAAK9K,EAAO,CAAEsC,KAAM,UAAY3B,IAAUgL,MAAQ,IAAI7L,MAAMuK,EAAS,CACzEpL,IAAK,CAACyF,EAAGpD,KAGP,GAAa,SAATA,EAAiB,OACrB,IAAIsK,EAAKH,EAAUxM,IAAIqC,GAQvB,OAPKsK,GACHH,EAAU9H,IAAIrC,EAAMsK,EAAK,IAAIrM,KAC3B,MAAO+L,EAAKC,GAAMJ,IAElB,OADAH,EAAQa,YAAY,CAACP,EAAKhK,EAAMsJ,EAAYrL,EAAK4D,IAAIyH,GAAarL,IA9BzD,GAAGoF,WAAWrD,KAC7B,GAAIoK,EAAW,CACb,MAAM3K,EAAI+K,WACRC,QAAQC,KACR,IACA,mBAAmBN,sBAA8BpK,SAEnDqD,EAAUA,EAAQtF,MAChBjB,IACE6N,aAAalL,GACN3C,KAETyH,IACEoG,aAAalL,GACNE,QAAQQ,OAAOoE,KAG3B,CACD,OAAOlB,CAAO,EAaDuH,CAASX,EAAIjK,EAAK,GAGtBsK,CAAE,EAEXjI,SAGFpC,MAAMsK,YAAYtB,GAAK,CAACU,IAGpBjB,GAAUO,IACZhJ,MAAM4K,iBAAiB,WAAWlK,IAChC,MAAMmK,KAAEA,GAASnK,EACbmK,GAAMrC,KAAOQ,KDlBdtI,KACXA,EAAMoK,2BACNpK,EAAMqK,gBAAgB,ECiBZC,CAAKtK,GACL+I,EAAQwB,UAAUJ,GACnB,IAILpB,EAAQwB,UAAYC,OAASL,WAC3B,MAAMM,EAAMN,EAAK,GACX9J,SAAcoK,EACpB,GAAa,WAATpK,EACFd,EAAQkG,MAAM,KAAM0E,QAKpB,GAHAV,EAAYU,EAAK,QD/CZK,OAAOL,EAAM/B,EAASO,KACnC,IACE,MAAMxM,QAAeiM,EAAQ+B,EAAK,IAAI1E,MAAM,KAAM0E,EAAK,IACvDA,EAAK,GAAKxB,EAAYA,EAAUxM,GAAUA,EAC1CgO,EAAK,GAAK,IACX,CACD,MAAOvG,GAASuG,EAAK,GAAKvG,CAAO,GC0CnBzH,CAAOgO,EAAM/B,EAASO,GAC5Bc,EAAY,GACC,WAATpJ,EACF0I,EAAQa,YAAYO,OACjB,CACH,MAAMhO,EAASgO,EAAK,IAAMA,EAAK,GAE/BM,EAAI,QAAgB,IAAXtO,EAAoB,EAAIwK,EAAOxK,EAAQsO,EAAIpH,QAEpDoH,EAAI,GAAK,EACTlC,GAAOkC,EAAK,EACb,CACF,CAEJ,EAGH,MAAO,CACL7B,SACAb,SACD,ECnHI,MCCM2C,GAAW,WCClBC,GAAU,IAAI3I,IAEpB,IAAK,MAAMsC,KAAKsG,QAAQC,QAAQhJ,eACnBA,OAAOyC,KAAO+C,IACvBsD,GAAQjJ,IAAIG,OAAOyC,GAAIA,GACvBqG,GAAQjJ,IAAI4C,EAAGzC,OAAOyC,KAInB,MAKMwG,GAAWhO,GACtB6N,GAAQ3N,IAAIF,IACZ,IAAI+E,OAAOwE,OAAOvJ,IAAU,KChBxBiO,GAAW,IAAIC,sBACnB,EAAEC,EAAoBC,EAAMC,MAEtBA,GAAOrB,QAAQqB,MAAM,KAAKhF,OAAO+E,KAAS,mBAAoB,aAClED,EAAmBC,EAAK,IAItBE,GAAc3O,OAAOoL,OAAO,MAiBrBA,GAAS,CACpBwD,EACAJ,GACEE,QAAOpO,UAASuO,OAAQjO,EAAGkO,QAAQF,GAASD,MAK9C,MAAM9M,EAASjB,GAAK,IAAIQ,MAAMwN,EAAMtO,GAAWqO,IACzC9N,EAAO,CAACgB,EAAQ,CAAC2M,EAAoBI,IAAQF,IAKnD,OAJc,IAAVI,GAAiBjO,EAAKhB,KAAKiP,GAG/BR,GAASS,YAAYlO,GACdgB,CAAM,GCzCT4L,iBAAEA,IAAqB1L,YAAY5B,UACnC6O,GAAgB,IAAIC,QAC1Bd,QAAQe,eAAenN,YAAY5B,UAAW,mBAAoB,CAChE,KAAAE,CAAMuD,EAAMuL,KAAalN,GACvB,MAAMmN,EAASnN,EAAQoN,GAAG,IAAID,OAC9B,GAAIA,EAAQ,CACV,IAAI3K,EAAMuK,GAAczO,IAAI+B,MACvBmC,IACHA,EAAM,IAAIc,IACVyJ,GAAc/J,IAAI3C,KAAMmC,IAE1BA,EAAIQ,IAAIrB,EAAM,GAAG0L,OAAOF,WACjBnN,EAAQ,GAAGmN,MACxB,CACI,OAAO3B,GAAiB5I,KAAKvC,KAAMsB,EAAMuL,KAAalN,EACvD,ICiBH,MAAQ6F,QAAAA,IAAYE,OACdC,OAAEA,IAAWE,YAEnB,IAAAxD,GAAe,CAAC7B,EAASyM,KACvB,MAAMnL,MAAEA,EAAKoL,KAAEA,EAAIjP,IAAEA,EAAGqO,KAAEA,GClCN,MACpB,MAAMa,EAAM,IAAIlK,IACVJ,EAAS,IAAII,IACnB,IAAIqH,EAAM,EACV,MAAO,CAILxI,MAAO,KACLqL,EAAIrL,QACJe,EAAOf,OAAO,EAQhBoL,KAAM7C,IACJ,MAAOzE,EAAGwH,UAAY/C,IAAOlC,EAAS,CAACtF,EAAQsK,GAAO,CAACA,EAAKtK,GACtDwK,EAAMzH,EAAEpD,IAAI6H,GAKlB,OAJIgD,IACFD,EAAErL,OAAO6D,EAAE3H,IAAIoM,IACfzE,EAAE7D,OAAOsI,IAEJgD,CAAG,EAQZpP,IAAKoM,GAAMxH,EAAO5E,IAAIoM,GAOtBiC,KAAMvO,IACJ,IAAKoP,EAAI3K,IAAIzE,GAAQ,CACnB,IAAIsM,EAIJ,KAA4BxH,EAAOL,IAAI6H,EAAKC,OAC5C6C,EAAIxK,IAAI5E,EAAOsM,GACfxH,EAAOF,IAAI0H,EAAItM,EACvB,CACM,OAAOoP,EAAIlP,IAAIF,EAAM,EAExB,EDlBkCuP,GAC7BC,EAAU,IAAItK,IAEduK,EAAO1J,IAEXyJ,EAAQxL,OAAO+B,GACfmJ,EAAWtB,GAAU7H,EAAI,EAGrB2J,EAAU1P,IACd,MAAM2P,SAAc3P,EAEpB,OAAQ2P,GACN,KAAKtF,EACH,OAAc,OAAVrK,EAAuB,CAAC0K,EAAQP,GAAOnK,GACvCA,IAAUuI,WAAmB,CAACmC,EAAQL,GAAS,MAC/C5C,GAAQzH,GAAe,CAAC0K,EAAQV,GAAQuE,EAAKvO,IAC7C4H,GAAO5H,GAAe,CAAC0K,EAAQlE,KAAMxG,GAClC,CAAC0K,EAAQL,GAASkE,EAAKvO,IAEhC,KAAKkK,EAAU,MAAO,CAACQ,EAAQR,GAAWqE,EAAKvO,IAC/C,KAAKuK,EAAQ,MAAO,CAACG,EAAQH,GAASyD,GAAShO,IAC/C,QAAS,MAAO,CAAC0K,EAAQiF,GAAO3P,GACtC,EAGQ4P,EAAY,EAAEC,EAAa7P,MAC/B,OAAQ6P,GACN,KAAKnF,EAAQL,GACX,GAAc,OAAVrK,EAAgB,OAAOuI,WAC3B,UAAWvI,IAAUoK,EAAQ,OAAOlK,EAAIF,GACxC,IAAK,MAAMqD,KAAOrD,EAChBA,EAAMqD,GAAOuM,EAAU5P,EAAMqD,IAC/B,OAAOrD,EAET,KAAK0K,EAAQV,GACX,cAAWhK,IAAUoK,EAAelK,EAAIF,GACjCA,EAAMoE,IAAIwL,GAEnB,KAAKlF,EAAQR,GACX,cAAelK,GACb,KAAKoK,EAAQ,OAAOlK,EAAIF,GACxB,KAAKsK,EAAQ,CACX,IAAIwF,EAAKN,EAAQtP,IAAIF,IAAQ+P,QAW7B,OAVKD,IACHA,EAAK/E,GAAO/K,EAAOyP,EAAM,CACvBhB,OAAO,EACPD,OAAQ,YAAahO,GAEnB,OADIA,EAAKuC,QAAUvC,EAAK,aAAckD,ODlEzCR,KACb,MAAM8M,cAAEA,EAAaxO,OAAEA,EAAM+B,KAAEA,GAASL,EAClC+M,EAAUtB,GAAczO,IAAI8P,GAAiBxO,IAAStB,IAAIqD,GAChE,GAAI0M,EAAS,IAAK,MAAMC,KAAUD,EAAS/M,EAAMgN,IAAS,EC+DGC,CAAY3P,EAAK,IACvD0O,ELrFmB,QKqFDlP,EAAO0P,EAAQzN,MAAOzB,EAAK4D,IAAIsL,IAAUpP,KAAKsP,EACzF,IAEcJ,EAAQ5K,IAAI5E,EAAO,IAAIoQ,QAAQN,KAE1BA,CACnB,EAGM,KAAKpF,EAAQH,GAAS,MHnFFvK,IACxB6N,GAAQ3N,IAAIF,IACZ+E,OAAOsL,IAAIrQ,EAAMsJ,MAAM,IGiFUgH,CAAWtQ,GACxC,QAAS,OAAOA,EACtB,EAGQuQ,EAAU,CAACL,EAAQ1O,EAAQhB,IAASkP,EAAQQ,EAAO1O,KAAWhB,EAAK4D,IAAIwL,KACvEY,EAAWjO,GAAQkO,OAAOhO,EAAQF,IAClCmO,EAAU,IAAIlL,IAEpB,MAAO,CAACmL,EAAM5K,KAAQvF,KACpB,GAAImQ,IAAShH,EAEX5F,SAEG,GAAI4M,IAAS/C,GAEX8C,EAAQjM,IAAIsB,IAAMoJ,EAAKpJ,OAEzB,CACH,MAAMmK,EAASpC,QAAQ6C,GACjBnP,EAAgB,MAAPuE,EAAcwC,WAAarI,EAAI6F,GAC9C,OAAQ4K,GACN,ILlHoC,iBKkHd,CACpB,MAAOpO,EAAMqO,GAAcpQ,EAAK4D,IAAIwL,GACpC,OAAOF,EAAQQ,EAAO1O,EAAQe,EAAMqO,GAC9C,CACQ,ILnHoC,2BKmHF,CAChC,MAAMA,EAAaV,EAAO1O,KAAWhB,EAAK4D,IAAIwL,IAC9C,GAAIgB,EAAY,CACd,MAAM1Q,IAAEA,EAAG0E,IAAEA,EAAG5E,MAAEA,GAAU4Q,EACxB1Q,IAAK0Q,EAAW1Q,IAAMwP,EAAQxP,IAC9B0E,IAAKgM,EAAWhM,IAAM8K,EAAQ9K,IAC9B5E,IAAO4Q,EAAW5Q,MAAQ0P,EAAQ1P,GAClD,CACU,MAAO,CAAC0K,EAAQkG,EAAavG,EAASG,GAAYoG,EAC5D,CACQ,ILzHoC,UKyHrB,MAAO,CAAClG,EAAQV,GAAQkG,EAAO1O,GAAQ4C,IAAIsL,IAC1D,IL/HoC,MKmIlC,GAAW,MAAP3J,EAAa,CACf,MAAM1G,EAAwB,WAAfmB,EAAK,GAAG,GACrBkP,EAAQc,GACRD,EAAQL,EAAQ1O,EAAQhB,GAI1B,OAFAkQ,EAAQG,IAAIxR,EAAO,IAEZA,CACnB,CAEQ,QAAS,OAAOkR,EAAQL,EAAQ1O,EAAQhB,GAEhD,CACI,MAAO,CAACkK,EAAQF,QAAY,EAAO,CACpC,EEpJH,MAAMuB,IAACA,gBACD+E,GAAK,kCACLC,GAAQ,CAACpL,EAAEqL,EAAE7I,IAAM,UAAU6I,IAAI,IAAIC,IAAI9I,EAAE4D,IAAKmF,OAAOF,MAGvDlF,OAAEA,ICIsDlK,KAC5D,IAAIuP,GAAW,EACf,MAAMC,EAAMxP,GAAS6O,OACfY,EAAiBzP,GAASmI,SAAWuH,EACrCC,EAAUC,GAAW,IACtB5P,EACH,OAAAmI,CAAQnI,GACN,MAAM6P,EAAWJ,EAAezP,GAC1B8P,EAAUC,EAAe/P,GAC/B,MAAO,CAAC5B,EAAOuG,IACT4K,GACFA,GAAW,EACJO,EAAQ1R,EAAOuG,IAEjBkL,EAASzR,EAAOuG,EAE/B,IAGE,MAAMuF,UAAeyF,EAAQzF,OAC3B,WAAAxJ,CAAYyJ,EAAKnK,GACf,MAAMgL,MAAEA,GAAUpK,MAAMuJ,EAAKnK,GAEvBgQ,EAAOtN,GAEX1C,GAAS6O,QAAUW,IAAQ7O,GAAQ,IAAI0O,IAAI1O,EAAMsP,SAASX,OAC1DtE,EAAM9B,IAGR8B,EAAM/B,GAAQ,YAAarK,GAEzB,OADA2Q,GAAW,EACJS,EAAKjJ,MAAM1G,KAAMzB,EACzB,CACP,CACI,SAAAsR,GACE7P,KAAK2K,MAAM/B,GAAMlB,GACjBnH,MAAMsP,WACZ,EAGE,MAAO,IAAKP,EAASzF,SAAQ,ED5CZ0F,CAAW,CAAAzH,QAAEA,IEJzB,MAAMgI,GAAK,IAAInD,QACToD,GAASlR,IAClB,MAAMyD,EAAUzD,GAAQkM,QAClBiF,EAAU,CAGZC,YACAC,QAAS5N,EAAQ4N,QAAUnF,QAAQlG,OAAOpG,KAAK6D,GAC/C6N,QAAS7N,EAAQ6N,QAAUpF,QAAQqF,KAAK3R,KAAK6D,IAEjD,MAAO,CACH4N,OAAQ,IAAI3R,IAASyR,EAAQE,UAAU3R,GACvC4R,OAAQ,IAAI5R,IAASyR,EAAQG,UAAU5R,GACvC,SAAMN,CAAIoS,GACN,MAAMC,QAAoBD,EAE1B,OADAP,GAAGnN,IAAI2N,EAAaN,GACbM,CACV,EACJ,EAGCC,GAAU,IAAIC,YACPP,GAAW,CAAC5N,EAAUoO,EAAM,MACrC,MAAMnM,EAAS,GACf,OAAQoM,IACJ,GAAIA,aAAoBjK,WACpB,IAAK,MAAMR,KAAKyK,EACRzK,IAAMwK,EACNpO,EAASkO,GAAQI,OAAO,IAAIlK,WAAWnC,EAAOsM,OAAO,MAErDtM,EAAO/G,KAAK0I,QAOpB5D,EAASqO,EACrB,CACK,ECvCC1E,GAAW,IAAI/I,IAMf4N,GAAUvQ,GAAQ0L,GAAS/N,IAAIqC,GAE/BwQ,GAAM,CAACR,EAAaS,KACtB,IACI,OAAOC,SAAS,UAAWD,EAApBC,CAA0BH,GACzC,CACI,MAAOhM,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACnC,GAGA,IAAeoM,GAAA,CACf3P,KAhBa,QAiBT4P,OAAQ,IAAM,+BACdb,OAAQa,GAAUnB,KAAQ9R,IAAIiT,GAC9B,gBAAAC,CAAiBzN,EAAGpD,EAAMvC,GACtBiO,GAASrJ,IAAIrC,EAAMvC,EACtB,EACL+S,IAAIA,GACAM,SAAUN,GACVO,SAAU5F,MAAO6E,EAAaS,EAAM9P,KAChC,UACU+P,SAAS,UAAW,IAAK,UAAUD,OAAnCC,CAA8CH,GAAS5P,EACzE,CACQ,MAAO4D,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACvC,GAEI+E,UAAW,CAAClG,EAAG3F,IAAUA,EACzB,SAAAuT,GAAc,GCrClBrR,QAAQoD,gBAAkBpD,QAAQoD,cAAgB,WAChD,IAAIuC,EAAGwH,EAAGnH,EAAI,IAAIjG,MAAK,SAAUQ,EAASC,GACxCmF,EAAIpF,EACJ4M,EAAI3M,CACR,IACE,MAAO,CAACD,QAASoF,EAAGnF,OAAQ2M,EAAGzJ,QAASsC,EAC1C,GCJA,MAAMsL,GAAS,CACb,MAAAvN,IAAUzF,GACR,OAAOyB,KAAKkE,OCJD,SAAUnE,GACvB,IAAK,IAAIwF,EAAIxF,EAAE,GAAI1C,EAAI,EAAGmU,EAAIC,UAAU3Q,OAAQzD,EAAImU,EAAGnU,IACrDkI,GAAKkM,UAAUpU,GAAK0C,EAAE1C,GACxB,OAAOkI,CACT,CDAuBmM,IAAWnT,GAC/B,EACD,MAAA2F,CAAOwN,GACL,IAAK,MAAMC,KAAQD,EAAQE,MAAM,WAE/B,GAAID,EAAKE,OAAO/Q,OAAQ,CAElB,SAASgR,KAAKH,KAChBD,EAAUA,EAAQK,QAAQ,IAAIlL,OAAO,IAAMA,OAAOmL,GAAI,MAAO,KAE/D,KACR,CAEI,OAAON,CACX,IEIMK,QAACA,IAAW,GAGZE,GAAK,iDAuBLC,GAAO,CACX,QAAS,IACT,QAAS,IACT,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,QAAS,IACT,SAAU,IACV,QAAS,IACT,SAAU,IACV,QAAS,KAELC,GAAOC,GAAKF,GAAKE,GCtDjBb,GHsBW,CAACc,KAAQxP,IAAW0O,UAAcc,GAAKA,KAAQxP,GGnB1DyP,GD6DkBC,GAAMR,GAAQxP,KAAKgQ,EAAIN,GAAIE,KC3D7C3M,QAAEA,IAAYE,OAEd1G,OAAEA,GAAM8J,OAAEA,GAAM0J,iBAAEA,GAAgB5F,eAAEA,GAAc5K,QAAEA,IAAYtE,QAEhEwE,IAAEA,GAAG1B,QAAEA,IAAY,IAAI1B,MAAMmB,QAAS,CACxChC,IAAK,CAACmM,EAAG9J,IAAS8J,EAAE9J,GAAM7B,KAAK2L,KAG7BqI,GAAc,CAAC5V,EAAM6V,EAAO9C,SAASX,OACvC,IAAID,IAAInS,EAAM6V,EAAKX,QAAQ,SAAU,KAAK9C,KAE9C,SAAS0D,GAAc9V,GAEnB,OAAOA,EAAKwE,WAAW,KAAOoR,GAAY5V,EAAMmD,MAAQnD,CAC5D,CAGA,IAAIwN,GAAK,EACT,MAAMuI,GAAW,CAACC,EAAMvR,KAAU,CAC9B+I,GAAIwI,EAAKxI,KAAOwI,EAAKxI,GAAK,GAAG/I,MAAS+I,QACtCyI,IAAKD,EAAKE,UAWRC,GAAW,CAACzT,EAAQ+B,EAAMzB,EAAMoT,GAAS,EAAOC,EAAKC,eACvD5T,EAAO2B,cACH,IAAIgS,EAAG,GAAG5R,KAAQzB,IAAQ,CACtBuT,SAAS,EACTC,OAAQ,CAAEJ,YAEjB,EAKQK,GAAiB,CAACpC,EAAQ5P,EAAMiS,EAAQjD,KAAiB,CAClEhP,OACAiS,SACAjD,cACAR,GAAIA,GAAG7R,IAAIqS,GACXQ,IAAK,CAACC,KAASxS,IAAS2S,EAAOJ,IAAIR,EAAaS,KAASxS,GACzD6S,SAAU,CAACL,KAASxS,IAAS2S,EAAOE,SAASd,EAAaS,KAASxS,GACnE8S,SAAU,IAAI9S,IAAS2S,EAAOG,SAASf,KAAgB/R,KAGrDiV,GAAYzC,GAAQA,EAAKgB,QAAQ,eAAgB,IAE1C0B,GAAiB,CAACvC,EAAQ5Q,EAAMoT,EAAQC,KACjD,MAAM1F,EAASiD,EAAO5Q,GAAM7B,KAAKyS,GACjCA,EAAO5Q,GAAiB,QAATA,EAEX,CAACgQ,EAAaS,KAASxS,KACfmV,GAAQzF,EAAOqC,EAAaoD,KAAWnV,GAC3C,MAAMnB,EAAS6Q,EAAOqC,EAAakD,GAAUzC,MAAUxS,GAEvD,OADIoV,GAAO1F,EAAOqC,EAAaqD,KAAUpV,GAClCnB,CAAM,EAGjBqO,MAAO6E,EAAaS,KAASxS,KACrBmV,SAAczF,EAAOqC,EAAaoD,KAAWnV,GACjD,MAAMnB,QAAe6Q,EAAOqC,EAAakD,GAAUzC,MAAUxS,GAE7D,OADIoV,SAAa1F,EAAOqC,EAAaqD,KAAUpV,GACxCnB,CAAM,CAChB,EAGIwW,GAAa9Q,OAAOsL,IAAI,yBAE/ByF,GAAY,IAAI5Q,IACtB2J,GAAetG,WAAYsN,GAAY,CAAE7V,MAAO8V,KAEzC,MAAMC,GAAY,IAAIhV,MAAM+U,GAAW,CAC1C5V,IAAK,CAACkE,EAAK7B,IAAS6B,EAAIlE,IAAIqC,GAC5BkC,IAAK,CAACL,EAAK7B,IAAS6B,EAAIK,IAAIlC,GAC5BwL,QAAS3J,GAAO,IAAIA,EAAIF,UAGtBO,GAAM,CAACkB,EAAGqQ,KAAWA,EAAM1S,WAAW,KAEtCsJ,GAAQ,CAACqJ,EAAS1T,IAAS,IAAIxB,MACjCkV,EACA,CAAExR,OAAKvE,IAAK,CAAC+V,EAASD,IAAUC,EAAQ1T,GAAMyT,KAGrCE,GAAoB,CAAC3S,EAAM4P,EAAQZ,EAAa0D,KAEzD,GAAa,YAAT1S,EAAoB,OAGxB,MAAMuS,EAAY,wBAClB,IAAK,MAAMvT,KAAQuL,QAAQC,QAAQkI,GAC/B9C,EAAOC,iBAAiBb,EAAa,GAAGuD,KAAavT,IAAQqK,GAAMqJ,EAAS1T,IAChF4Q,EAAOC,iBAAiBb,EAAauD,EAAWG,EAAQ,EAG/CE,GAAW,CAACpN,EAAQxG,IAASkO,OAAO1H,GAAQzI,MAAK8Q,IAC1D0E,GAAUlR,IAAIrC,EAAM,IAAK6O,GAAM,IAGtBgF,GAAYlF,GAAQ,IAAIhP,SAAQ,CAACmU,EAAQjU,KAC9CzD,SAAS2X,cAAc,gCAAgCpF,OACvDmF,IAGA1X,SAAS4X,KAAKC,OACVvV,GACItC,SAAS8X,cAAc,QACvB,CAAEC,IAAK,aAAcxF,OAAMmF,SAAQjU,YAGnD,IAGauU,GAAQ5N,GAAU,UAAUgL,KAAK,IAAI9C,IAAIlI,GAAQ6N,UAEjDC,GAASC,GAClB,oBAAoB/C,KAAK+C,EAAQC,aAAa,UCjIrCC,IAAqBzO,WAAW0O,OAMhC1D,GAAY,EAAG2D,KAAIC,OAAMC,WAAWtY,EAAMyH,KACnD,MAAM8Q,EAAUD,EAAQ3U,QAAQ3D,GAC1BwY,EAAUH,EAAKI,QAAQF,GAG7B,OAFIH,EAAGM,UAAWN,EAAGM,UAAUF,GAC1BE,GAAUN,EAAII,GACZJ,EAAG3D,UAAU8D,EAAS,IAAI3O,WAAWnC,GAAS,CACjDkR,QAAQ,GACV,EAUAF,GAAWzY,IACb,MAAM4Y,EAAO5Y,EAAK+U,MAAM,KAExB,OADA6D,EAAKC,MACED,EAAKE,KAAK,IAAI,EAGZJ,GAAY,CAACN,EAAIpY,KAC1B,MAAM+Y,EAAU,GAChB,IAAK,MAAMC,KAAUhZ,EAAK+U,MAAM,KACb,MAAXiE,GAA6B,OAAXA,IACtBD,EAAQrY,KAAKsY,GACTA,GAAQZ,EAAGa,MAAMF,EAAQD,KAAK,MAC1C,EAGMnV,GAAU,CAACyU,EAAIpY,KACjB,MAAM4Y,EAAO,GACb,IAAK,MAAMI,KAAUhZ,EAAK+U,MAAM,KAC5B,OAAQiE,GACJ,IAAK,GAEL,IAAK,IACD,MACJ,IAAK,KACDJ,EAAKC,MACL,MACJ,QACID,EAAKlY,KAAKsY,GAGtB,MAAO,CAACZ,EAAGc,OAAO/I,OAAOyI,GAAME,KAAK,KAAK5D,QAAQ,OAAQ,IAAI,EA2B3DiE,GAAaC,IACf,MAAMC,EAAMD,EACP9T,KAAKgU,GAASA,EAAKtE,OAAOE,QAAQ,iBAAkB,MACpDqE,QAAQlY,GAAY,KAANA,GAAkB,MAANA,IAC1ByX,KAAK,KAEV,OAAOM,EAAM,GAAG5U,WAAW,KAAO,IAAI6U,IAAQA,CAAG,EAG/CG,GAAc,CAACvM,EAAKwM,IACtBvX,EAAM0T,GAAY3I,EAAKwM,IAAUC,cAExBC,GAAa,CAACtF,EAAQZ,EAAamG,EAAcH,IAC1DpU,GArCwB,CAACuU,IACzB,IAAK,MAAMC,MAAEA,EAAKC,QAAEA,EAAOC,KAAEA,EAAO,MAAQH,EAAc,CACtD,QAAc9R,IAAV+R,QAAmC/R,IAAZgS,EACvB,MAAM,IAAI3P,MACN,yDAER,QAAcrC,IAAV+R,QAAmC/R,IAAZgS,GAAyBC,EAAKC,SAAS,KAC9D,MAAM,IAAI7P,MACN,iDAAiD4P,wCAEjE,CACI,OAAOH,EAAaK,SAChB,EAAGF,OAAO,GAAIG,YAAY,IAAKJ,UAASD,YACpC,GAAIlR,GAAQkR,GACR,OAAOA,EAAMvU,KAAK6U,IAAU,CACxBlN,IAAKkM,GAAU,CAACY,EAAMI,IACtBna,KAAMmZ,GAAU,CAACe,EAAWC,QAEpC,MAAMC,EAAWN,GAAWC,EAAKvP,MAAM,EAAIuP,EAAKM,YAAY,MAC5D,MAAO,CAAC,CAAEpN,IAAK8M,EAAM/Z,KAAMmZ,GAAU,CAACe,EAAWE,KAAa,GAErE,EAiBGE,CAAoBV,GAActU,KAAI,EAAG2H,MAAKjN,UAC1CwZ,GAAYvM,EAAKwM,GACZjY,MAAMiG,GAAW4M,EAAOI,UAAUhB,EAAazT,EAAMyH,QAI5D8S,GAAW,CAACtQ,EAAQuQ,IAASA,EAAKR,SAAS,KAC7B,GAAGQ,IAAOvQ,EAAO8K,MAAM,KAAK8D,QAAU2B,EAExDC,GAAgB,CAACC,EAAKpV,IAAQoV,EAAIxF,QACtC,YACA5T,IACE,IAAKgE,EAAIK,IAAIrE,GACX,MAAM,IAAIqZ,YAAY,qBAAqBrZ,KAC7C,OAAOgE,EAAIlE,IAAIE,EAAE,IA0BRsZ,GAAa,CAACvG,EAAQZ,EAAaoH,EAAcpB,IAC1DpU,GAvBwBwU,KAC1B,MAAMvU,EAAM,IAAIc,IACV0U,EAAU,IAAIpU,IACdqU,EAAa,GACnB,IAAK,MAAO9Q,EAAQuQ,KAASrV,GAAQ0U,GACnC,GAAI,WAAW5E,KAAKhL,GAAS,CAC3B,GAAI3E,EAAIK,IAAIsE,GACV,MAAM,IAAI0Q,YAAY,wBAAwB1Q,KAChD3E,EAAIQ,IAAImE,EAAQwQ,GAAcD,EAAMlV,GAC1C,KACS,CACH,MAAM2H,EAAMwN,GAAcxQ,EAAQ3E,GAC5BtF,EAAOua,GAAStN,EAAKwN,GAAcD,GAAQ,KAAMlV,IACvD,GAAIwV,EAAQnV,IAAI3F,KAAUA,EAAKga,SAAS,MACtC,MAAM,IAAIW,YAAY,2BAA2B3a,KACnD8a,EAAQ/I,IAAI/R,GACZ+a,EAAWra,KAAK,CAAEuM,MAAKjN,QAC7B,CAEE,OAAO+a,CAAU,EAKXC,CAAoBH,GAAcvV,KAAI,EAAG2H,MAAKjN,UAC1CwZ,GAAYvM,EAAKwM,GACZjY,MAAMiG,GAAW4M,EAAOI,UACrBhB,EACAzT,EACAyH,EACAwF,QAKPgO,GAAiB,EAAGnI,OAAMsD,UAAUqD,KAC7C,MAAMyB,EAAW,GACjB,GAAI9E,GAAU8B,GACV,IAAK,IAAKjO,EAAQxG,KAAS0B,GAAQiR,GAC/BnM,EAAS2L,GAAY3L,EAAQwP,GAC7ByB,EAASxa,KAAK2W,GAASpN,EAAQxG,IAGvC,GAAIqP,IAASoF,GACT,IAAK,IAAKjO,EAAQxG,KAAS0B,GAAQ2N,GAC/B7I,EAAS2L,GAAY3L,EAAQwP,GACzB5B,GAAM5N,GAASqN,GAAUrN,GACxBiR,EAASxa,KAAK2W,GAASpN,EAAQxG,IAG5C,OAAO4B,GAAI6V,EAAS,EAGXC,GAAiB1Y,GAAU+T,IACpCnS,cAAc,IAAIiS,YAAY,GAAG7T,aAAmB,CAAE+T,WAAU,GC3K9D/N,eAAezB,IAAGnG,OAAOqC,GAAE8D,IAAI,MAAM9D,SAAS8D,EAAE,OAAO9D,GAAG,IAAI,WAAW,IAAI,YAAY,MAAM,GAAG,IAAI,SAAS,OAAO,OAAO8D,EAAE,OAAO,SAAS,QAAQ,OAAO9D,EAAC,EAAG,IAAIzB,GAAE,cAAc,IAAI,IAAIwG,kBAAkB,EAAE,CAACC,cAAc,IAAIzG,IAAG0G,OAAOC,YAAY,CAAC,MAAMpB,IAAGvF,IAAG4G,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAE,CAAC,IAAII,GAAE,CAAC3B,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,GAAGC,KAAK,GAAGC,OAAO,GAAGC,UAAU,GAAGxC,IAAI,GAAGQ,IAAI,GAAGiC,OAAO,GAAGC,MAAM,IAAI,MAAM+H,eAAerH,IAAG7H,OAAOkI,GAAE/B,IAAI,OAAOA,EAAEkC,OAAM,KAAKN,GAAE1B,MAAM,CAAC,MAAMhE,EAAE8D,EAAEkC,MAAKzH,EAAE,GAAGuF,EAAEkC,GAAE,GAAGzH,EAAE,IAAI,IAAImH,EAAE,EAAEA,EAAE1F,EAAE0F,IAAInH,EAAEmH,GAAGG,GAAE/B,GAAG,OAAOvF,CAAC,CAAC,KAAKmH,GAAEzB,OAAO,CAAC,MAAMjE,EAAE8D,EAAEkC,MAAKzH,EAAE,GAAGuF,EAAEkC,GAAE,GAAGzH,EAAE,IAAI,IAAImH,EAAE,EAAEA,EAAE1F,EAAE0F,IAAInH,EAAEsH,GAAE/B,IAAI+B,GAAE/B,GAAG,OAAOvF,CAAC,CAAC,KAAKmH,GAAEvB,OAAO,CAAC,MAAMnE,EAAE8D,EAAEkC,MAAK,OAAOlC,EAAEkC,GAAE,GAAGhG,EAAEA,CAAC,CAAC,KAAK0F,GAAE3B,IAAI,OAAOD,EAAEA,EAAEkC,OAAM,KAAKN,GAAExB,OAAO,OAAOJ,EAAEkC,MAAK,KAAKN,GAAEf,OAAO,OAAOuT,OAAOpU,EAAEkC,OAAM,KAAKN,GAAEtB,KAAK,OAAM,EAAG,KAAKsB,GAAErB,MAAM,OAAQ,EAAC,KAAKqB,GAAEpB,KAAK,OAAO,KAAK,KAAKoB,GAAEd,UAAU,OAAO,KAAKc,GAAEnB,OAAO,CAAC,MAAMvE,EAAE8D,EAAEkC,MAAKzH,EAAEuF,EAAEkC,MAAKN,EAAE,CAAC1F,GAAGzB,GAAGmH,EAAElI,KAAK,CAACwH,cAAczG,IAAI,MAAMiH,EAAE,IAAIM,eAAeJ,GAAG5B,EAAEkC,GAAE,GAAGR,EAAE,MAAMK,EAAE,IAAIa,WAAWlB,EAAE,EAAExF,GAAG,IAAI,IAAIzB,EAAE,EAAEA,EAAEyB,EAAEzB,IAAIsH,EAAEtH,GAAGuF,EAAEkC,MAAK,OAAOR,CAAC,CAAC,KAAKE,GAAElB,KAAK,CAAC,MAAMxE,EAAE8D,EAAEkC,MAAKzH,EAAEuF,EAAEkC,MAAKN,EAAE5B,EAAEkC,MAAKR,EAAE,CAACK,GAAE/B,GAAGvF,GAAGmH,GAAGF,EAAEhI,KAAKkI,GAAG,MAAMQ,EAAE,IAAIK,WAAWvG,MAAMwF,GAAG,OAAO1B,EAAEkC,GAAE,GAAGE,EAAEA,CAAC,CAAC,KAAKR,GAAEjB,OAAO,OAAOzE,EAAE8D,EAAEkC,OAAM1E,WAAW,WAAWyB,OAAO/C,EAAEsH,MAAMtH,EAAEmY,QAAQ,KAAK,IAAIpV,OAAOsL,IAAIrO,GAAG,KAAK0F,GAAEhB,KAAK,CAAC,MAAM1E,EAAE,IAAI6G,KAAK/C,EAAEkC,OAAM,OAAOlC,EAAEkC,GAAE,GAAGhG,EAAEA,CAAC,CAAC,KAAK0F,GAAEtD,IAAI,CAAC,MAAMpC,EAAE8D,EAAEkC,MAAKzH,EAAE,IAAI2E,IAAIY,EAAEkC,GAAE,GAAGzH,EAAE,IAAI,IAAImH,EAAE,EAAEA,EAAE1F,EAAE0F,IAAI,CAAC,MAAM1F,EAAE6F,GAAE/B,GAAG4B,EAAEG,GAAE/B,QAAG,IAAS9D,GAAGzB,EAAEqE,IAAI5C,EAAE0F,EAAE,CAAC,OAAOnH,CAAC,CAAC,KAAKmH,GAAE9C,IAAI,CAAC,MAAM5C,EAAE8D,EAAEkC,MAAKzH,EAAE,IAAIiF,IAAIM,EAAEkC,GAAE,GAAGzH,EAAE,IAAI,IAAImH,EAAE,EAAEA,EAAE1F,EAAE0F,IAAI,CAAC,MAAM1F,EAAE6F,GAAE/B,QAAG,IAAS9D,GAAGzB,EAAEsQ,IAAI7O,EAAE,CAAC,OAAOzB,CAAC,CAAC,KAAKmH,GAAEb,OAAO,CAAC,MAAM7E,EAAE8D,EAAEkC,MAAKzH,EAAEuF,EAAEkC,MAAKN,EAAE,IAAIoB,OAAO9G,EAAEzB,GAAG,OAAOuF,EAAEkC,GAAE,GAAGN,EAAEA,CAAC,CAAC,KAAKA,GAAEZ,MAAM,CAAC,MAAM9E,EAAEuG,WAAWzC,EAAEkC,QAAOiB,MAAM1I,EAAEuF,EAAEkC,MAAKN,EAAE5B,EAAEkC,MAAKH,EAAE,IAAI7F,EAAEzB,EAAE,CAAC4I,MAAMrD,EAAEkC,QAAO,OAAOlC,EAAEkC,GAAE,GAAGR,GAAEK,EAAE,QAAQ,CAAC7H,MAAM0H,IAAIG,CAAC,CAAC,QAAQ,MAAM,IAAIoB,MAAM,iBAAiBnD,EAAEkC,GAAE,MAAM,IAAIhG,CAAA,GAAIoY,MAAMlS,IAAGD,KAAK,IAAID,GAAE,EAAE,MAA2DP,QAAQU,IAAGR,OAAOC,OAAOtI,IAAGwI,aAAaC,UAAU0L,IAAGxL,KAAKoH,GAAE,CAACvJ,EAAE9D,EAAEzB,KAAK,MAAMiH,EAAExF,EAAE9B,IAAIK,GAAG,MAAM,iBAAiBiH,GAAG1B,EAAEtG,KAAKkI,GAAE3B,IAAIyB,IAAG,IAAKxF,EAAE4C,IAAIrE,EAAEuF,EAAE/C,SAAQ,EAAE,EAAGsX,GAAE,CAAC9Z,EAAEiH,EAAEK,EAAEK,EAAElG,GAAE6F,MAAM,OAAOK,GAAG,IAAI,OAAO3H,EAAEf,KAAKkI,GAAEpB,MAAM,MAAM,IAAI,SAAS,GAAG+I,GAAE9O,EAAEiH,EAAEK,GAAG,MAAM,QAAO,GAAI,KAAKM,GAAEN,GAAG,CAAC,MAAM/B,EAAE+B,EAAE9E,OAAOxC,EAAEf,KAAKkI,GAAE1B,MAAMF,GAAG,IAAI,IAAI9D,EAAE,EAAEA,EAAE8D,EAAE9D,IAAIqY,GAAE9Z,EAAEiH,EAAEK,EAAE7F,IAAI,KAAK,CAAC,KAAK1C,GAAEuI,GAAG,CAAC,MAAMQ,kBAAkBrG,EAAEuE,OAAO2B,EAAEI,WAAWN,EAAEjF,OAAOqF,GAAGP,EAAE,GAAGtH,EAAEf,KAAKkI,GAAElB,KAAK,CAACxE,IAAI,OAAOA,EAAEO,QAAQgG,aAAavG,EAAE8D,GAAE9D,GAAG,OAAOA,EAAEO,IAAK,EAAxD,CAA0DsF,EAAEvF,aAAa0F,EAAEI,KAAKF,EAAEM,WAAWR,GAAGhG,EAAEoG,EAAE,GAAGiH,GAAE9O,EAAEiH,EAAEU,GAAG,MAAML,EAAEK,CAAC,CAAC,KAAKL,aAAaC,YAAY,CAAC,MAAMhC,EAAE+B,EAAEW,WAAWxG,EAAE6F,EAAEY,UAAUZ,EAAEb,cAAc,EAAE,GAAGzG,EAAEf,KAAKkI,GAAEnB,OAAOT,EAAE9D,GAAG8D,EAAE,CAAC,MAAM9D,EAAE,IAAI0G,WAAWb,EAAE,EAAE/B,GAAG,IAAI,IAAIA,EAAE,EAAEA,EAAE9D,EAAEe,OAAO+C,GAAG,MAAMvF,EAAEf,KAAKmJ,MAAMpI,EAAEyB,EAAE4G,SAAS9C,EAAEA,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK+B,aAAagB,KAAKtI,EAAEf,KAAKkI,GAAEhB,MAAMmB,GAAG,MAAM,KAAKA,aAAa3C,IAAI,CAAC,MAAMY,EAAEvF,EAAEf,KAAKkI,GAAEtD,IAAI,GAAG,IAAI8D,EAAE,EAAE,IAAI,MAAMpC,EAAE4B,KAAKG,EAAE,CAAC,MAAMA,EAAE7F,GAAE8D,GAAGkC,EAAEhG,GAAE0F,GAAGG,GAAGG,IAAIqS,GAAE9Z,EAAEiH,EAAE1B,EAAE+B,GAAGwS,GAAE9Z,EAAEiH,EAAEE,EAAEM,GAAGE,IAAI,CAAC3H,EAAEuF,EAAE,GAAGoC,EAAE,KAAK,CAAC,KAAKL,aAAarC,IAAI,CAAC,MAAMM,EAAEvF,EAAEf,KAAKkI,GAAE9C,IAAI,GAAG,IAAIsD,EAAE,EAAE,IAAI,MAAMpC,KAAK+B,EAAE,CAAC,MAAMH,EAAE1F,GAAE8D,GAAG4B,IAAI2S,GAAE9Z,EAAEiH,EAAE1B,EAAE4B,GAAGQ,IAAI,CAAC3H,EAAEuF,EAAE,GAAGoC,EAAE,KAAK,CAAC,KAAKL,aAAaiB,OAAOvI,EAAEf,KAAKkI,GAAEb,OAAOgB,EAAEkB,OAAOlB,EAAEmB,OAAO,MAAM,KAAKnB,aAAaoB,MAAM1I,EAAEf,KAAKkI,GAAEZ,MAAMe,EAAEtF,KAAKsF,EAAErE,QAAQqE,EAAEqB,MAAMrB,EAAEsB,OAAO,MAAM,QAAQ,CAAC,GAAG,WAAWtB,EAAE,CAAC,MAAM/B,EAAE+B,EAAEuB,SAAS,GAAGtD,IAAI+B,EAAE,CAACtH,EAAEf,KAAKkI,GAAEzB,OAAO,GAAG,KAAK,CAAC,GAAGoJ,GAAE9O,EAAEiH,EAAEK,EAAE/B,GAAG,KAAK,CAAC,MAAMA,EAAEvF,EAAEf,KAAKkI,GAAEzB,OAAO,GAAG,IAAIiC,EAAE,EAAE,IAAI,MAAMpC,KAAK+B,EAAE,CAAC,MAAMH,EAAEG,EAAE/B,GAAGkC,EAAEhG,GAAE0F,GAAGM,IAAIqS,GAAE9Z,EAAEiH,EAAE1B,EAAE,UAAUuU,GAAE9Z,EAAEiH,EAAEE,EAAEM,GAAGE,IAAI,CAAC3H,EAAEuF,EAAE,GAAGoC,EAAE,KAAK,EAAE,MAAM,IAAI,UAAU3H,EAAEf,KAAKqI,EAAEH,GAAEtB,KAAKsB,GAAErB,OAAO,MAAM,IAAI,SAAS,GAAGgJ,GAAE9O,EAAEiH,EAAEK,GAAG,MAAMtH,EAAEf,KAAKkI,GAAEvB,OAAO0B,GAAG,MAAM,IAAI,SAAStH,EAAEf,KAAKkI,GAAEQ,GAAGL,EAAER,YAAY,MAAM,IAAI,SAAS,CAAC,MAAMvB,EAAE,CAACA,IAAI,MAAM9D,EAAEqH,OAAOvD,GAAGwD,MAAM,GAAI,GAAE,OAAOtH,EAAEsB,WAAW,YAAYyB,OAAOwE,OAAOzD,GAAG9D,EAAE,EAAG,EAAzF,CAA2F6F,GAAG,GAAG/B,EAAE,CAACvF,EAAEf,KAAKkI,GAAEQ,GAAGpC,GAAG,KAAK,CAAC,CAAC,IAAI,GAAGvF,EAAEf,KAAKkI,GAAEd,WAAW,MAAM,QAAQrG,EAAEf,KAAKkI,GAAEQ,GAAGL,GAAE,ECC9qHI,GAAO,CAAEmS,MDDo2DtU,IAAIkC,GAAE,EAAE,MAAMhG,EAAEkG,GAAEpC,GAAG,OAAO9D,EAAEe,OAAO8E,GAAE7F,QAAG,CAAA,ECCv3D+F,UDDmpHjC,IAAI,MAAM9D,EAAE,GAAG,OAAOqY,GAAErY,EAAE,IAAIkD,IAAIY,GAAG2N,GAAEzR,EAAC,GCOptHsY,GAAS,IAAI1L,QAIb2L,GAAe7M,MAAO8M,EAAMC,EAAUlI,EAAaiD,EAAQ+C,KAChE/C,EAAOmD,QACP8B,EAAS,uBACHf,GAAWc,EAAMjI,EAAaiD,EAAOmD,MAAOJ,GAClDkC,EAAS,iBAETjF,EAAOxU,QACPyZ,EAAS,uBACHhC,GAAW+B,EAAMjI,EAAaiD,EAAOxU,MAAOuX,GAClDkC,EAAS,iBAETjF,EAAOK,aACP4E,EAAS,4BACHV,GAAevE,EAAOK,WAAY0C,GACxCkC,EAAS,qBACjB,EAGarH,GAAmB,CAACb,EAAahQ,EAAMvC,KACnC,eAATuC,IACAvC,EAAM0a,gBAAkBhN,SAAUiN,WACxBL,GAAOpa,IAAIqS,EAAX+H,CAAwBK,GACvBA,EAASvW,KAAI7B,GAAQgQ,EAAYqI,SAASrY,MAErDvC,EAAM6a,QAAUnN,MAAOnL,IACnB,MAAMsY,EAAU,IAAI5V,EAAW1C,GAE/B,aADMsY,EAAQzV,OACPyV,CAAO,EAElB7a,EAAMiI,KAAOA,IAEjBsK,EAAYuI,iBAAiBvY,EAAMvC,EAAM,EAGhC+a,GAAY,CAACjc,EAAMiN,KAC5B,GAAIjN,EAAKga,SAAS,MAAO,CACrB,GAAI,gCAAgC/E,KAAKhI,GACrC,OAAOjD,OAAOmL,GAClB,MAAM,IAAIhL,MAAM,uBAAuB8C,IAC/C,CACI,MAAO,EAAE,EAGAgH,GAAM,CAACR,EAAaS,KAASxS,KACtC,IACI,OAAO+R,EAAYyI,UAAUxH,GAAOR,MAAUxS,EACtD,CACI,MAAOsG,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACnC,GAGauM,GAAW3F,MAAO6E,EAAaS,KAASxS,KACjD,IACI,aAAa+R,EAAY0I,eAAezH,GAAOR,MAAUxS,EACjE,CACI,MAAOsG,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACnC,GAGawM,GAAW5F,MAAO6E,EAAaS,EAAM9P,KAG9C,MAAOX,KAAS2B,GAAQ8O,EAAKa,MAAM,KACnC,IACItP,EADA/C,EAAS+Q,EAAY7B,QAAQxQ,IAAIqC,GAErC,IAAK,MAAMc,KAAOa,GAAOK,EAAS/C,GAAU,CAACA,EAAQA,EAAO6B,IAC5D,UACU7B,EAAOgD,KAAKD,EAASrB,EACnC,CACI,MAAO4D,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACnC,GCnFA,IAAAoU,IAAe,IAAIC,aAActR,OAAO,+0ICEjC,MAAMuR,GAAO1N,MAAO2N,UACnB5K,OAAgC,uBACtC2J,MAAMiB,GCHR3N,eAAe4N,GAAOpE,EAAIqE,GACtB,OAAO,IAAIrZ,SAAQ,CAACO,EAASC,KACzBwU,EAAGoE,OAAOC,GAAWC,IACbA,EAAK9Y,EAAO8Y,GACX/Y,GAAS,GAChB,GAEV,CAIO,SAASgZ,GAAmBtI,GAC/B,MAAM+D,EAAK/D,EAAO+D,GACZwE,EAAQvI,EAAO+D,GAAGyE,YAAYD,MAC9BvE,EAAOhE,EAAOgE,KAEdyE,EAAgB,CAGlBC,SAAU,MACVC,UAAW,MACXC,MAAO,SAAUA,GACb,IAAKA,EAAMC,KAAKC,iBACZ,MAAM,IAAIhT,MAAM,qCAIpB,OAAOyS,EAAMK,MAAMpT,MAAM,KAAM+K,UAClC,EACD4H,OAAQ5N,MAAOqO,EAAOG,EAAU5X,KAC5B,IACI,MAAM6X,EAAQP,EAAcQ,YAAYL,GAClCM,QAAeT,EAAcU,aAAaP,GAC1CvC,EAAM0C,EAAWG,EAASF,EAC1BI,EAAML,EAAWC,EAAQE,QACzBT,EAAcY,UAAUT,EAAOvC,EAAK+C,GAC1CjY,EAAS,KACZ,CAAC,MAAOwB,GACLxB,EAASwB,EACzB,GAGQsW,YAAcL,IACV,IAAI9X,EAAUtE,OAAOoL,OAAO,MAE5B,SAAS0R,EAAUtc,GACf,MAAa,MAANA,GAAmB,OAANA,CACpC,CAEY,SAASuc,EAAWhe,GAChB,OAAQyB,GACGgX,EAAKwF,MAAMje,EAAMyB,EAE5C,CAEY,IAAIyc,EAAQ1F,EAAG2F,QAAQd,EAAMe,YACxBzE,OAAOoE,GACPrY,IAAIsY,EAAWX,EAAMe,aAE1B,KAAOF,EAAM7Z,QAAQ,CACjB,IAAIjE,EAAO8d,EAAMjF,MACboF,EAAO7F,EAAG6F,KAAKje,GAEfoY,EAAG8F,MAAMD,EAAKE,OACdL,EAAMpd,KAAKmJ,MACPiU,EACA1F,EAAG2F,QAAQ/d,GAAMuZ,OAAOoE,GAAWrY,IAAIsY,EAAW5d,KAI1DmF,EAAQnF,GAAQ,CAAEoe,UAAWH,EAAKI,MAAOF,KAAMF,EAAKE,KACpE,CAEY,MAAO,CAAE1Z,KAAM,QAASU,QAASA,EAAS,EAG9CqY,aAAc5O,MAAOqO,IAEjB,MAAM9X,EAAUtE,OAAOoL,OAAO,MAExBqS,QAAgBC,GAAatB,EAAMC,KAAKC,kBAC9C,IAAK,MAAOnd,EAAMwe,KAAWF,EACZ,MAATte,IAEJmF,EAAQkT,EAAKwF,MAAMZ,EAAMe,WAAYhe,IAAS,CAC1Coe,UACoB,SAAhBI,EAAOC,YACMD,EAAOE,WAAWC,iBACzB,IAAI5U,KACdoU,KACoB,SAAhBK,EAAOC,KACD3B,EAAcE,UACdF,EAAcC,WAIhC,MAAO,CAAEtY,KAAM,SAAUU,UAASmZ,UAAS,EAE/CM,eAAiB5e,IACb,MACMgW,EADSoC,EAAGyG,WAAW7e,GACTgW,KACdiI,EAAO7F,EAAG6F,KAAKje,GAErB,GAAIoY,EAAG8F,MAAMD,EAAKE,MACd,MAAO,CAAEC,UAAWH,EAAKI,MAAOF,KAAMF,EAAKE,MACxC,GAAI/F,EAAG0G,OAAOb,EAAKE,MAEtB,OADAnI,EAAK+I,SAAWnC,EAAMoC,wBAAwBhJ,GACvC,CACHoI,UAAWH,EAAKI,MAChBF,KAAMF,EAAKE,KACXY,SAAU/I,EAAK+I,UAGnB,MAAM,IAAI5U,MAAM,0BAChC,EAEQ8U,gBAAiB,CAACjf,EAAMkf,KACpB,GAAI9G,EAAG8F,MAAMgB,EAAY,MACrB9G,EAAGM,UAAU1Y,EAAMkf,EAAY,UAC5B,KAAI9G,EAAG0G,OAAOI,EAAY,MAG7B,MAAM,IAAI/U,MAAM,2BAFhBiO,EAAG3D,UAAUzU,EAAMkf,EAAgB,SAAG,CAAEvG,QAAQ,GAGhE,CAEYP,EAAG+G,MAAMnf,EAAMkf,EAAY,MAC3B9G,EAAGgH,MAAMpf,EAAMkf,EAAiB,UAAGA,EAAiB,UAAE,EAE1DG,iBAAmBrf,IACf,IAAIie,EAAO7F,EAAG6F,KAAKje,GAEfoY,EAAG8F,MAAMD,EAAKE,MACd/F,EAAGkH,MAAMtf,GACFoY,EAAG0G,OAAOb,EAAKE,OACtB/F,EAAGmH,OAAOvf,EAC1B,EAEQwf,gBAAiB5Q,MAAO4P,IACpB,GAAoB,SAAhBA,EAAOC,KAAiB,CACxB,MAAMtE,QAAaqE,EAAOE,UAC1B,MAAO,CACHK,SAAU,IAAInV,iBAAiBuQ,EAAKT,eACpCyE,KAAMrB,EAAcE,UACpBoB,UAAWjE,EAAKwE,iBAEpC,CAAmB,GAAoB,cAAhBH,EAAOC,KACd,MAAO,CACHN,KAAMrB,EAAcC,SACpBqB,UAAW,IAAIrU,MAGnB,MAAM,IAAII,MAAM,iBAAmBqU,EAAOC,KAC1D,EAEQgB,iBAAkB7Q,MAAO0P,EAASte,EAAMkf,KACpC,MAAMQ,EAAkBpB,EAAQld,IAAIiX,EAAKI,QAAQzY,IAC3Cwe,EAASpG,EAAG0G,OAAOI,EAAMf,YACnBuB,EAAgBC,cAActH,EAAKuH,SAAS5f,GAAO,CACvDiM,QAAQ,UAEJyT,EAAgBG,mBAAmBxH,EAAKuH,SAAS5f,GAAO,CAC5DiM,QAAQ,IAEhB,GAAoB,SAAhBuS,EAAOC,KAAiB,CACxB,MAAMqB,QAAiBtB,EAAOuB,uBACxBD,EAASE,MAAMd,EAAMH,gBACrBe,EAASjb,OAC/B,CACYyZ,EAAQxY,IAAI9F,EAAMwe,EAAO,EAE7ByB,kBAAmBrR,MAAO0P,EAASte,KAC/B,MAAM0f,EAAkBpB,EAAQld,IAAIiX,EAAKI,QAAQzY,UAC3C0f,EAAgBQ,YAAY7H,EAAKuH,SAAS5f,IAChDse,EAAQpZ,OAAOlF,EAAK,EAExB0d,UAAW9O,MAAOqO,EAAOvC,EAAK+C,KAC1B,IAAI0C,EAAQ,EAEZ,MAAMlU,EAAS,GACfpL,OAAOuE,KAAKsV,EAAIvV,SAASI,SAAQ,SAAUhB,GACvC,MAAMyC,EAAI0T,EAAIvV,QAAQZ,GAChB6b,EAAK3C,EAAItY,QAAQZ,KAElB6b,GACAhI,EAAG0G,OAAO9X,EAAEmX,OACTnX,EAAa,UAAEqZ,UAAYD,EAAc,UAAEC,aAE/CpU,EAAOvL,KAAK6D,GACZ4b,IAEpB,IAGYlU,EAAOqU,OAEP,MAAMC,EAAS,GAWf,GAVA1f,OAAOuE,KAAKqY,EAAItY,SAASI,SAAQ,SAAUhB,GAClCmW,EAAIvV,QAAQZ,KACbgc,EAAO7f,KAAK6D,GACZ4b,IAEpB,IAGYI,EAAOD,OAAOE,WAETL,EACD,OAGJ,MAAM7B,EAAuB,WAAb5D,EAAIjW,KAAoBiW,EAAI4D,QAAUb,EAAIa,QAE1D,IAAK,MAAMte,KAAQiM,EAAQ,CACvB,MAAMwU,EAAUpI,EAAKqI,UACjB1gB,EAAKkV,QAAQ+H,EAAMe,WAAY,MACjCxV,UAAU,GACZ,GAAiB,UAAbiV,EAAIhZ,KAAkB,CACtB,MAAM+Z,EAASF,EAAQld,IAAIqf,GACrBvB,QAAcpC,EAAc0C,gBAAgBhB,GAClD1B,EAAcmC,gBAAgBjf,EAAMkf,EACxD,KAAuB,CACH,MAAMA,EAAQpC,EAAc8B,eAAe5e,SACrC8c,EAAc2C,iBAAiBnB,EAASmC,EAASvB,EAC3E,CACA,CAEY,IAAK,MAAMlf,KAAQugB,EACf,GAAiB,UAAb9C,EAAIhZ,KACJqY,EAAcuC,iBAAiBrf,OAC5B,CACH,MAAMygB,EAAUpI,EAAKqI,UACjB1gB,EAAKkV,QAAQ+H,EAAMe,WAAY,MACjCxV,UAAU,SACNsU,EAAcmD,kBAAkB3B,EAASmC,EACnE,CACA,GA0BI,OAtBApM,EAAO+D,GAAGyE,YAAY8D,eAAiB7D,EAsBhClO,eAA6B5O,EAAMmd,GACtC,GAA0C,8BAAtCA,EAAiB3Z,YAAYC,KAC7B,MAAM,IAAImd,UACR,0EAcN,OArCJ,SAA+B5gB,GACvBoY,EAAGM,UAAWN,EAAGM,UAAU1Y,GAC1B0Y,GAAUN,EAAIpY,GAEnB,MAAMgW,KAAEA,GAASoC,EAAGyG,WAAW7e,EAAM,CACjC6gB,cAAc,IAGlB,GAAIzI,EAAG0I,aAAa9K,GAChB,MAAM,IAAI7L,MAAM,SAASnK,2CAE7B,IAAKoY,EAAG8F,MAAMlI,EAAKmI,MACf,MAAM,IAAIhU,MAAM,SAASnK,uCAG7B,IAAK,MAAM6G,KAAKmP,EAAK+I,SACjB,MAAM,IAAI5U,MAAM,cAAcnK,kBAE1C,CAQQ+gB,CAAsB/gB,GAEtBoY,EAAG6E,MACC7E,EAAGyE,YAAY8D,eACf,CAAExD,oBACFnd,SAIEwc,GAAOpE,GAAI,GAEV,CAEHoE,OAAQ5N,eAAkB4N,GAAOpE,GAAI,GAE5C,CACL,CAEA,MAAMmG,GAAe3P,MAAOoS,IACxB,MAAM1C,EAAU,SAEhB1P,eAAeqS,EAAQC,GACnB,UAAW,MAAMhC,KAASgC,EAAalb,SACnCsY,EAAQ5d,KAAKwe,GACM,cAAfA,EAAMT,YACAwC,EAAQ/B,EAG9B,CAEU+B,CAAQD,GAEd,MAAMzgB,EAAS,IAAI6F,IACnB7F,EAAOuF,IAAI,IAAKkb,GAChB,IAAK,MAAMxC,KAAUF,EAAS,CAC1B,MAAM6C,SAAsBH,EAAUrd,QAAQ6a,IAAS1F,KAAK,KAC5DvY,EAAOuF,IAAIqb,EAAc3C,EACjC,CACI,OAAOje,CAAM,ECpSX0Y,GAAQ,CAACb,EAAIpY,KACf,IACIoY,EAAGa,MAAMjZ,EACjB,CAEI,MAAO6G,GAEX,GAGM8U,GAAWR,GAAe,OAEhC,IAAeiG,GAAA,CACf3c,KAjBa,cAkBT4P,OAAQ,CAACgN,EAAU,WACf,8EAA8EA,oBAClF,YAAM7N,EAAO8N,gBAAEA,GAAmB5K,EAAQzJ,EAAKwM,GAC3C,MAAMpG,OAAEA,EAAMC,OAAEA,EAAMlS,IAAEA,GAAQ8R,GAAM,CAClCG,OAAQD,GAASlF,QAAQlG,OACzBsL,OAAQF,GAASlF,QAAQqF,OAE7BtG,EAAMA,EAAIiI,QAAQ,UAAW,SAC7ByG,GAAS,uBACT,MAAMlI,QAAoBrS,EAAIkgB,EAAgB,CAAEC,YAAY,EAAOlO,SAAQC,SAAQrG,SAC7EuU,EAAaC,GAAe7f,KAAKuB,KAAMsQ,EAAagG,GAa1D,OAZA+B,GAAO1V,IAAI2N,EAAa+N,SAClB/F,GAAatY,KAAMwY,GAAUlI,EAAaiD,EAAQ+C,GAExDtW,KAAKsR,UAAUhB,EAAa,WAAY2I,IACpC1F,EAAOmF,WACPF,GAAS,0BACH6F,EAAW9K,EAAOmF,SAASvW,IAAIwQ,GAAe2D,IACpDkC,GAAS,oBAEbA,GAAS,sBACJlI,EAAYiO,gBACbjO,EAAYiO,cAAgB/E,GAAmBlJ,EAAYkO,UACxDlO,CACV,EACDa,oBACJL,IAAIA,GACAM,YACAC,YACAzH,UAAW,CAAC0G,EAAavS,IAAUuS,EAAYmO,QAAQC,KAAK3gB,GAC5DuT,UAAW,CAAChB,EAAazT,EAAMyH,EAAQwF,KACnC,MAAMmL,GAAEA,EAAIuJ,SAAStJ,KAAEA,EAAIC,QAAEA,IAAc7E,EACrCqO,EAAK,CAAE1J,KAAIC,OAAMC,WACjByJ,EAAS9F,GAAUjc,EAAMiN,GAC/B,GAAI8U,EAAQ,CACR,MAAMC,EAAahiB,EAAKwK,MAAM,GAAG,GAEjC,OADmB,OAAfwX,GAAqB5J,EAAGa,MAAM+I,GAC1BD,GACJ,IAAK,MACL,IAAK,MAAO,CACR,MAAME,EAAO,IAAIC,KAAK,CAACza,GAAS,CAAEhD,KAAM,oBACxC,OF9DKkN,OAAgC,qBE8DxBnQ,MAAKoN,OAASuT,aAAYC,mBAAkBC,gBACrD,MACMC,EAAY,IAAID,EADA,IAAIF,EAAWF,IAErC,IAAK,MAAM/C,WAAeoD,EAAUC,aAAc,CAC9C,MAAMC,UAAEA,EAASpI,SAAEA,GAAa8E,EAC1Bzb,EAAOue,EAAa5H,EAC1B,GAAIoI,EAAWvJ,GAAMb,EAAI3U,OACpB,CACDwV,GAAMb,EAAIC,EAAKI,QAAQhV,IACvB,MAAMgE,QAAeyX,EAAMuD,QAAQ,IAAIL,GACvChK,EAAG3D,UAAUhR,EAAMgE,EAAQ,CACvBkR,QAAQ,GAE5C,CACA,CACwB2J,EAAUzd,OAAO,GAEzC,CACgB,IAAK,MACL,IAAK,SAAU,CACX,MAAM6d,EAAM,aAqBZ,OApBAjO,GAAUqN,EAAIY,EAAKjb,QACnBgM,EAAYyI,UAAU,yIAE0CwG,4FAE7CV,msBAaFU,4BAGrC,EAEA,CACQ,OAAOjO,GAAUqN,EAAI9hB,EAAMyH,EAAO,GAI1CmH,eAAe6S,GAAehO,EAAagG,EAASoC,GAChD,IAAIO,EACJ,IAAK,MAAMuG,KAAc9G,EACrB,GAAI8G,EAAW3I,SAAS,QAAS,CAC7B,MAAM/M,EAAM2I,GAAY+M,EAAYlJ,GAC9BhS,QAAevF,EAAM+K,GAAKyM,oBAC1BvW,KAAKsR,UAAUhB,EAAa,MAAOhM,EAAQwF,EAC7D,MAEiBmP,IAAKA,EAAM3I,EAAYqI,SAAS,QACrCM,EAAIwG,QAAQD,EAGxB,CC7HA,MACME,GAAc,CAAEC,eAAgBjiB,OAAOgL,cAEvC5C,UAAEA,IAAcE,KAItB,IAAI4Z,IAAmB,EACvB,MAAMC,GAAiB5R,GAAU,IAAI1P,KACjC,IAEI,OADAqhB,IAAmB,EACZ3R,KAAU1P,EACzB,CACY,QACJqhB,IAAmB,CAC3B,GAGA,IAAIE,IAAa,EACjB,MAAMC,GAAgB,KAClB,GAAID,GAAY,OAChBA,IAAa,EAEb,MAAMvS,EAAU,IAAIZ,QACda,EAAOzP,GAASA,EAAMiiB,UACtBC,EAAY1hB,IACd,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAKuC,OAAQzD,IAAK,CAClC,MAAMU,EAAQQ,EAAKlB,GACnB,GACqB,mBAAVU,GACP,SAAUA,EACZ,CAEE6hB,IAAmB,EAEnB,IAAIjV,EAAQ4C,EAAQtP,IAAIF,IAAQ+P,QAChC,IAAKnD,EACD,IAEIA,EAAQ7B,GAAO/K,EAAMmiB,OAAQ1S,GAC7BD,EAAQ5K,IAAI5E,EAAO,IAAIoQ,QAAQxD,GACvD,CACoB,MAAO9F,GACHkG,QAAQlG,MAAMA,EACtC,CAEoB8F,IAAOpM,EAAKlB,GAAKsN,GACrBiV,IAAmB,CACnC,CACA,IAIUrd,KAAEA,GAASyO,SACXtK,EAAQnE,EAAK9D,KAAK8D,EAAMA,EAAKmE,OAEnChJ,OAAO8U,iBAAiBxB,SAASnT,UAAW,CACxC6I,MAAO,CACH,KAAA3I,CAAMuE,EAAS/D,GAEX,OADIqhB,IAAkBK,EAAU1hB,GACzBmI,EAAM1G,KAAMsC,EAAS/D,EAC5C,GAEQgE,KAAM,CACF,KAAAxE,CAAMuE,KAAY/D,GAEd,OADIqhB,IAAkBK,EAAU1hB,GACzBmI,EAAM1G,KAAMsC,EAAS/D,EAC5C,IAEM,EAGAia,GAAWR,GAAe,MAC1BmI,GAAY,IAAIxT,QAEtB,IAAeyT,GAAA,CACf9e,KA5Ea,UA6ET4P,OAAQ,CAACgN,EAAU,WACf,qCAAqCA,qBACzC,YAAM7N,EAAOgQ,YAAEA,GAAe9M,EAAQzJ,EAAKwM,GAElCvB,IAA0D,SAArCxB,EAAO+M,2BAC7BP,KACJvH,GAAS,mBACT,IAAIE,SAAEA,EAAQ6H,WAAEA,GAAehN,EAC3BmF,IAAUA,EAAWA,EAASvW,IAAIwQ,GAAe2D,IACrDkC,GAAS,mBACT,MAAMgI,EAAW1W,EAAIzC,MAAM,EAAGyC,EAAIoN,YAAY,MAExC0B,EAAU,IAAI5V,EAAWwd,GACzB7gB,EAAU,CAAE6gB,YACZC,EAAiC,UAA1BlN,EAAOmN,eAGpB,SAFM9H,EAAQzV,OAETsd,GAEA,GAAI/H,EAAU,CACfA,EAAWA,EAASyE,OAEpB,MAAM/b,EAAM0E,GAAU4S,GACtB,GAAIE,EAAQpW,IAAIpB,GAAM,CAClB,MAAM0d,EAAO,IAAIC,KACb,CAACnG,EAAQ3a,IAAImD,IACb,CAAEE,KAAM,qBAGZ3B,EAAQghB,YAAc3R,IAAI4R,gBAAgB9B,GAK1Cnf,EAAQ+Y,SAAWA,EAASvW,KAAI7B,GAAQA,EAAKsR,MAAM,UAAU,KAC7D8G,EAAW,IAC3B,CACA,OApBmBE,EAAQ9W,QAqBnB0W,GAAS,kBACT,MAAMtI,OAAEA,EAAMC,OAAEA,EAAMlS,IAAEA,GAAQ8R,KAC1BO,QAAoBrS,EACtBoiB,EAAY,CAAEnQ,SAAQC,YAAWxQ,KAE/B0e,EAAaC,GAAe7f,KAAK6R,GASvC,OARIiQ,GAAYJ,GAAUxd,IAAI2N,EAAaiQ,GAC3ClI,GAAO1V,IAAI2N,EAAa+N,SAClB/F,GAAatY,KAAMwY,GAAUlI,EAAaiD,EAAQ+C,GAEpDoC,SAAgB2F,EAAW3F,EAAUE,EAAS6H,SAC5C7H,EAAQlX,QACV/B,EAAQghB,aAAa3R,IAAI6R,gBAAgBlhB,EAAQghB,aACrDnI,GAAS,kBACFlI,CACV,EACDa,oBACAL,IAAK+O,GAAe/O,IACpBM,SAAUyO,GAAezO,IACzBC,SAAUwO,GAAexO,IACzBzH,UAAW,CAAC0G,EAAavS,IAAU6L,GAAUrH,KAAK+N,EAAavS,GAC/DuT,UAAW,CAAChB,EAAazT,EAAMyH,EAAQwF,KACnC,MAAM8U,EAAS9F,GAAUjc,EAAMiN,GAC/B,GAAI8U,EACA,OAAOtO,EAAYwQ,cAAcxc,EAAQsa,EAAQ,CAC7CC,WAAYhiB,EAAKwK,MAAM,GAAK,KAGpC,MAAM4N,GAAEA,EAAEC,KAAEA,EAAMsJ,SAASrJ,QAAEA,IAAc7E,EAC3C,OAAOgB,GAAU,CAAE2D,KAAIC,OAAMC,WAAWtY,EAAMyH,EAAO,GAI7D,SAASsF,GAAU7L,GACf,MAAQgjB,KAAKtC,QAAEA,IAAcze,KAC7B,GAAIjC,GAA0B,iBAAVA,EAAoB,CACpC,GAAIA,aAAiB0gB,EAAS,OAAO1gB,EAAM2gB,KAAKgB,IAGhD,GAAI3hB,aAAiBkF,IAAK,OAAO,IAAIA,IAAI,IAAIlF,EAAMiE,YACnD,GAAIwD,GAAQzH,GAAQ,OAAOA,EAAMoE,IAAIyH,GAAW5J,KACxD,CACI,OAAOjC,CACX,CAGA0N,eAAe6S,GAAe5F,EAAUE,EAAS6H,GAAO,GAIpD,MAAMrQ,IAAEA,GAAQrF,QACViW,EAAO,CAAC3N,KAAW4N,KACrB7Q,EAAIiD,KAAW4N,GACflW,QAAQqF,IAAMA,EACdoI,GAASnF,GACTtI,QAAQqF,IAAM4Q,CAAI,EAEtBjW,QAAQqF,IAAM4Q,QACRhhB,KAAKkhB,YAAY,YACvB,MAAMC,EAAWnhB,KAAK2Y,SAAS,YAI/B,GAHIwH,GAAU3d,IAAIxC,OAAOmhB,EAASC,eAAejB,GAAUliB,IAAI+B,aACzDmhB,EAAS1B,QAAQ/G,EAAU,CAAE2I,YAAY,IAC/CtW,QAAQqF,IAAMA,EACVqQ,GAAS7H,aAAmB5V,EAAa,CACzC,MAAMse,EAASH,EAAS1d,SACxBmV,EAAQjW,IAAImD,GAAU4S,GAAW4I,EACzC,CACIH,EAASnB,SACb,CCzLA,MAAM1e,GAAO,iBACPigB,GAASjgB,GAAKyQ,QAAQ,OAAQ,KASpC,IAAeyP,GAAA,CACflgB,KAAIA,GACAmgB,cAAc,EACdvQ,OAAQ,CAACgN,EAAU,UACf,oDAAoDA,sBACxD,YAAM7N,EAAOqR,cAAEA,GAAiBnO,EAAQzJ,EAAKwM,GACzCxM,EAAMA,EAAIiI,QAAQ,oBAAqB,cACvC,MAAMzN,QAAevF,EAAM+K,GAAKyM,cAC1BrF,QAAeyQ,YAAYC,QAAQtd,IACjCud,GAAIvR,SAAsBoR,EAAcxQ,GAIhD,OAHIqC,EAAOmD,aAAae,GAAWzX,KAAMsQ,EAAaiD,EAAOmD,MAAOJ,GAChE/C,EAAOxU,aAAayX,GAAWxW,KAAMsQ,EAAaiD,EAAOxU,MAAOuX,GAChE/C,EAAOK,kBAAkBkE,GAAevE,EAAOK,WAAY0C,GACxDhG,CACV,EAED,gBAAAa,CAAiBb,EAAahQ,EAAMvC,GAChCuC,EAAOA,EAAKyR,QAAQ,OAAQ,MAC5B,MAAM1H,EAAK,YAAYkX,MAAUjhB,IACjCgG,WAAW+D,GAAMtM,EACjBiC,KAAK8Q,IAAIR,EAAa,iBAAiBhQ,gBAAmB+J,aACnD/D,WAAW+D,EACrB,EACDyG,IAAK,CAACR,EAAaS,KAASxS,IAAS+R,EAAYwR,KAAKvQ,GAAOR,MAAUxS,GACvE6S,SAAU,CAACd,EAAaS,KAASxS,IAAS+R,EAAYyR,UAAUxQ,GAAOR,MAAUxS,GACjF,cAAM8S,CAASf,EAAaS,EAAM9P,GAE9B,GAAI,qBAAqB6Q,KAAKf,GAAO,CACjC,MAAQiB,GAAI1R,GAASuG,OACfwD,EAAK,YAAYkX,WACvBjb,WAAW+D,GAAMpJ,EACjBjB,KAAK8Q,IACDR,EACA,+BAA+BhQ,iBAAoB+J,cAEhD/D,WAAW+D,EAC9B,KAAe,CAEH,MAAM4D,EAASjO,KAAK8Q,IAAIR,EAAa,WAAWS,YAC1C9C,EAAO1L,KAAKwO,EAAMT,EAAY0R,KAAK/gB,GACrD,CACK,EACD2I,UAAW,CAAClG,EAAG3F,IAAUA,EACzBuT,UAAW,KACP,MAAM,IAAItK,MAAM,iCAAiC1F,KAAO,GChDhE,IAAe2gB,GAAA,CACf3gB,KARa,UAST4P,OAAQ,CAACgN,EAAU,WACf,wCAAwCA,SAC5C,YAAM7N,EAAO6R,WAAEA,EAAUC,aAAEA,GAAgB5O,EAAQ7P,EAAG4S,GAClD,MAAMpG,OAAEA,EAAMC,OAAEA,EAAMlS,IAAEA,GAAQ8R,KAC1BO,QAAoBrS,GAAI,IAAIikB,GAAaE,gBAQ/C,OAPA9R,EAAY+R,OAAOC,SAASH,EAAaI,MAAOC,IAC5ClS,EAAY+R,OAAOI,SAASD,EAAO,QAASrS,GAC5CG,EAAY+R,OAAOI,SAASD,EAAO,WAAYtS,EAAO,IAEtDqD,EAAOmD,aAAae,GAAWzX,KAAMsQ,EAAaiD,EAAOmD,MAAOJ,GAChE/C,EAAOxU,aAAayX,GAAWxW,KAAMsQ,EAAaiD,EAAOxU,MAAOuX,GAChE/C,EAAOK,kBAAkBkE,GAAevE,EAAOK,WAAY0C,GACxDhG,CACV,EAEDa,iBAAkB,CAACb,EAAahQ,EAAMvC,KAClCuS,EAAY+R,OAAO1f,IAAIrC,EAAMvC,EAAM,EAEvC+S,IAAK,CAACR,EAAaS,KAASxS,KACxB,IACI,OAAO+R,EAAYoS,aAAanR,GAAOR,MAAUxS,EAC7D,CACQ,MAAOsG,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACvC,GAEIuM,SAAU3F,MAAO6E,EAAaS,KAASxS,KACnC,IACI,aAAa+R,EAAYqS,SAASpR,GAAOR,MAAUxS,EAC/D,CACQ,MAAOsG,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACvC,GAEIwM,SAAU5F,MAAO6E,EAAaS,EAAM9P,KAGhC,MAAOX,KAAS2B,GAAQ8O,EAAKa,MAAM,KACnC,IACItP,EADA/C,EAAS+Q,EAAY+R,OAAOpkB,IAAIqC,GAEpC,IAAK,MAAMc,KAAOa,GAAOK,EAAS/C,GAAU,CAACA,EAAQA,EAAO6B,IAC5D,UACU7B,EAAOgD,KAAKD,EAASrB,EACvC,CACQ,MAAO4D,GACHiL,GAAG7R,IAAIqS,GAAaJ,OAAOrL,EACvC,GAEI+E,UAAW,CAAClG,EAAG3F,IAAUA,EACzBuT,UAAW,EAEHsR,SACI1R,QAAU+D,QAGlBpY,EACAyH,IT/CqB,EAAC2Q,EAAIpY,EAAMyH,KACpCiR,GAAUN,EAAIK,GAAQzY,IACtBA,EAAO2D,GAAQyU,EAAIpY,GACZoY,EAAG3D,UAAUzU,EAAM,IAAI4J,WAAWnC,GAAS,CAAEkR,QAAQ,KS6CvDqN,CAAc5N,EAAIpY,EAAMyH,ICjEjC,MACMhG,GAAI,IAAIqO,QAIRmE,GAAMrF,MAAO6E,EAAaS,KAC9B,MAAM+R,QAAEA,EAAO9C,QAAEA,EAAOlQ,GAAEA,GAAOxR,GAAEL,IAAIqS,IACjCyS,OAAEA,EAAM3lB,OAAEA,SAAiB0lB,EAAQE,SAASzR,GAAOR,IACzD,IAAK,MAAMzP,KAAEA,EAAI8J,KAAEA,KAAU2X,EAAQjT,EAAGxO,GAAM8J,GAI9C,OAAOtC,GAAO1L,EAAQ4iB,EAAS,CAAExT,OAAO,GAAQ,EAGlD,IAAeyW,GAAA,CACX3hB,KAhBS,OAiBTmgB,cAAc,EACdvQ,OAAQ,CAACgN,EAAU,UACf,qCAAqCA,kBACzC,YAAM7N,CAAOa,EAAQqC,EAAQ7P,EAAG4S,GAC5B,MAAMrY,IAAEA,GAAQ8R,KACVO,EAAc,IAAIY,EAAOgS,WACzBjlB,EAAIqS,EAAYzR,OAAOR,MAAK,IAAMiS,KACxC,MAAMwS,QAAgB,IAAIxS,EAAY6S,QAUtC,OATA7kB,GAAEqE,IAAI2N,EAAa,CACjBY,SACA4R,UACA9C,QAAS8C,EAAQ9C,QAAQvhB,KAAKqkB,GAC9BhT,GAAIA,GAAG7R,IAAIqS,KAETiD,EAAOmD,aAAae,GAAWzX,KAAMsQ,EAAaiD,EAAOmD,MAAOJ,GAChE/C,EAAOxU,aAAayX,GAAWxW,KAAMsQ,EAAaiD,EAAOxU,MAAOuX,GAChE/C,EAAOK,kBAAkBkE,GAAevE,EAAOK,WAAY0C,GACxDhG,CACV,EAED,gBAAAa,CAAiBzN,EAAGpD,GAChByK,QAAQC,KAAK,oCAAoC1K,2BAKpD,EACDwQ,OACAM,SAAUN,GACV,cAAMO,CAASf,EAAaS,EAAM9P,SAKxBqP,EAAY8S,UAAU,GAAGrS,WAAe,CAC5CsS,IAAK,CAAEpiB,MAAO,CAAEK,KAAM,CAAEL,EAAMK,SAEnC,EACDsI,UAAW,CAAClG,EAAG3F,KACXgN,QAAQqF,IAAI,eAAgBrS,GACrBA,GAEXuT,UAAW,QC3DR,MAAMtF,GAAW,IAAI/I,IAGfqgB,GAAU,IAAIrgB,IAGdsgB,GAAY,GAGZC,GAAW,GAGXlT,GAAc,IAAIxR,MAAM,IAAImE,IAAO,CAC5C,GAAAhF,CAAIkE,EAAKkI,GACL,IAAKlI,EAAIK,IAAI6H,GAAK,CACd,MAAO/I,KAAS2f,GAAQ5W,EAAGuH,MAAM,KAC3BtB,EAActE,GAAS/N,IAAIqD,GAC3BwI,EAAM,iCAAiCgI,KAAKmP,GAC5CA,EAAKtL,KAAK,KACVrF,EAAYY,UAAU+P,GAC5B9e,EAAIQ,IAAI0H,EAAI,CACRP,MACAoH,OAAQ1C,OAAgC1E,GACxCuG,OAAQC,EAAYD,OAAO5R,KAAK6R,IAEhD,CACQ,MAAMxG,IAAEA,EAAGoH,OAAEA,EAAMb,OAAEA,GAAWlO,EAAIlE,IAAIoM,GACxC,MAAO,CAACkJ,EAAQ+C,IACZpF,EAAO7S,MAAM6S,IACToS,GAAQ3gB,IAAI0H,EAAIkJ,GACTlD,EAAOa,EAAQqC,EAAQzJ,EAAKwM,KAE9C,IAIC7J,GAAY6D,IACd,IAAK,MAAMhP,IAAQ,GAAG0L,OAAOsD,EAAYhP,MACrC0K,GAASrJ,IAAIrB,EAAMgP,GACnBiT,GAAUhmB,KAAK,gBAAgB+D,OAC/BkiB,GAASjmB,KAAK,GAAG+D,KACzB,EAUA,IAAK,MAAMgP,IAAe,CAACW,GAAOgN,GAAamC,GAASoB,GAAgBS,GAASgB,IAC7ExW,GAAS6D,GCnDb,MAAM6H,MAAEA,IAAUnS,KAILyd,GAAsB,CAAClQ,EAAQmQ,EAAY,kBACpD,IAAIpiB,SAAciS,EAKlB,MAJa,WAATjS,GAAqB,qBAAqBwQ,KAAKyB,GAC/CjS,EAAOuF,OAAOmL,GAEduB,EAASmQ,EACN,CAACjR,GAAYc,GAASjS,EAAK,EAGzBqiB,GAAgB,CAACpQ,EAAQmQ,EAAW/jB,EAAU,CAAA,KACvD,MAAOikB,EAAUtiB,GAAQmiB,GAAoBlQ,EAAQmQ,GAarD,MAZa,SAATpiB,EACA3B,EAAUZ,EAAM6kB,GAAUC,OACV,SAATviB,EACP3B,EAAUZ,EAAM6kB,GAAUxK,OAAO/a,KAAK8a,IACtB,WAAT7X,EACP3B,EAAUmkB,GAAYvQ,GACN,WAATjS,GAAqBiS,EAC5B5T,EAAU4T,EACM,QAATjS,GAAqC,iBAAZ3B,IAChCA,EAAUmkB,GAAYnkB,IAGnB,CAACA,EADR4T,EAASqQ,EACe,EAGtBE,GAAcvQ,IAChB,IACI,OAAO4E,GAAM5E,EACrB,CAEI,MAAO7P,GACH,OAAOyV,GAAK5F,EACpB,GAeawQ,GAAa,CAAC1Z,EAAIkJ,EAAQmQ,EAAW/jB,EAAU,CAAA,KACpD4T,KAGC5T,EAAS4T,GAAUoQ,GAAcpQ,EAAQmQ,EAAW/jB,IAGlDa,GAAQb,GAAStB,MAAKsB,GAAW2Q,GAAYjG,GAAI1K,EAAS4T,MAQxDyQ,GAAe,CAAC1iB,EAAM4c,EAAU,KACzC,GAAG5c,KAAQ4c,IAAUnM,QAAQ,KAAM,IC1ExB,SAAAkS,GAAU5hB,EAAWrC,MAClC,OAAOoH,OAAO/E,GAAU0P,QACtB,sCACA,CAACrO,EAAGwgB,EAASrW,EAAIvN,IACfA,IAASuN,EACP,GAAGqW,GAAW,cAAc5jB,KAC5BoD,GAGR,CCPA,MAAMygB,GAAY,YACZC,GAAW,WAEJrT,GAAO,CAChB,OAAOoT,KACP,OAAOA,UACP,OAAOC,KACP,OAAOA,WAGEC,GAAK,CACd,WACA,UACA,KAAKF,KACL,KAAKA,UACL,KAAKC,KACL,KAAKA,WASF,SAASE,GAAMC,EAAUjU,GAC5B,MAAMQ,IAAEA,EAAGM,SAAEA,GAAapF,GAAS/N,IAAI+B,KAAKsB,MAC5C,MAAO,IACAijB,EACHzT,IAAKA,EAAIrS,KAAKuB,KAAMsQ,GACpBc,SAAUA,EAAS3S,KAAKuB,KAAMsQ,GAEtC,CAWO,MAAMkU,GAAY,CAACtT,EAAQqT,EAAUzgB,EAAKogB,EAASxQ,EAAQC,KAC9D,GAAID,GAAUC,EAAO,CACjB,MAAM8Q,EAAUH,GAAM7lB,KAAKyS,EAAQqT,GAC7BjkB,EAAO4jB,EAAU,WAAa,MAC9BjW,EAASiD,EAAO5Q,GACtB4Q,EAAO5Q,GAAQ4jB,EACXzY,eAAgB6E,EAAaS,KAASxS,GAC9BmV,SAAcA,EAAOnR,KAAKvC,KAAMykB,EAAQnU,GAAcxM,GAC1D,MAAM1G,QAAe6Q,EAAO1L,KACxBvC,KACAsQ,EACAS,KACGxS,GAGP,OADIoV,SAAaA,EAAMpR,KAAKvC,KAAMykB,EAAQnU,GAAcxM,GACjD1G,CACV,EACD,SAAUkT,EAAaS,KAASxS,GACxBmV,GAAQA,EAAOnR,KAAKvC,KAAMykB,EAAQnU,GAAcxM,GACpD,MAAM1G,EAAS6Q,EAAO1L,KAAKvC,KAAMsQ,EAAaS,KAASxS,GAEvD,OADIoV,GAAOA,EAAMpR,KAAKvC,KAAMykB,EAAQnU,GAAcxM,GAC3C1G,CACvB,CAEA,GC9De,IAAAsnB,GAAA,MACX,WAAArkB,CAAYiQ,EAAaqU,EAAQ,IAC7B,MAAMhV,KAAEA,EAAIsD,OAAEA,GAAW0R,EACzB3kB,KAAKsQ,YAAcA,EACnBtQ,KAAK4kB,SAAWjV,GAAMiV,SAEtB,IAAK,MAAMxjB,KAAOyjB,GAAQxd,MAAM,GAC5BrH,KAAKoB,GAAO6R,IAAS7R,GACzB,IAAK,MAAMA,KAAO0jB,GACd9kB,KAAKoB,GAAO6R,IAAS7R,EACjC,CACI,MAAA+F,GACI,MAAMwd,EAAQ,CAAE,EAEhB,IAAK,MAAMvjB,KAAOyjB,GAAQxd,MAAM,GACxBrH,KAAKoB,KAAMujB,EAAMvjB,GAAO6iB,GAAejkB,KAAKoB,KAGpD,IAAK,MAAMA,KAAO0jB,GACV9kB,KAAKoB,KAAMujB,EAAMvjB,GAAOmQ,GAAOvR,KAAKoB,OAE5C,OAAOujB,CACf,GCXA,IAAeI,GAAA,IAAIxmB,IAOf,SAAiBuL,EAAKnK,GAClB,GAAIpB,EAAKuC,OAAQ,CACb,MAAOQ,EAAM4c,GAAW3f,GACxBoB,EAAUX,GAAO,CAAE,EAAEW,GAAW,CAAE2B,OAAM4c,aAC3B5c,OAAM3B,EAAQ2B,KAAOA,EAC9C,CAKQ,MAAQiS,GAAWkQ,GAAoB9jB,EAAQ4T,OAAQ5T,EAAQ+jB,WAGzDzQ,EzB/BC,KAAI1U,IAAS,IAAIsL,GAAOmF,IAAI4R,gBAAgB,IAAI7B,KAAK,CAAC,gsxCAA+lyChN,QAAQlD,GAAGC,KAAQ,CAACxN,KAAK,+BAAgC/C,GyB+BtsyCwmB,CAAQ,CAAEC,cADHrlB,GAASqlB,eAAiBrlB,GAASslB,kBAEnDpa,YAAEA,GAAgBoI,EAClBiS,EAASllB,gBAAgBmlB,GAEzBhiB,EAAOnE,GACTiU,EAAOtI,MACP,CAAEuJ,YAAUC,eAGViR,EAAWnlB,QAAQoD,gBAEzB,IAAIgiB,EAAYtmB,EAAM+K,GACjBsP,OACA/a,MAAK0S,IACF,MAAM4T,EAAQO,EAASllB,KAAKmH,cAAW,EACvC0D,EAAYtI,KAAK0Q,EAAQ,CAAEtT,UAAS4T,SAAQxC,OAAM4T,SAAQ,IAE7DtmB,MAAK,KAEFgnB,EAAY,CAAEhnB,KAAMwP,GAAMA,IAAM,IAoCxC,OAjCA2E,GAAiBS,EAAQ,CACrB9P,KAAM,CAAEpF,MAAOoF,GACfmiB,MAAO,CAAEvnB,MAAOqnB,EAASzhB,SACzBkH,YAAa,CACT9M,MAAO,CAACqN,KAAS6V,IAASoE,EAAUhnB,MAChC,IAAMwM,EAAYtI,KAAK0Q,EAAQ7H,KAAS6V,MAGhD9gB,QAAS,CACLwc,UAAU,EACV4I,cAAc,EACdxnB,MAAOgN,QAAQlG,SAIvBoO,EAAO9H,iBAAiB,WAAWlK,IAC/B,MAAMmK,KAAEA,GAASnK,EACXukB,EAAUpa,aAAgBpE,OAC5Bwe,GAAoB,oBAATpa,KACXnK,EAAMoK,2BACFma,GACAJ,EAAS3kB,OAAO2K,GAChB6H,EAAO9S,QAAQ2I,GAAO7H,EAAO,CACzBK,KAAM,CAAEvD,MAAO,SACf8G,MAAO,CAAE9G,MAAOqN,OAGnBga,EAAS5kB,QAAQyS,GACtC,IAGYiS,GAAQllB,KAAK4kB,WAAW5kB,KAAKsQ,YAAa2C,GAEvCA,CACV,EC9FO,MAACwS,GAAkB,kBAClBC,GAAmB,2BACnBC,GAAsB,2BCSnC,IAAAC,GAAe/Q,IACb,MAAM0C,IAAEA,EAAGtE,OAAEA,GAAW4B,EAAQgR,WAChC,GAAI5S,EAAQ,CACR,IAAIlV,MAAEA,GAAUkV,EAGhB,GAAIlV,EAAO,MAAM,IAAIyZ,YAAYmO,IAEjC,GADA5nB,EAAQwZ,GAAKxZ,OACRA,EAAO,CAER,GAAIwZ,EAAK,MAAM,IAAIC,YAAYkO,IAC/B,GAAK7Q,EAAQiR,kBAER,CACD,MAAMC,UAAEA,EAASC,UAAEA,EAAS1kB,KAAEA,GAASuT,EACjCvU,EAAOgB,GAAQ0kB,EAAUjU,QAAQ,WAAY,IACnDhU,EAAQuU,GAASyT,GACjBhb,QAAQC,KACJ,iCAAiC1K,4CACjCvC,EAElB,MATcA,EAAQ8W,EAAQoR,YAepB,OAJYjX,IAAI4R,gBAAgB,IAAI7B,KAAK,CAACxN,GAAOxT,IAAS,CAAEuD,KAAM,eAK5E,CACM,OAAOvD,CACb,CAEE,GAAIwZ,GAAwB1C,EAAQoR,YAtCjClU,QAAQ,oBAAqB,IAC7BA,QAAQ,qBAAsB,IAC9BF,OAqCD,MAAM,IAAI2F,YAAYiO,GAAgB,EC/B1C,MAMaS,GAAc,CAACC,EAAQC,KAChC,MAAM3pB,EAPM,CAAC0pB,IACb,IAAIE,EAASF,EACb,KAAOE,EAAOC,YAAYD,EAASA,EAAOC,WAC1C,OAAOD,CAAM,EAIAE,CAAQJ,GACrB,OAAO1pB,EAAK+pB,eAAeJ,InDfrB,EAAC5pB,EAAKC,EAAOC,WAAaD,EAAK4X,cAAc7X,GmDeP4N,CAAEgc,EAAc3pB,EAAK,EAG/Dkb,GAAU,IAAIhL,QACd8Z,GAAmB,CACrB,GAAAxoB,GACI,IAAIsB,EAASoY,GAAQ1Z,IAAI+B,MAMzB,OALKT,IACDA,EAAS7C,SAAS8X,cAAc,GAAGxU,KAAKsB,eACxCqW,GAAQhV,IAAI3C,KAAMT,GAClB8b,GAAOrb,OAEJT,CACV,EACD,GAAAoD,CAAIpD,GACsB,iBAAXA,EACPoY,GAAQhV,IAAI3C,KAAMkmB,GAAYlmB,KAAMT,KAEpCoY,GAAQhV,IAAI3C,KAAMT,GAClB8b,GAAOrb,MAEd,GAGC0mB,GAAU,IAAI/Z,QAEPga,GAAe,IAAI1jB,IAwC1B2jB,GAAW,CAAC9iB,EAAKxE,KACnB,MAAMvB,EAAQ+F,GAAK/F,MACnB,OAAOA,EAAQuB,EAASvB,EAAQ,EAAE,EAGzB8oB,GAAa,CAACvlB,EAAM+I,EAAI/J,EAAM4d,EAAS3K,EAAQmQ,EAAWoD,EAAUxlB,KAC7E,IAAKqlB,GAAankB,IAAI6H,GAAK,CACvB,MAAM0c,EAAU,CACZzW,YAAayT,GAAWzjB,EAAMiT,EAAQmQ,GACtCxgB,MAAO1C,KACPwmB,QAASC,GAAS3lB,EAAM4c,IAE5ByI,GAAahkB,IAAI0H,EAAI0c,GAIhBJ,GAAankB,IAAIlB,IAAOqlB,GAAahkB,IAAIrB,EAAMylB,GAC/CJ,GAAankB,IAAIskB,IAAUH,GAAahkB,IAAImkB,EAASC,EAElE,CACI,OAAOJ,GAAa1oB,IAAIoM,EAAG,EAMlBgR,GAAS5P,MAAO0a,IAGzB,GAAIO,GAAQlkB,IAAI2jB,GAAS,CACrB,MAAM5mB,OAAEA,GAAW4mB,EACf5mB,IAEI4mB,EAAOe,QAAQ,QAASxqB,SAASyqB,KAAK5S,OAAOhV,GAE5C4mB,EAAOxS,MAAMpU,GAE9B,KAGS,CAGD,MACIsmB,YAAYtS,OACRA,EAAM8P,IACNA,EACA/iB,KAAM8mB,EAAE7nB,OACRA,EAAM2e,QACNA,EACA,iBAAoBmJ,GACvB9P,IACDA,EAAGjW,KACHA,GACA6kB,EAGEjC,GAAWtP,GAAOuR,GAElBmB,EAAepJ,GAASngB,MACxBuC,EAAO0jB,GAAa1iB,EAAMgmB,GAChC,IAAIC,EAAcX,GAASrT,EAAQ,KACnC,MAAMlJ,EAAKuc,GAASvD,EAAK,KAAO,GAAG/iB,IAAOinB,IAC1CA,EAAcA,EAAYlgB,MAAM,GAEhC,MAAMyC,EAAM8b,GAAUO,GACtB,GAAIrc,EAAK,CACL,MACMib,EAAU,IADAkC,GAAS3lB,EAAMgmB,GACf,CAAYxd,EAAK,IAC1B8I,GAASuT,EAAQ7kB,GACpB4c,QAASoJ,EACT7b,MAAOyY,EACP3Q,OAAQgU,EACRvC,cAAeqC,GAAItpB,QAEvB2oB,GAAQ/jB,IACJiK,GAAeuZ,EAAQ,UAAW,CAAEpoB,MAAOgnB,IAC3C,CAAAA,QAAEA,IAEN,MAAMyC,EAAaJ,GAAIrpB,MAEvB,YADIypB,GAAYpkB,EAAQokB,GAAYhnB,QAAQukB,EAAQO,OAEhE,CAGQ,MAAMmC,EAAcb,GAASrnB,EAAQ,IAC/BwnB,EAAUF,GAAWvlB,EAAM+I,EAAI/J,EAAMgnB,EAAcC,GAEzDb,GAAQ/jB,IACJiK,GAAeuZ,EAAQ,SAAUM,IACjCM,GAGAU,GAAa9P,GAAQhV,IAAIwjB,EAAQD,GAAYC,EAAQsB,IAGzD,MAAM3gB,EAASyQ,EAAMxY,EAAMwY,GAAK6B,OAAS+M,EAAOF,YAChDc,EAAQ7jB,MAAQ6jB,EAAQ7jB,MAAM7E,MAAK,IAvI3BoN,OAAOic,EAAe5gB,EAAQkgB,EAAS9C,KACnD,MAAM5iB,KAAEA,GAASomB,EACXxW,EAASlF,GAAS/N,IAAIqD,GAExB4P,EAAOuQ,cACP1W,QAAQC,KAAK,OAAO1J,iCACxB,MAAOgP,EAAaoB,SAAiBxP,GAAI,CACrCwkB,GAAQzoB,IAAIypB,GAAepX,YAC3BxJ,IAEJ,IACImN,GAAkB3S,EAAM4P,EAAQZ,EAAawD,IAC7C5C,EAAOC,iBAAiBb,EAAa,aAAc,CAC/C9Q,SACAwD,aACAgkB,UACAU,gBACA9T,WAAYE,GACZ1Q,QAASI,IAEbwP,GAAS0U,EAAepmB,EAAM,SAG9BsL,GAAelQ,SAAU,gBAAiB,CACtC6oB,cAAc,EACdtnB,IAAK,IAAMypB,IAEf,MAAMC,EAAO3U,GAASvU,KAAK,KAAMipB,EAAepmB,EAAM,QACtD,IAAIlE,EAAS8T,EAAOgT,EAAU,WAAa,OAAO5T,EAAaoB,GAG/D,OAFIwS,IAAS9mB,QAAeA,GAC5BuqB,IACOvqB,CACf,CAAc,eACCV,SAASgrB,aACxB,GAsGYE,CAAQzB,EAAQrf,EAAQigB,EAAQC,QAAS9C,IAErD,GCpLab,GAAM,IAAIvkB,MAAMgK,GAAO,MAAO,CACvC7K,IAAK,CAACyF,EAAGpD,IAAS,IAAIL,QAAQ4nB,gBAAgBxpB,MAC1C,IAAMypB,GAAiBxnB,OAMzBwnB,GAAmBrc,MAAOrK,IAC5B,GAAIulB,GAAankB,IAAIpB,GAAM,CACvB,MAAMkP,YAAEA,EAAWpN,MAAEA,GAAUyjB,GAAa1oB,IAAImD,GAChD,aAAcc,GAAI,CAACoO,EAAapN,KAAS,EACjD,CAEI,MAAM6kB,EAAYpB,GAAahlB,KACzB,+BAA+B,IAAIglB,GAAa1kB,QAC3CE,KAAK7D,GAAM,IAAIA,OACfqX,KAAK,SACV,0CAEN,MAAM,IAAI3O,MAAM,oBAAoB5F,qBAAuB2mB,IAAY,EAG9Dlb,GAAWpB,MAAOxK,IAC3B,MAAMK,KAAEA,EAAIyM,cAAEA,GAAkB9M,EAChC,GAAKuiB,GAAS1iB,OACd,IAAK,IAAIR,KAAEA,EAAIvC,MAAEA,EAAOiqB,aAAcC,KAAQrrB,EAC1C,QAAQ4mB,GAASrhB,KAAKjE,GAAM,WAAWA,IAAIoD,OAASqU,KAAK,WACzD5H,GACD,CACCzN,EAAOA,EAAK+G,MAAM,IAAK/F,EAAKR,OAAS,IACrC,MAAMwP,QAAoBwX,GACtBG,EAAGnT,aAAa,GAAGxU,UAAeA,GAEtB0L,GAAS/N,IAAIqC,GACrB+Q,SAASf,EAAavS,EAAOkD,EAC7C,GAOainB,GAAmBzrB,IAC5B,GAAK+mB,GAAS1iB,OACd,IAAK,IAAIR,KAAEA,EAAM0nB,aAAcC,KAAQrrB,EACnC,SAAS4mB,GACJrhB,KAAKjE,GAAM,uBAAuBA,QAClCyX,KAAK,WACVlZ,GACD,CACC,MAAMY,EAAIiD,EAAK4W,YAAY,KACrB5V,EAAOhB,EAAK+G,MAAMhK,EAAI,GACf,QAATiE,IACA2mB,EAAG9c,iBAAiB7J,EAAMuL,IAEtB,aAAcob,IAAOA,EAAGE,WACxBF,EAAGE,UAAW,EAEd9E,GAAI/iB,EAAK+G,MAAM,EAAGhK,IAAIgB,MAAK,KACvB4pB,EAAGE,UAAW,CAAK,KAIvC,GCpEMnB,GAAUjC,KCaHqD,GAAmB,GAEnBC,GAAiB,IAAIplB,IAY5BqlB,GAAQ,IAAIrlB,IACZslB,GAAW,IAAItlB,IAORulB,GAAmB/c,MAAOoH,IACnC,IAAK,MAAM4V,KAAYL,GACnB,GAAIvV,EAAK6V,QAAQD,GAAW,CACxB,MAAMnnB,EAAOgnB,GAAMrqB,IAAIwqB,GACjB1B,EAAU/a,GAAS/N,IAAIqD,IACvBd,QAAEA,GAAY+nB,GAAStqB,IAAIqD,IAC3B3B,QAAEA,EAAOgpB,MAAEA,GAAU5B,EAE3B,GAAI4B,EAAMnmB,IAAIqQ,GAAO,OACrB8V,EAAM/Z,IAAIiE,GAEV,IAAK,MAAO4V,EAAUpmB,KAAagmB,GAC3BxV,EAAK6V,QAAQD,UAAiBpmB,EAASwQ,GAG/C,MACIvC,YAAawW,EAAOpD,UACpBA,EAASnQ,OACTA,EAAM2K,QACNA,EAAOmF,IACPA,EAAGljB,QACHA,EAAOwkB,MACPA,GACAhlB,EAEJ,IAAIkF,EACJ,IACI,MAAMoO,EAAS2S,GAAU/S,GACzB,GAAII,EAAQ,CACR,IAAI2V,EAAI1K,EACJpU,EAAM4Z,EACNmF,EAAMhW,EAAKiC,aAAa,WAAavB,GAAU,CAAE,EACrD,IAAKqV,IAAMC,EAAK,CACZ,MAAO9iB,EAAGI,GAAKwd,GAAckF,EAAKnF,GAClCmF,QAAY9iB,EACZ+D,EAAM3D,EACNyiB,EAAIC,EAAI3K,SAAW2K,EAAIvY,YACnBsY,GAAK,UAAU9W,KAAK8W,KACpBA,EAAI,IAAI5Z,IAAI4Z,EAAG9e,GAAKmF,KAChD,CACoB,MAAM8V,EAAU+D,GAAGvmB,KAAK,IAAI4iB,GAAK,KAAMR,GAAQ1R,EAAQ,IAChDL,GAASC,EAAMvR,GAClBoiB,UAAW5Z,EACXoU,QAAS0K,EACTtnB,KAAMwlB,EACNiC,OAAQznB,EACRiS,OAAQsV,EACRpd,OAAQmJ,GAAO/B,GACfmS,cAAenS,EAAKiC,aAAa,oBAErClI,GAAeiG,EAAM,UAAW,CAAE9U,MAAOgnB,IACzCvkB,EAAQ,CAAEc,OAAMyjB,YAChB,MAAMyC,EAAa3U,EAAKiC,aAAa,QAErC,YADI0S,GAAYpkB,EAAQokB,GAAYhnB,QAAQukB,EAAQO,OAExE,CACA,CAEY,MAAO0D,GACHnkB,EAAQmkB,CACxB,CAEY,MAAM1oB,EAAO0jB,GAAa8C,EAAS5I,GAC7B7T,EAAKgZ,GAAO,GAAG/iB,IAAOiT,EAAS,IAAIA,IAAW,MAC5CjD,YAAaD,EAAQ2W,QAASnd,GAAWgd,GAC7CvlB,EACA+I,EACA/J,EACA4d,EACA3K,EACAmQ,EACAoD,GAGExW,QAAoBD,EAEpBa,EAASpI,GAAOmgB,GAAgBhrB,IAAI6oB,IAEpCoC,EAAO,IAAI/D,GAAK7U,EAAaqU,GAE7BqC,EAAU,YAAoBzoB,GAChC,OAAOsL,EAAOnD,MAAMwiB,EAAM3qB,EAC7B,EAEKgmB,EAAW,IACVjR,GACCpC,EACA5P,EACA6nB,gBAAgB7F,GAAQrlB,IAAIqC,IAC5BgQ,GAEJ0W,WAGJ/S,GAAkB6S,EAAS5V,EAAQZ,EAAawD,IAChD5C,EAAOC,iBAAiBb,EAAa,aAAc,CAC/C9Q,SACAwD,aACAgkB,UACAzT,OAAQgR,EAAShR,OACjBmU,cAAepmB,EAAKD,WAAW,KAAO,KAAOwR,EAC7Ce,WAAYE,GACZ1Q,QAASI,IAIb,IAAK,MAAM4lB,IAAU,CAAC,MAAO,YAAa,CACtC,IAsBIC,EAAUC,EAtBV5V,EAAS,GACTC,EAAQ,GAEZ,IAAK,MAAMvS,KAAO0jB,GAAW,CACzB,MAAM/mB,EAAQ4mB,GAAOhV,OAAOvO,GACxBrD,GAASqD,EAAIyV,SAASuS,KAClBhoB,EAAIC,WAAW,cACfqS,EAASnC,GAAOxT,KAEhB4V,EAAQpC,GAAOxT,KAE3C,EAEoB2V,GAAUC,IACVF,GACIvC,EACA,IAAIkY,EAAO/hB,MAAM,KACjBqM,EACAC,GAMR,IAAK,IAAItW,EAAI,EAAGA,EAAIwnB,GAAQ/jB,OAAQzD,IAAK,CACrC,MAAM+D,EAAMyjB,GAAQxnB,GACdU,EAAQ4mB,GAAOhV,OAAOvO,GACxBrD,GAASqD,EAAIyV,SAASuS,KAClBhoB,EAAIC,WAAW,YACfgoB,EAAWtrB,EAEXurB,EAAUvrB,EAEtC,CACgBymB,GAAUtT,EAAQqT,EAAU1R,EAAMuW,EAAOvS,SAAS,SAAUwS,EAAUC,EACtF,CAEYvC,EAAQ7jB,MAAQ6jB,EAAQ7jB,MAAM7E,MAAK,KAC/BmC,EAAQ+jB,GACJ1f,GAAO1E,IAAU0E,EAAOgO,GACrB8R,GAAOhV,MAAM4Z,UAAUhF,EAAU1R,KAExD,CACA,EAMM7G,GAAW,IAAI/I,IASrB,IAAIumB,GAAkB,EAOf,MAsEMC,GAAenoB,IACnBinB,GAAS/lB,IAAIlB,IAAOinB,GAAS5lB,IAAIrB,EAAMrB,QAAQoD,iBAC7CklB,GAAStqB,IAAIqD,GAAMqC,WCnQ1B0kB,eACIA,GAAcqB,OACdA,GAAMD,YACNA,GAAWpG,IACXA,GAAG8B,KACHA,GAAI6B,QACJA,IAEJ2C,IxDtBiB,EAACrpB,EAAMvC,EAAOskB,EAAS/b,cAC1C,MAAM9B,EAAS1B,OAAOsL,IAAI9N,GACpBqoB,EAAQnkB,KAAU6d,EACxB,MAAO,CACLsG,EACEtG,EAAO7d,GACP9G,OAAOkP,eAAeyV,EAAQ7d,EAAQ,CAAEzG,UAASyG,GACnDmkB,EACD,EwDeCiB,CACA,aACA,CACIvB,eAAgBwB,GAChBH,OD8Kc,CAACpoB,EAAM3B,KAEzB,IAAImqB,EAAqB,MAARxoB,EAEjB,GAAIwoB,EACAxoB,EAAO,MAAMkoB,UACZ,GAAIP,GAAgBzmB,IAAIlB,IAAS0K,GAASxJ,IAAIlB,GAC/C,MAAM,IAAI0F,MAAM,iBAAiB1F,0BAErC,IAAK2nB,GAAgBzmB,IAAI7C,GAAS2Q,aAC9B,MAAM,IAAItJ,MAAM,2BAGpBiiB,GAAgBtmB,IAAIrB,EAAM2nB,GAAgBhrB,IAAI0B,EAAQ2Q,cAGtD,MAAMiT,EAAY,CAAC,gBAAgBjiB,OAKnC,GAFAmoB,GAAYnoB,GAERwoB,EAAY,CAEZ,MAAMnF,MAAEA,GAAUhlB,EACZ4pB,EAAU5E,GAAOhV,MAAM4Z,QAC7B5pB,EAAU,IACHA,EACHglB,MAAO,IACAA,EACHhV,KAAM,IACCgV,GAAOhV,KACV,OAAA4Z,CAAQhF,EAAU1R,GACduV,GAAiBxX,OAAOwX,GAAiBlQ,QAAQ5W,GAAO,GACxD2nB,GAAgBlnB,OAAOT,GACvB0K,GAASjK,OAAOT,GAChBinB,GAASxmB,OAAOT,GAChBuR,EAAKuK,SACLmM,IAAUhF,EAClC,KAIQ7nB,SAAS4X,KAAKC,OACVvV,GAAOtC,SAAS8X,cAAc,UAAW,CAAElT,SAEvD,MAEQiiB,EAAUhmB,KAAK,GAAG+D,YAClBkiB,GAASjmB,KAAK,GAAG+D,MAGrB,IAAK,MAAMmnB,KAAYlF,EAAW+E,GAAM3lB,IAAI8lB,EAAUnnB,GACtD8mB,GAAiB7qB,QAAQgmB,GAGzBvX,GAASrJ,IAAIrB,EAAM,CACf3B,QAASX,GAAO,CAAEqkB,IAAK/hB,GAAQ3B,GAC/BgpB,MAAO,IAAIoB,QACX7mB,MAAOjD,QAAQO,YAGdspB,GAAY5B,GAAgBxrB,UACjCH,EAAGgnB,EAAU5N,KAAK,MAAMvT,QAAQomB,GAAiB,EC3O7CiB,YAAaO,GACb3G,IAAK4G,GACL9E,KAAM+E,GACNlD,QAASmD,KAgBjB,IAAKR,GAAa,CACd,MAAMS,EAAK,IAAIC,kBAAkBC,IAC7B,MAAM7B,EAAWlF,GAAU5N,KAAK,KAChC,IAAK,MAAMrU,KAAEA,EAAI/B,OAAEA,EAAMgrB,cAAEA,EAAaC,WAAEA,KAAgBF,EAGtD,GAAa,eAAThpB,EAmBJ,IAAK,MAAMuR,KAAQ2X,EACO,IAAlB3X,EAAK4X,WACLvC,GAAgBrV,GACZ4V,GAAY5V,EAAK6V,QAAQD,GAAWpN,GAAOxI,GAC1CwS,EAAUoD,EAAU5V,GAAM,QAvBvC,CACI,MAAMxV,EAAIktB,EAAcrT,YAAY,KAAO,EAC3C,GAAI7Z,EAAG,CACH,MAAMiC,EAASirB,EAAcljB,MAAM,EAAGhK,GACtC,IAAK,MAAMa,KAAKslB,GACZ,GAAIlkB,IAAWpB,EAAG,CACd,MAAMoD,EAAOipB,EAAcljB,MAAMhK,GACjC,GAAa,QAATiE,EAAgB,CAChB,MAAM2M,EAAS1O,EAAOmrB,aAAaH,GAC7B,MACA,SACNhrB,EAAO,GAAG0O,kBAAuB3M,EAAMuL,GACvE,CAC4B,KAC5B,CAEA,CAEA,CASA,IAIUwY,EAAY,CAACoD,EAAU5V,EAAM8X,KAC3BlC,GAAUlsB,EAAGksB,EAAU5V,GAAMzQ,QAAQiZ,KACzCoN,EAAWL,GAAiBzS,KAAK,QAEzBgV,GAAcnC,GAAiB3V,GACnCtW,EAAGksB,EAAU5V,GAAMzQ,QAAQomB,IACvC,EAIUoC,EAAWnuB,IACb2tB,EAAGQ,QAAQnuB,EAAM,CAAEouB,WAAW,EAAMC,SAAS,EAAMjF,YAAY,IACxDppB,IAGLsuB,aAAEA,GAAiBC,QAAQntB,UACjCmB,GAAOgsB,QAAQntB,UAAW,CACtB,YAAAktB,CAAalsB,GACT,OAAO+rB,EAAQG,EAAaxoB,KAAKvC,KAAMnB,GAC1C,IAILgpB,gBAAe,KACXK,GAAgB0C,EAAQluB,WACxB2oB,EAAU9B,GAAU5N,KAAK,KAAMjZ,UAAU,EAAM,GAGvD","x_google_ignoreList":[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,28,29,30,31,34,46]}