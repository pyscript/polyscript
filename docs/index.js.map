{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/@webreflection/utils/src/with-resolvers.js","../esm/workers.js","../node_modules/reflected-ffi/src/utils/traps.js","../node_modules/reflected-ffi/src/utils/symbol.js","../node_modules/reflected-ffi/src/utils/index.js","../node_modules/reflected-ffi/src/types.js","../node_modules/reflected-ffi/src/utils/global.js","../node_modules/reflected-ffi/src/utils/typed.js","../node_modules/reflected-ffi/src/utils/query.js","../node_modules/reflected-ffi/src/local.js","../node_modules/reflected-ffi/src/utils/heap.js","../node_modules/reflected-ffi/src/utils/events.js","../node_modules/reflected-ffi/src/direct/types.js","../node_modules/reflected-ffi/src/direct/array.js","../node_modules/reflected-ffi/src/utils/text.js","../node_modules/reflected-ffi/src/direct/views.js","../node_modules/reflected-ffi/src/direct/encoder.js","../node_modules/coincident/src/window/constants.js","../node_modules/next-resolver/index.js","../node_modules/coincident/src/transfer.js","../node_modules/@webreflection/utils/src/shared-array-buffer.js","../node_modules/coincident/src/utils.js","../node_modules/coincident/src/sabayon/index.js","../node_modules/coincident/src/sabayon/bid.js","../node_modules/coincident/src/main.js","../esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../esm/interpreter/_io.js","../esm/interpreter/dummy.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/utils.js","../esm/interpreter/_utils.js","../node_modules/reflected-ffi/src/direct/decoder.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/_nativefs.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","//@ts-check\r\n\r\n/**\r\n * @template T\r\n * @typedef {{promise: Promise<T>, resolve: (value: T) => void, reject: (reason?: any) => void}} Resolvers\r\n */\r\n\r\n//@ts-ignore\r\nconst withResolvers = Promise.withResolvers;\r\n\r\n/**\r\n * @template T\r\n * @type {() => Resolvers<T>}\r\n */\r\nexport default withResolvers.bind(Promise);\r\n","import withResolvers from '@webreflection/utils/with-resolvers';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","let i = 0;\r\n\r\n// extras\r\nexport const UNREF = i++;\r\nexport const ASSIGN = i++;\r\nexport const EVALUATE = i++;\r\nexport const GATHER = i++;\r\nexport const QUERY = i++;\r\n\r\n// traps\r\nexport const APPLY = i++;\r\nexport const CONSTRUCT = i++;\r\nexport const DEFINE_PROPERTY = i++;\r\nexport const DELETE_PROPERTY = i++;\r\nexport const GET = i++;\r\nexport const GET_OWN_PROPERTY_DESCRIPTOR = i++;\r\nexport const GET_PROTOTYPE_OF = i++;\r\nexport const HAS = i++;\r\nexport const IS_EXTENSIBLE = i++;\r\nexport const OWN_KEYS = i++;\r\nexport const PREVENT_EXTENSIONS = i++;\r\nexport const SET = i++;\r\nexport const SET_PROTOTYPE_OF = i++;\r\n","/** @type {Map<symbol, string>} */\r\nconst symbols = new Map(\r\n  Reflect.ownKeys(Symbol).map(\r\n    key => [Symbol[key], `@${String(key)}`]\r\n  )\r\n);\r\n\r\n/**\r\n * @param {symbol} value\r\n * @param {string} description\r\n * @returns {string}\r\n */\r\nconst asSymbol = (value, description) => (\r\n  description === void 0 ? '?' :\r\n  (Symbol.keyFor(value) === void 0 ? `!${description}` : `#${description}`)\r\n);\r\n\r\n/**\r\n * Extract the value from a pair of type and value.\r\n * @param {string} name\r\n * @returns {symbol}\r\n */\r\nexport const fromSymbol = name => {\r\n  switch (name[0]) {\r\n    case '@': return Symbol[name.slice(1)];\r\n    case '#': return Symbol.for(name.slice(1));\r\n    case '!': return Symbol(name.slice(1));\r\n    default: return Symbol();\r\n  }\r\n};\r\n\r\n/**\r\n * Create the name of a symbol.\r\n * @param {symbol} value\r\n * @returns {string}\r\n */\r\nexport const toSymbol = value => symbols.get(value) || asSymbol(value, value.description);\r\n","import {\r\n  DIRECT,\r\n  SYMBOL,\r\n} from '../types.js';\r\n\r\nimport { fromSymbol, toSymbol } from './symbol.js';\r\n\r\nexport const defineProperty = Object.defineProperty;\r\n\r\nexport const assign = Object.assign;\r\n\r\nexport const fromArray = Array.from;\r\n\r\nexport const isArray = Array.isArray;\r\n\r\nexport const isView = ArrayBuffer.isView;\r\n\r\n/**\r\n * A type/value pair.\r\n * @typedef {[number, any]} TypeValue\r\n */\r\n\r\n/**\r\n * Create a type/value pair.\r\n * @param {number} type\r\n * @param {any} value\r\n * @returns {TypeValue}\r\n */\r\nexport const tv = (type, value) => [type, value];\r\n\r\nexport const identity = value => value;\r\n\r\nexport const object = {};\r\n\r\n/**\r\n * Create a function that loops through an array and applies a function to each value.\r\n * @param {(value:any, cache?:Map<any, any>) => any} asValue\r\n * @returns\r\n */\r\nexport const loopValues = asValue => (\r\n  /**\r\n   * Loop through an array and apply a function to each value.\r\n   * @param {any[]} arr\r\n   * @param {Map} [cache]\r\n   * @returns\r\n   */\r\n  (arr, cache = new Map) => {\r\n    for (let i = 0, length = arr.length; i < length; i++)\r\n      arr[i] = asValue(arr[i], cache);\r\n    return arr;\r\n  }\r\n);\r\n\r\n/**\r\n * Extract the value from a pair of type and value.\r\n * @param {TypeValue} pair\r\n * @returns {string|symbol}\r\n */\r\nexport const fromKey = ([type, value]) => type === DIRECT ? value : fromSymbol(value);\r\n\r\n/**\r\n * Associate a key with an optionally transformed value.\r\n * @param {string|symbol} value\r\n * @returns {TypeValue}\r\n */\r\nexport const toKey = value => typeof value === 'string' ?\r\n  tv(DIRECT, value) : tv(SYMBOL, toSymbol(value))\r\n;\r\n\r\nconst MAX_ARGS = 0x7FFF;\r\n\r\n/**\r\n * @param {number[]} output\r\n * @param {Uint8Array} value \r\n */\r\nexport const push = (output, value) => {\r\n  for (let $ = output.push, i = 0, length = value.length; i < length; i += MAX_ARGS)\r\n    $.apply(output, value.subarray(i, i + MAX_ARGS));\r\n};\r\n","export const DIRECT           = 0;\r\nexport const REMOTE           = 1 << 0;\r\nexport const OBJECT           = 1 << 1;\r\nexport const ARRAY            = 1 << 2;\r\nexport const FUNCTION         = 1 << 3;\r\nexport const SYMBOL           = 1 << 4;\r\nexport const BIGINT           = 1 << 5;\r\nexport const BUFFER           = 1 << 6;\r\nexport const STRING           = 1 << 7;\r\nexport const ERROR            = (1 << 8) + ~REMOTE;\r\n\r\nexport const VIEW             = BUFFER | ARRAY;\r\nexport const REMOTE_OBJECT    = REMOTE | OBJECT;\r\nexport const REMOTE_ARRAY     = REMOTE | ARRAY;\r\nexport const REMOTE_FUNCTION  = REMOTE | FUNCTION;\r\n","import { object } from './index.js';\r\n\r\nconst { getPrototypeOf } = Object;\r\nconst { construct } = Reflect;\r\nconst { toStringTag } = Symbol;\r\nconst { toString } = object;\r\n\r\nexport const toName = (ref, name = toString.call(ref).slice(8, -1)) =>\r\n  name in globalThis ? name : toName(getPrototypeOf(ref) || object);\r\n\r\nexport const toTag = (ref, name = ref[toStringTag]) =>\r\n  name in globalThis ? name : toTag(construct(getPrototypeOf(ref.constructor),[0]));\r\n","import { toTag } from './global.js';\r\nimport { fromArray } from './index.js';\r\n\r\n/** @typedef {[ArrayBufferLike|number[], number]} BufferDetails */\r\n/** @typedef {[string, BufferDetails, number, number]} ViewDetails */\r\n\r\n/**\r\n * @param {number} length\r\n * @param {number} maxByteLength\r\n * @returns {ArrayBufferLike}\r\n */\r\nconst resizable = (length, maxByteLength) => new ArrayBuffer(length, { maxByteLength });\r\n\r\n/**\r\n * @param {BufferDetails} details \r\n * @param {boolean} direct\r\n * @returns {ArrayBufferLike}\r\n */\r\nexport const fromBuffer = ([value, maxByteLength], direct) => {\r\n  const length = direct ? /** @type {ArrayBufferLike} */ (value).byteLength : /** @type {number[]} */ (value).length;\r\n  if (direct) {\r\n    if (maxByteLength) {\r\n      const buffer = resizable(length, maxByteLength);\r\n      new Uint8Array(buffer).set(new Uint8Array(/** @type {ArrayBufferLike} */ (value)));\r\n      value = buffer;\r\n    }\r\n  }\r\n  else {\r\n    const buffer = maxByteLength ? resizable(length, maxByteLength) : new ArrayBuffer(length);\r\n    new Uint8Array(buffer).set(/** @type {number[]} */ (value));\r\n    value = buffer;\r\n  }\r\n  return /** @type {ArrayBufferLike} */ (value);\r\n};\r\n\r\n/**\r\n * @param {ViewDetails} details\r\n * @param {boolean} direct\r\n */\r\nexport const fromView = ([name, args, byteOffset, length], direct) => {\r\n  const buffer = fromBuffer(args, direct);\r\n  const Class = globalThis[name];\r\n  return length ? new Class(buffer, byteOffset, length) : new Class(buffer, byteOffset);\r\n};\r\n\r\n/**\r\n * @param {ArrayBufferLike} value\r\n * @param {boolean} direct\r\n * @returns {BufferDetails}\r\n */\r\nexport const toBuffer = (value, direct) => [\r\n  direct ? value : fromArray(new Uint8Array(value)),\r\n  //@ts-ignore\r\n  value.resizable ? value.maxByteLength : 0\r\n];\r\n\r\n/**\r\n * @param {ArrayBufferView} value\r\n * @param {boolean} direct\r\n * @returns {ViewDetails}\r\n */\r\nexport const toView = (value, direct) => {\r\n  //@ts-ignore\r\n  const { BYTES_PER_ELEMENT, byteOffset, buffer, length } = value;\r\n  return [\r\n    toTag(value),\r\n    toBuffer(buffer, direct),\r\n    byteOffset,\r\n    length !== ((buffer.byteLength - byteOffset) / BYTES_PER_ELEMENT) ? length : 0,\r\n  ];\r\n};\r\n","const brackets = /\\[('|\")?(.+?)\\1\\]/g;\r\n\r\nconst keys = (target, key) => target?.[key];\r\n\r\n/**\r\n * Parses the given path and returns the value at the given target.\r\n * @param {any} target\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\nexport default (target, path) => path.replace(brackets, '.$2').split('.').reduce(keys, target);\r\n","// import DEBUG from './utils/debug.js';\r\n\r\nimport {\r\n  UNREF,\r\n  ASSIGN,\r\n  EVALUATE,\r\n  GATHER,\r\n  QUERY,\r\n\r\n  APPLY,\r\n  CONSTRUCT,\r\n  DEFINE_PROPERTY,\r\n  DELETE_PROPERTY,\r\n  GET,\r\n  GET_OWN_PROPERTY_DESCRIPTOR,\r\n  GET_PROTOTYPE_OF,\r\n  HAS,\r\n  IS_EXTENSIBLE,\r\n  OWN_KEYS,\r\n  PREVENT_EXTENSIONS,\r\n  SET,\r\n  SET_PROTOTYPE_OF,\r\n} from './utils/traps.js';\r\n\r\nimport {\r\n  DIRECT,\r\n  OBJECT,\r\n  ARRAY,\r\n  FUNCTION,\r\n  REMOTE,\r\n  SYMBOL,\r\n  BIGINT,\r\n  VIEW,\r\n  BUFFER,\r\n\r\n  REMOTE_OBJECT,\r\n  REMOTE_ARRAY,\r\n  REMOTE_FUNCTION,\r\n} from './types.js';\r\n\r\nimport {\r\n  fromSymbol,\r\n  toSymbol,\r\n} from './utils/symbol.js';\r\n\r\nimport {\r\n  toBuffer,\r\n  toView,\r\n} from './utils/typed.js';\r\n\r\nimport {\r\n  assign,\r\n  isArray,\r\n  isView,\r\n  fromKey,\r\n  toKey,\r\n  identity,\r\n  loopValues,\r\n  object,\r\n  tv,\r\n} from './utils/index.js';\r\n\r\nimport query from './utils/query.js';\r\n\r\nimport heap from './utils/heap.js';\r\n\r\nconst {\r\n  apply,\r\n  construct,\r\n  defineProperty,\r\n  deleteProperty,\r\n  get,\r\n  getOwnPropertyDescriptor,\r\n  getPrototypeOf,\r\n  has,\r\n  isExtensible,\r\n  ownKeys,\r\n  preventExtensions,\r\n  set,\r\n  setPrototypeOf,\r\n} = Reflect;\r\n\r\n/**\r\n * @typedef {Object} LocalOptions Optional utilities used to orchestrate local <-> remote communication.\r\n * @property {Function} [reflect=identity] The function used to reflect operations via the remote receiver. Currently only `apply` and `unref` are supported.\r\n * @property {Function} [transform=identity] The function used to transform local values into simpler references that the remote side can understand.\r\n * @property {Function} [remote=identity] The function used to intercept remote invokes *before* these happen. Usable to sync `events` or do other tasks.\r\n * @property {Function} [module] The function used to import modules when remote asks to `import(...)` something.\r\n * @property {boolean} [buffer=false] Optionally allows direct buffer serialization breaking JSON compatibility.\r\n */\r\n\r\n/**\r\n * @param {LocalOptions} options\r\n * @returns\r\n */\r\nexport default ({\r\n  reflect = identity,\r\n  transform = identity,\r\n  remote = identity,\r\n  module = name => import(name),\r\n  buffer = false,\r\n} = object) => {\r\n  // received values arrive via postMessage so are compatible\r\n  // with the structured clone algorithm\r\n  const fromValue = (value, cache = new Map) => {\r\n    if (!isArray(value)) return value;\r\n    const [t, v] = value;\r\n    switch (t) {\r\n      case OBJECT: {\r\n        if (v === null) return globalThis;\r\n        let cached = cache.get(value);\r\n        if (!cached) {\r\n          cached = v;\r\n          cache.set(value, v);\r\n          for (const k in v) v[k] = fromValue(v[k], cache);\r\n        }\r\n        return cached;\r\n      }\r\n      case ARRAY: {\r\n        return cache.get(value) || (\r\n          cache.set(value, v),\r\n          fromValues(v, cache)\r\n        );\r\n      }\r\n      case FUNCTION: {\r\n        let wr = weakRefs.get(v), fn = wr?.deref();\r\n        if (!fn) {\r\n          /* c8 ignore start */\r\n          if (wr) fr.unregister(wr);\r\n          /* c8 ignore stop */\r\n          fn = function (...args) {\r\n            remote.apply(this, args);\r\n\r\n            // values reflected asynchronously are not passed stringified\r\n            // because it makes no sense to use Atomics and SharedArrayBuffer\r\n            // to transfer these ... yet these must reflect the current state\r\n            // on this local side of affairs.\r\n            for (let i = 0, length = args.length; i < length; i++)\r\n              args[i] = toValue(args[i]);\r\n\r\n            const result = reflect(APPLY, v, toValue(this), args);\r\n            /* c8 ignore start */\r\n            return result instanceof Promise ? result.then(fromValue) : fromValue(result);\r\n            /* c8 ignore stop */\r\n          };\r\n          wr = new WeakRef(fn);\r\n          weakRefs.set(v, wr);\r\n          fr.register(fn, v, wr);\r\n        }\r\n        return fn;\r\n      }\r\n      case SYMBOL: return fromSymbol(v);\r\n      default: return (t & REMOTE) ? ref(v) : v;\r\n    }\r\n  };\r\n\r\n  // OBJECT, DIRECT, VIEW, BUFFER, REMOTE_ARRAY, REMOTE_OBJECT, REMOTE_FUNCTION, SYMBOL, BIGINT\r\n  /**\r\n   * Converts values into TypeValue pairs when these\r\n   * are not JSON compatible (symbol, bigint) or\r\n   * local (functions, arrays, objects, globalThis).\r\n   * @param {any} value the current value\r\n   * @returns {any} the value as is or its TypeValue counterpart\r\n   */\r\n  const toValue = value => {\r\n    switch (typeof value) {\r\n      case 'object': {\r\n        if (value === null) break;\r\n        if (value === globalThis) return globalTarget;\r\n        const $ = transform(value);\r\n        return (hasDirect && direct.has($)) ?\r\n          tv(DIRECT, $) : (\r\n          isView($) ?\r\n            tv(VIEW, toView($, buffer)) : (\r\n              $ instanceof ArrayBuffer ?\r\n                tv(BUFFER, toBuffer($, buffer)) :\r\n                tv(isArray($) ? REMOTE_ARRAY : REMOTE_OBJECT, id($))\r\n            )\r\n        );\r\n      }\r\n      case 'function': return tv(REMOTE_FUNCTION, id(transform(value)));\r\n      case 'symbol': return tv(SYMBOL, toSymbol(value));\r\n      case 'bigint': return tv(BIGINT, value.toString());\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const fromValues = loopValues(fromValue);\r\n  const fromKeys = loopValues(fromKey);\r\n  const toKeys = loopValues(toKey);\r\n\r\n  const { clear, id, ref, unref } = heap();\r\n\r\n  const weakRefs = new Map;\r\n  const globalTarget = tv(OBJECT, null);\r\n  const fr = new FinalizationRegistry(v => {\r\n    weakRefs.delete(v);\r\n    reflect(UNREF, v);\r\n  });\r\n\r\n  let hasDirect = false, direct;\r\n\r\n  return {\r\n    /**\r\n     * Alows local references to be passed directly to the remote receiver,\r\n     * either as copy or serliazied values (it depends on the implementation).\r\n     * @template {WeakKey} T\r\n     * @param {T} value\r\n     * @returns {T}\r\n     */\r\n    direct(value) {\r\n      if (!hasDirect) {\r\n        // if (DEBUG) console.debug('DIRECT');\r\n        hasDirect = true;\r\n        direct = new WeakSet;\r\n      }\r\n      direct.add(value);\r\n      return value;\r\n    },\r\n\r\n    /**\r\n     * This callback reflects locally every remote call.\r\n     * It accepts TypeValue pairs but it always returns a string\r\n     * to make it possible to use Atomics and SharedArrayBuffer.\r\n     * @param {number} method\r\n     * @param {number?} uid\r\n     * @param  {...any} args\r\n     * @returns\r\n     */\r\n    reflect(method, uid, ...args) {\r\n      // if (DEBUG) console.debug(method === UNREF ? 'GC' : 'ROUNDTRIP');\r\n      const isGlobal = uid === null;\r\n      const target = isGlobal ? globalThis : ref(uid);\r\n      // the order is by most common use cases\r\n      switch (method) {\r\n        case GET: {\r\n          const key = fromKey(args[0]);\r\n          return toValue(isGlobal && key === 'import' ? module : get(target, key));\r\n        }\r\n        case APPLY: {\r\n          const map = new Map;\r\n          return toValue(apply(target, fromValue(args[0], map), fromValues(args[1], map)));\r\n        }\r\n        case SET: return set(target, fromKey(args[0]), fromValue(args[1]));\r\n        case HAS: return has(target, fromKey(args[0]));\r\n        case OWN_KEYS: return toKeys(ownKeys(target), weakRefs);\r\n        case CONSTRUCT: return toValue(construct(target, fromValues(args[0])));\r\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\r\n          const descriptor = getOwnPropertyDescriptor(target, fromKey(args[0]));\r\n          if (descriptor) {\r\n            for (const k in descriptor)\r\n              descriptor[k] = toValue(descriptor[k]);\r\n          }\r\n          return descriptor;\r\n        }\r\n        case DEFINE_PROPERTY: return defineProperty(target, fromKey(args[0]), fromValue(args[1]));\r\n        case DELETE_PROPERTY: return deleteProperty(target, fromKey(args[0]));\r\n        case GET_PROTOTYPE_OF: return toValue(getPrototypeOf(target));\r\n        case SET_PROTOTYPE_OF: return setPrototypeOf(target, fromValue(args[0]));\r\n        case ASSIGN: {\r\n          assign(target, fromValue(args[0]));\r\n          return;\r\n        }\r\n        case EVALUATE: {\r\n          const body = fromValue(args[0]);\r\n          const fn = Function(`return(${body}).apply(null,arguments)`);\r\n          return toValue(apply(fn, null, fromValues(args[1])));\r\n        }\r\n        case GATHER: {\r\n          args = fromKeys(args[0], weakRefs);\r\n          for (let k, i = 0, length = args.length; i < length; i++) {\r\n            k = args[i];\r\n            args[i] = toValue(typeof k === 'string' ? query(target, k) : target[k]);\r\n          }\r\n          return args;\r\n        }\r\n        case QUERY: return toValue(query(target, args[0]));\r\n        case UNREF: return unref(uid);\r\n        case IS_EXTENSIBLE: return isExtensible(target);\r\n        case PREVENT_EXTENSIONS: return preventExtensions(target);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Terminates the local side of the communication,\r\n     * erasing and unregistering all the cached references.\r\n     */\r\n    terminate() {\r\n      for (const wr of weakRefs.values()) fr.unregister(wr);\r\n      weakRefs.clear();\r\n      clear();\r\n    },\r\n  };\r\n};\r\n","/**\r\n * @template T\r\n * @typedef {Object} Heap\r\n * @property {() => void} clear\r\n * @property {(ref:T) => number} id\r\n * @property {(id:number) => T} ref\r\n * @property {(id:number) => boolean} unref\r\n */\r\n\r\n/**\r\n * Create a heap-like utility to hold references in memory.\r\n * @param {number} [id=0] The initial `id` which is `0` by default.\r\n * @param {Map<number, any>} [ids=new Map] The used map of ids to references.\r\n * @param {Map<any, number>} [refs=new Map] The used map of references to ids.\r\n * @returns {Heap<any>}\r\n */\r\nexport default (id = 0, ids = new Map, refs = new Map) => ({\r\n  clear: () => {\r\n    ids.clear();\r\n    refs.clear();\r\n  },\r\n  id: ref => {\r\n    let uid = refs.get(ref);\r\n    if (uid === void 0) {\r\n      /* c8 ignore next */\r\n      while (ids.has(uid = id++));\r\n      ids.set(uid, ref);\r\n      refs.set(ref, uid);\r\n    }\r\n    return uid;\r\n  },\r\n  ref: id => ids.get(id),\r\n  unref: id => {\r\n    refs.delete(ids.get(id));\r\n    return ids.delete(id);\r\n  },\r\n});\r\n","// This is an optional utility that needs to patch `addEventListener`.\r\n// Its `default` return value can be used as `remote` field when\r\n// the `local({ remote: ... })` is invoked.\r\n\r\nconst { addEventListener } = EventTarget.prototype;\r\nconst eventsHandler = new WeakMap;\r\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\r\n  /**\r\n   * Intercepts `options` with an `invoke` field that could contain\r\n   * `preventDefault`, `stopPropagation` or `stopImmediatePropagation`\r\n   * strings so that when the event will be triggered locally,\r\n   * the remote side can still enforce one of those operations, even if\r\n   * invoked asynchronously (those calls will happen on the local thread).\r\n   * \r\n   * @param {string} type\r\n   * @param {EventListenerOrEventListenerObject?} callback\r\n   * @param  {AddEventListenerOptions & { invoke?: string|string[]} | boolean} options\r\n   * @returns {void}\r\n   */\r\n  value(type, callback, options) {\r\n    //@ts-ignore\r\n    const invoke = options?.invoke;\r\n    if (invoke) {\r\n      let map = eventsHandler.get(this);\r\n      if (!map) eventsHandler.set(this, (map = new Map));\r\n      map.set(type, [].concat(invoke));\r\n      //@ts-ignore\r\n      delete options.invoke;\r\n      console.log(map);\r\n    }\r\n    return addEventListener.apply(this, arguments);\r\n  },\r\n});\r\n\r\n/**\r\n * This utility is used to perform `preventDefault` or `stopPropagation`\r\n * on events that are triggered via functions defined on the remote side.\r\n * It is meant to be passed as `remote`, or as part of `remote` field when\r\n * the `local({ remote: ... })` is invoked, meaning it happens right before\r\n * the *remote* event handler is requested to be called.\r\n * @param {Event} event\r\n */\r\nexport default event => {\r\n  const { currentTarget, target, type } = event;\r\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\r\n  if (methods) for (const method of methods) event[method]();\r\n};\r\n","let i = 0;\r\n\r\nexport const FALSE = i++;\r\nexport const TRUE = i++;\r\n\r\nexport const UNDEFINED = i++;\r\nexport const NULL = i++;\r\n\r\nexport const NUMBER = i++;\r\nexport const UI8 = i++;\r\nexport const NAN = i++;\r\nexport const INFINITY = i++;\r\nexport const N_INFINITY = i++;\r\nexport const ZERO = i++;\r\nexport const N_ZERO = i++;\r\n\r\nexport const BIGINT = i++;\r\nexport const BIGUINT = i++;\r\n\r\nexport const STRING = i++;\r\n\r\nexport const SYMBOL = i++;\r\n\r\nexport const ARRAY = i++;\r\nexport const BUFFER = i++;\r\nexport const DATE = i++;\r\nexport const ERROR = i++;\r\nexport const MAP = i++;\r\nexport const OBJECT = i++;\r\nexport const REGEXP = i++;\r\nexport const SET = i++;\r\nexport const VIEW = i++;\r\n\r\nexport const RECURSION = i++;\r\n","// This is an Array facade for the encoder.\r\n\r\nexport default class Stack {\r\n  /**\r\n   * @param {Stack} self\r\n   * @param {Uint8Array} value\r\n   */\r\n  static push(self, value) {\r\n    self.sync(false);\r\n    self._(value, value.length);\r\n  }\r\n\r\n  /**\r\n   * @param {ArrayBufferLike} buffer\r\n   * @param {number} offset\r\n   */\r\n  constructor(buffer, offset) {\r\n    /** @type {number[]} */\r\n    const output = [];\r\n\r\n    /** @private length */\r\n    this.l = 0;\r\n\r\n    /** @private output */\r\n    this.o = output;\r\n\r\n    /** @private view */\r\n    this.v = new Uint8Array(buffer, offset);\r\n\r\n    /** @type {typeof Array.prototype.push} */\r\n    this.push = output.push.bind(output);\r\n  }\r\n\r\n  /**\r\n   * @readonly\r\n   * @type {number}\r\n   */\r\n  get length() {\r\n    return this.l + this.o.length;\r\n  }\r\n\r\n  /**\r\n   * Sync all entries in the output to the buffer.\r\n   * @param {boolean} last `true` if it's the last sync.\r\n   */\r\n  sync(last) {\r\n    const output = this.o;\r\n    const length = output.length;\r\n    if (length) this._(last ? output : output.splice(0), length);\r\n  }\r\n\r\n  /**\r\n   * Set a value to the buffer\r\n   * @private\r\n   * @param {Uint8Array|number[]} value\r\n   * @param {number} byteLength\r\n   */\r\n  _(value, byteLength) {\r\n    const { buffer, byteOffset } = this.v;\r\n    const offset = this.l;\r\n    this.l += byteLength;\r\n    byteLength += byteOffset + offset;\r\n    if (buffer.byteLength < byteLength)\r\n      /** @type {SharedArrayBuffer} */(buffer).grow(byteLength);\r\n    this.v.set(value, offset);\r\n  }\r\n}\r\n","export const decoder = new TextDecoder;\r\n\r\nexport const encoder = new TextEncoder;\r\n","const buffer = new ArrayBuffer(8);\r\nexport const dv = new DataView(buffer);\r\nexport const u8a8 = new Uint8Array(buffer);\r\n","//@ts-check\r\n\r\nimport {\r\n  FALSE,\r\n  TRUE,\r\n\r\n  UNDEFINED,\r\n  NULL,\r\n\r\n  NUMBER,\r\n  UI8,\r\n  NAN,\r\n  INFINITY,\r\n  N_INFINITY,\r\n  ZERO,\r\n  N_ZERO,\r\n\r\n  BIGINT,\r\n  BIGUINT,\r\n  STRING,\r\n  SYMBOL,\r\n\r\n  ARRAY,\r\n  BUFFER,\r\n  DATE,\r\n  ERROR,\r\n  MAP,\r\n  OBJECT,\r\n  REGEXP,\r\n  SET,\r\n  VIEW,\r\n\r\n  RECURSION,\r\n} from './types.js';\r\n\r\nimport Stack from './array.js';\r\nimport { isArray, isView, push } from '../utils/index.js';\r\nimport { encoder as textEncoder } from '../utils/text.js';\r\nimport { toSymbol } from '../utils/symbol.js';\r\nimport { dv, u8a8 } from './views.js';\r\nimport { toTag } from '../utils/global.js';\r\n\r\n/** @typedef {Map<number, number[]>} Cache */\r\n\r\nconst { isNaN, isFinite, isInteger } = Number;\r\nconst { ownKeys } = Reflect;\r\nconst { is } = Object;\r\n\r\n/**\r\n * @param {any} input\r\n * @param {number[]|Stack} output\r\n * @param {Cache} cache\r\n * @returns {boolean}\r\n */\r\nconst process = (input, output, cache) => {\r\n  const value = cache.get(input);\r\n  const unknown = !value;\r\n  if (unknown) {\r\n    dv.setUint32(0, output.length, true);\r\n    cache.set(input, [u8a8[0], u8a8[1], u8a8[2], u8a8[3]]);\r\n  }\r\n  else\r\n    output.push(RECURSION, value[0], value[1], value[2], value[3]);\r\n  return unknown;\r\n};\r\n\r\n/**\r\n * @param {number[]|Stack} output\r\n * @param {number} type\r\n * @param {number} length\r\n */\r\nconst set = (output, type, length) => {\r\n  dv.setUint32(0, length, true);\r\n  output.push(type, u8a8[0], u8a8[1], u8a8[2], u8a8[3]);\r\n};\r\n\r\n/**\r\n * @param {any} input\r\n * @param {number[]|Stack} output\r\n * @param {Cache} cache\r\n */\r\nconst inflate = (input, output, cache) => {\r\n  switch (typeof input) {\r\n    case 'number': {\r\n      if (input && isFinite(input)) {\r\n        if (isInteger(input) && input < 256 && -1 < input)\r\n          output.push(UI8, input);\r\n        else {\r\n          dv.setFloat64(0, input, true);\r\n          output.push(NUMBER, u8a8[0], u8a8[1], u8a8[2], u8a8[3], u8a8[4], u8a8[5], u8a8[6], u8a8[7]);\r\n        }\r\n      }\r\n      else if (isNaN(input)) output.push(NAN);\r\n      else if (!input) output.push(is(input, 0) ? ZERO : N_ZERO);\r\n      else output.push(input < 0 ? N_INFINITY : INFINITY);\r\n      break;\r\n    }\r\n    case 'object': {\r\n      switch (true) {\r\n        case input === null:\r\n          output.push(NULL);\r\n          break;\r\n        case !process(input, output, cache): break;\r\n        case isArray(input): {\r\n          const length = input.length;\r\n          set(output, ARRAY, length);\r\n          for (let i = 0; i < length; i++)\r\n            inflate(input[i], output, cache);\r\n          break;\r\n        }\r\n        case isView(input): {\r\n          output.push(VIEW);\r\n          inflate(toTag(input), output, cache);\r\n          input = input.buffer;\r\n          if (!process(input, output, cache)) break;\r\n          // fallthrough\r\n        }\r\n        case input instanceof ArrayBuffer: {\r\n          const ui8a = new Uint8Array(input);\r\n          set(output, BUFFER, ui8a.length);\r\n          //@ts-ignore\r\n          pushView(output, ui8a);\r\n          break;\r\n        }\r\n        case input instanceof Date:\r\n          output.push(DATE);\r\n          inflate(input.getTime(), output, cache);\r\n          break;\r\n        case input instanceof Map: {\r\n          set(output, MAP, input.size);\r\n          for (const [key, value] of input) {\r\n            inflate(key, output, cache);\r\n            inflate(value, output, cache);\r\n          }\r\n          break;\r\n        }\r\n        case input instanceof Set: {\r\n          set(output, SET, input.size);\r\n          for (const value of input)\r\n            inflate(value, output, cache);\r\n          break;\r\n        }\r\n        case input instanceof Error:\r\n          output.push(ERROR);\r\n          inflate(input.name, output, cache);\r\n          inflate(input.message, output, cache);\r\n          inflate(input.stack, output, cache);\r\n          break;\r\n        case input instanceof RegExp:\r\n          output.push(REGEXP);\r\n          inflate(input.source, output, cache);\r\n          inflate(input.flags, output, cache);\r\n          break;\r\n        default: {\r\n          if ('toJSON' in input) {\r\n            const json = input.toJSON();\r\n            inflate(json === input ? null : json, output, cache);\r\n          }\r\n          else {\r\n            const keys = ownKeys(input);\r\n            const length = keys.length;\r\n            set(output, OBJECT, length);\r\n            for (let i = 0; i < length; i++) {\r\n              const key = keys[i];\r\n              inflate(key, output, cache);\r\n              inflate(input[key], output, cache);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'string': {\r\n      if (process(input, output, cache)) {\r\n        const encoded = textEncoder.encode(input);\r\n        set(output, STRING, encoded.length);\r\n        //@ts-ignore\r\n        pushView(output, encoded);\r\n      }\r\n      break;\r\n    }\r\n    case 'boolean': {\r\n      output.push(input ? TRUE : FALSE);\r\n      break;\r\n    }\r\n    case 'symbol': {\r\n      output.push(SYMBOL);\r\n      inflate(toSymbol(input), output, cache);\r\n      break;\r\n    }\r\n    case 'bigint': {\r\n      let type = BIGINT;\r\n      if (9223372036854775807n < input) {\r\n        dv.setBigUint64(0, input, true);\r\n        type = BIGUINT;\r\n      }\r\n      else dv.setBigInt64(0, input, true);\r\n      output.push(type, u8a8[0], u8a8[1], u8a8[2], u8a8[3], u8a8[4], u8a8[5], u8a8[6], u8a8[7]);\r\n      break;\r\n    }\r\n    // this covers functions too\r\n    default: {\r\n      output.push(UNDEFINED);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/** @type {typeof push|typeof Stack.push} */\r\nlet pushView = push;\r\n\r\n/**\r\n * @param {any} value\r\n * @returns {number[]}\r\n */\r\nexport const encode = value => {\r\n  const output = [];\r\n  pushView = push;\r\n  inflate(value, output, new Map);\r\n  return output;\r\n};\r\n\r\n/**\r\n * @param {{ byteOffset?: number, Array?: typeof Stack }} [options]\r\n * @returns {(value: any, buffer: ArrayBufferLike) => number}\r\n */\r\nexport const encoder = ({ byteOffset = 0, Array = Stack } = {}) => (value, buffer) => {\r\n  const output = new Array(buffer, byteOffset);\r\n  pushView = Array.push;\r\n  inflate(value, output, new Map);\r\n  const length = output.length;\r\n  output.sync(true);\r\n  return length;\r\n};\r\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = '40980414';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","//@ts-check\r\n\r\nimport withResolvers from '@webreflection/utils/with-resolvers';\r\n\r\n/**\r\n * @template V\r\n * @callback Resolve\r\n * @param {V?} [value]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback Reject\r\n * @param {any?} [error]\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @template V\r\n * @typedef {object} Resolvers\r\n * @prop {Promise<V>} promise\r\n * @prop {Resolve<V>} resolve\r\n * @prop {Reject} reject\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {() => [K, Promise<V>]} Next\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @callback Resolver\r\n * @param {K} uid\r\n * @param {V?} [value]\r\n * @param {any?} [error]\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @typedef {[Next<K,V>, Resolver<K,V>]} NextResolver\r\n */\r\n\r\n/**\r\n * @template K,V\r\n * @param {(id: number) => K} [as]\r\n * @returns\r\n */\r\nexport default (as = (id => /** @type {K} */(id))) => {\r\n  /** @type {Map<K,Resolvers<V>>} */\r\n  const map = new Map;\r\n  let id = 0;\r\n  return /** @type {NextResolver<K,V>} */([\r\n    /** @type {Next<K,V>} */\r\n    () => {\r\n      let uid;\r\n      do { uid = as(id++) }\r\n      while (map.has(uid));\r\n      const wr = /** @type {Resolvers<V>} */(/** @type {unknown} */(withResolvers()));\r\n      map.set(uid, wr);\r\n      return [uid, wr.promise];\r\n    },\r\n    /** @type {Resolver<K,V>} */\r\n    (uid, value, error) => {\r\n      const wr = map.get(uid);\r\n      map.delete(uid);\r\n      if (error) wr?.reject(error);\r\n      else wr?.resolve(value);\r\n    },\r\n  ]);\r\n};\r\n","//@ts-check\r\n\r\n/** @type {ArrayBuffer[]} */\r\nconst nothing = [];\r\n\r\n/** @type {WeakSet<ArrayBuffer[]>} */\r\nconst buffers = new WeakSet;\r\n\r\n/**\r\n * @param {boolean} check\r\n * @param {any[]} args\r\n * @returns\r\n */\r\nexport const get = (check, args) => {\r\n  let transfer = nothing;\r\n  if (check && buffers.has(args.at(-1) || nothing)) {\r\n    transfer = args.pop();\r\n    buffers.delete(transfer);\r\n  }\r\n  return transfer;\r\n};\r\n\r\n/**\r\n * @param  {...ArrayBuffer} args\r\n * @returns\r\n */\r\nexport const set = (...args) => {\r\n  buffers.add(args);\r\n  return args;\r\n};\r\n","//@ts-check\r\n\r\nlet { SharedArrayBuffer: SAB } = globalThis, native = true;\r\n\r\ntry {\r\n  //@ts-ignore due valid options not recognized\r\n  new SAB(4, { maxByteLength: 8 });\r\n}\r\ncatch (_) {\r\n  native = false;\r\n  SAB = /** @type {SharedArrayBufferConstructor} */(\r\n    /** @type {unknown} */(\r\n      class SharedArrayBuffer extends ArrayBuffer {\r\n        get growable() {\r\n          //@ts-ignore due valid property not recognized\r\n          return super.resizable;\r\n        }\r\n        /** @param {number} newLength */\r\n        grow(newLength) {\r\n          //@ts-ignore due valid method not recognized\r\n          super.resize(newLength);\r\n        }\r\n      }\r\n    )\r\n  );\r\n}\r\n\r\nexport { SAB as SharedArrayBuffer, native };\r\n","import { native } from '@webreflection/utils/shared-array-buffer';\r\n\r\nconst {\r\n  assign,\r\n  create,\r\n} = Object;\r\n\r\n/* c8 ignore start */\r\nconst ID = `coincident-${native ? crypto.randomUUID() : Math.random().toString(36).substring(2)}`;\r\n/* c8 ignore end */\r\n\r\nconst byteOffset = 2 * Int32Array.BYTES_PER_ELEMENT;\r\nconst minByteLength = 0x7FFF; // throws at 0xFFFF via .apply(...)\r\nconst maxByteLength = 0x1000000;\r\n\r\nconst defaults = {\r\n  // ⚠️ mandatory: first int32 to notify, second one to store the written length\r\n  byteOffset,\r\n};\r\n\r\nconst result = async (data, proxied, transform) => {\r\n  try {\r\n    const result = await proxied[data[1]].apply(null, data[2]);\r\n    data[1] = transform ? transform(result) : result;\r\n    data[2] = null;\r\n  }\r\n  catch (error) { data[2] = error }\r\n};\r\n\r\nconst set = (proxied, name, callback) => {\r\n  const ok = name !== 'then';\r\n  if (ok) proxied[name] = callback;\r\n  return ok;\r\n};\r\n\r\n/** @param {Event} event */\r\nconst stop = event => {\r\n  event.stopImmediatePropagation();\r\n  event.preventDefault();\r\n};\r\n\r\nexport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  maxByteLength,\r\n  minByteLength,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n};\r\n","import BROADCAST_CHANNEL_UID from './bid.js';\r\n\r\nimport { SharedArrayBuffer as SAB, native } from '@webreflection/utils/shared-array-buffer';\r\nimport withResolvers from '@webreflection/utils/with-resolvers';\r\nimport nextResolver from 'next-resolver';\r\nimport { ID } from '../utils.js';\r\n\r\nconst { isArray } = Array;\r\nconst { isView } = ArrayBuffer;\r\nconst { defineProperty, values } = Object;\r\n\r\nconst [next, resolve] = nextResolver();\r\nlet [bootstrap, promise] = next();\r\n\r\n/**\r\n * @callback sabayon\r\n * @param {string|URL} [serviceWorkerURL] - The URL of the service worker to register on the main thread.\r\n * @returns {Promise<void>} - A promise that resolves when the polyfill is ready.\r\n */\r\n\r\nlet register = /** @type {sabayon} */(() => promise);\r\n\r\nlet {\r\n  Atomics,\r\n  MessageChannel,\r\n  SharedArrayBuffer,\r\n  Worker,\r\n  postMessage,\r\n} = globalThis;\r\n\r\nif (native) resolve(bootstrap);\r\nelse {\r\n  SharedArrayBuffer = SAB;\r\n\r\n  const views = new Map;\r\n\r\n  const addListener = (target, ...args) => {\r\n    target.addEventListener(...args);\r\n  };\r\n\r\n  const extend = (target, literal) => {\r\n    for (const key in literal) {\r\n      literal[key] = {\r\n        value: literal[key],\r\n        configurable: true,\r\n        writable: true,\r\n      };\r\n    }\r\n    return Object.create(target, literal);\r\n  };\r\n\r\n  // Web Worker\r\n  if ('importScripts' in globalThis) {\r\n    const intercept = (set, data, view) => {\r\n      if (view && typeof view === 'object' && !set.has(view)) {\r\n        set.add(view);\r\n        if (isView(view)) {\r\n          // avoid DataView or other views to be considered for waiting\r\n          if (view instanceof Int32Array && view.buffer instanceof SharedArrayBuffer) {\r\n            const id = ids++;\r\n            views.set(view, id);\r\n            return [UID, id, view, data];\r\n          }\r\n        }\r\n        else {\r\n          const array = isArray(view) ? view : values(view);\r\n          for (let i = 0; i < array.length; i++) {\r\n            const details = intercept(set, data, array[i]);\r\n            if (details) return details;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const interceptor = method => function postMessage(data, ...rest) {\r\n      if (ready) {\r\n        const details = intercept(new Set, data, data);\r\n        method.call(this, (details || data), ...rest);\r\n      }\r\n      else {\r\n        promise.then(() => postMessage(data, ...rest));\r\n      }\r\n    };\r\n\r\n    postMessage = interceptor(postMessage);\r\n\r\n    const { prototype } = globalThis.MessagePort;\r\n    prototype.postMessage = interceptor(prototype.postMessage);\r\n\r\n    addListener(\r\n      globalThis,\r\n      'message',\r\n      event => {\r\n        let { data } = event;\r\n        // console.log('sabayon', data);\r\n        if (isArray(data) && typeof data.at(1) === 'string')\r\n          event.stopImmediatePropagation();\r\n        resolve(bootstrap, data);\r\n      },\r\n      { once: true }\r\n    );\r\n\r\n    // <Atomics Patch>\r\n    const { wait } = Atomics;\r\n    const { parse } = JSON;\r\n\r\n    const Async = value => ({ value, async: true });\r\n\r\n    const Request = (view, sync) => {\r\n      const xhr = new XMLHttpRequest;\r\n      xhr.open('POST', `${SW}?sabayon`, sync);\r\n      xhr.send(`[\"${UID}\",${views.get(view)}]`);\r\n      return xhr;\r\n    };\r\n\r\n    const Response = (view, xhr) => {\r\n      view.set(parse(xhr.responseText));\r\n      views.delete(view);\r\n      return 'ok';\r\n    };\r\n\r\n    Atomics = extend(Atomics, {\r\n      wait: (view, ..._) => views.has(view) ?\r\n        Response(view, Request(view, false)) :\r\n        wait(view, ..._)\r\n      ,\r\n      waitAsync: (view, ..._) => {\r\n        if (views.has(view)) {\r\n          const { promise, resolve } = withResolvers();\r\n          const xhr = Request(view, true);\r\n          xhr.onloadend = () => resolve(Response(view, xhr));\r\n          return Async(promise);\r\n        }\r\n        return wait(view, ..._);\r\n      },\r\n    });\r\n\r\n    let UID, SW, ready = false, ids = Math.random();\r\n\r\n    promise = promise.then(data => {\r\n      [UID, SW] = data;\r\n      ready = true;\r\n    });\r\n  }\r\n  // Main\r\n  else {\r\n    const UID = ID;\r\n\r\n    const bc = new BroadcastChannel(BROADCAST_CHANNEL_UID);\r\n    bc.onmessage = async event => {\r\n      const [swid, wid, vid] = event.data;\r\n      if (wid === UID) {\r\n        for (const [view, [id, wr]] of views) {\r\n          if (id === vid) {\r\n            await wr.promise;\r\n            views.delete(view);\r\n            let length = view.length;\r\n            while (length-- && !view[length]);\r\n            bc.postMessage([swid, view.slice(0, length + 1)]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const interceptData = event => {\r\n      let { data } = event;\r\n      if (isArray(data) && data.at(0) === UID) {\r\n        const [_, id, view, value] = data;\r\n        views.set(view, [id, withResolvers()]);\r\n        defineProperty(event, 'data', { value });\r\n      }\r\n    };\r\n\r\n    MessageChannel = class extends MessageChannel {\r\n      constructor() {\r\n        super();\r\n        addListener(this.port1, 'message', interceptData);\r\n        addListener(this.port2, 'message', interceptData);\r\n      }\r\n    };\r\n\r\n    Worker = class extends Worker {\r\n      /**\r\n       * @param {string | URL} scriptURL \r\n       * @param {WorkerOptions} options \r\n       */\r\n      constructor(scriptURL, options) {\r\n        super(scriptURL, options);\r\n        if (SW) {\r\n          super.postMessage([UID, SW]);\r\n          addListener(this, 'message', interceptData);\r\n        }\r\n      }\r\n    };\r\n\r\n    const { notify } = Atomics;\r\n    Atomics = Object.create(Atomics, {\r\n      notify: {\r\n        configurable: true,\r\n        writable: true,\r\n        value: (view, ..._) => {\r\n          const details = views.get(view);\r\n          if (details) {\r\n            details[1].resolve();\r\n            return 0;\r\n          }\r\n          return notify(view, ..._);\r\n        },\r\n      },\r\n    });\r\n\r\n    let SW = '';\r\n    let serviceWorker = null;\r\n\r\n    /**\r\n     * @param {ServiceWorkerContainer} swc\r\n     * @param {RegistrationOptions} [options]\r\n     */\r\n    const activate = (swc, options) => {\r\n      let w, c = true;\r\n      swc.getRegistration(SW)\r\n        .then(r => (r ?? swc.register(SW, options)))\r\n        .then(function ready(r) {\r\n          const { controller } = swc;\r\n          c = c && !!controller;\r\n          w = (r.installing || r.waiting || r.active);\r\n          if (w.state === 'activated') {\r\n            if (c) {\r\n              // allow ServiceWorker swap on different URL\r\n              if (controller.scriptURL === SW)\r\n                return resolve(bootstrap);\r\n              r.unregister();\r\n            }\r\n            location.reload();\r\n          }\r\n          else {\r\n            addListener(w, 'statechange', () => ready(r), { once: true });\r\n          }\r\n        });\r\n    };\r\n\r\n    register = /** @type {sabayon} */((serviceWorkerURL, options) => {\r\n      if (!serviceWorker) {\r\n        // resolve the fully qualified URL for Blob based workers\r\n        SW = new URL(serviceWorkerURL, location.href).href;\r\n        activate(navigator.serviceWorker, options);\r\n        serviceWorker = promise;\r\n      }\r\n      return serviceWorker;\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  Atomics,\r\n  MessageChannel,\r\n  SharedArrayBuffer,\r\n  Worker,\r\n  postMessage,\r\n  register,\r\n};\r\n","// ⚠️ AUTOMATED ⚠️\r\nexport default 'dc78209b-186c-4f83-80e9-406becb7d9f3';\r\n","import { MAIN, WORKER } from './window/constants.js';\r\n\r\nimport nextResolver from 'next-resolver';\r\n\r\nimport { encoder } from 'reflected-ffi/encoder';\r\n\r\nimport * as transferred from './transfer.js';\r\n\r\nimport * as sabayon from './sabayon/index.js';\r\n\r\nimport {\r\n  ID,\r\n  assign,\r\n  create,\r\n  defaults,\r\n  native,\r\n  result,\r\n  set,\r\n  stop,\r\n} from './utils.js';\r\n\r\n// @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n// Note: InstallTrigger is deprecated so once it's gone I do hope\r\n//       this workaround would be gone too!\r\nconst UID = 'InstallTrigger' in globalThis ? ID : '';\r\n\r\nconst Number = value => value;\r\n\r\nconst info = name => {\r\n  if (name === MAIN) return 'main';\r\n  if (name === WORKER) return 'worker';\r\n  return name;\r\n};\r\n\r\nexport default options => {\r\n  const transform = options?.transform;\r\n  const encode = (options?.encoder || encoder)(defaults);\r\n  const checkTransferred = options?.transfer !== false;\r\n\r\n  /** @type {Worker & { proxy: Record<string, function> }} */\r\n  class Worker extends sabayon.Worker {\r\n    constructor(url, options) {\r\n      const serviceWorker = !native && options?.serviceWorker;\r\n      const { notify } = serviceWorker ? sabayon.Atomics : Atomics;\r\n      const { port1: channel, port2 } = new (\r\n        serviceWorker ? sabayon.MessageChannel : MessageChannel\r\n      );\r\n      const [ next, resolve ] = nextResolver(Number);\r\n      const callbacks = new Map;\r\n      const proxied = create(null);\r\n      const OK = native ? UID : ID;\r\n\r\n      if (serviceWorker) sabayon.register(serviceWorker);\r\n\r\n      let resolving = '';\r\n\r\n      const deadlock = (promise, name) => {\r\n        if (resolving) {\r\n          const t = setTimeout(\r\n            console.warn,\r\n            3e3,\r\n            `💀🔒 - is proxy.${info(resolving)}() awaiting proxy.${info(name)}() ?`\r\n          );\r\n          promise = promise.then(\r\n            result => {\r\n              clearTimeout(t);\r\n              return result;\r\n            },\r\n            error => {\r\n              clearTimeout(t);\r\n              return Promise.reject(error);\r\n            },\r\n          );\r\n        }\r\n        return promise;\r\n      };\r\n\r\n      super(url, assign({ type: 'module' }, options));\r\n\r\n      this.proxy = new Proxy(proxied, {\r\n        get: (_, name) => {\r\n          // the curse of potentially awaiting proxies in the wild\r\n          // requires this ugly guard around `then`\r\n          if (name === 'then') return;\r\n          let cb = callbacks.get(name);\r\n          if (!cb) {\r\n            callbacks.set(name, cb = (...args) => {\r\n              const transfer = transferred.get(checkTransferred, args);\r\n              const [uid, promise] = next();\r\n              channel.postMessage(\r\n                [uid, name, transform ? args.map(transform) : args],\r\n                transfer\r\n              );\r\n              return deadlock(promise, name);\r\n            });\r\n          }\r\n          return cb;\r\n        },\r\n        set\r\n      });\r\n\r\n      super.postMessage([OK, !!serviceWorker], [port2]);\r\n\r\n      // @bug https://bugzilla.mozilla.org/show_bug.cgi?id=1956778\r\n      if (OK) {\r\n        super.addEventListener('message', event => {\r\n          const { data } = event;\r\n          if (data?.ID === OK) {\r\n            stop(event);\r\n            channel.onmessage(data);\r\n          }\r\n        });\r\n      }\r\n\r\n      channel.onmessage = async ({ data }) => {\r\n        const i32 = data[0];\r\n        const type = typeof i32;\r\n        if (type === 'number')\r\n          resolve.apply(null, data);\r\n        else {\r\n          resolving = data[1];\r\n          await result(data, proxied, transform);\r\n          resolving = '';\r\n          if (type === 'string')\r\n            channel.postMessage(data);\r\n          else {\r\n            const result = data[2] || data[1];\r\n            // at index 1 we store the written length or 0, if undefined\r\n            i32[1] = result === void 0 ? 0 : encode(result, i32.buffer);\r\n            // at index 0 we set the SharedArrayBuffer as ready\r\n            i32[0] = 1;\r\n            notify(i32, 0);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    Worker,\r\n    native,\r\n    transfer: transferred.set,\r\n  };\r\n};\r\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident({ transfer: false });\nexport default (...args) => new Worker(URL.createObjectURL(new Blob(['/*@*/'+\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o}))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})}).then(e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e})}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r(e=>e.count(),n).then(o)}async clear(){await this.#r(e=>e.clear(),r)}async delete(e){await this.#r(t=>t.delete(e),r)}async entries(){const e=await this.keys();return Promise.all(e.map(e=>this.get(e).then(t=>[e,t])))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r(t=>t.get(e),n).then(o)}async has(e){return void 0!==await this.#r(t=>t.getKey(e),n).then(o)}async keys(){return await this.#r(e=>e.getAllKeys(),n).then(o)}async set(e,t){return await this.#r(n=>n.put(t,e),r),this}async values(){const e=await this.keys();return Promise.all(e.map(e=>this.get(e)))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then(e=>{for(const[t,n]of e)super.set(t,n)})}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then(()=>this.#s.clear()),super.clear()}delete(e){return this.#o=this.#o.then(()=>this.#s.delete(e)),super.delete(e)}set(e,t){return this.#o=this.#o.then(()=>this.#s.set(e,t)),super.set(e,t)}}const c=\\\"40980414\\\",l=\\\"=\\\"+c,u=\\\"-\\\"+c;let p=0;const f=p++,d=p++,h=p++,y=p++,m=p++,g=p++,w=p++,_=p++,b=p++,A=p++,E=p++,v=p++,k=p++,S=p++,x=p++,j=p++,B=p++,$=p++,F=p++,M=p++,P=p++,R=p++,D=p++,T=p++,O=p++,L=new TextDecoder,C=new TextEncoder,I=new Map(Reflect.ownKeys(Symbol).map(e=>[Symbol[e],`@${String(e)}`])),H=e=>{switch(e[0]){case\\\"@\\\":return Symbol[e.slice(1)];case\\\"#\\\":return Symbol.for(e.slice(1));case\\\"!\\\":return Symbol(e.slice(1));default:return Symbol()}},U=e=>I.get(e)||((e,t)=>void 0===t?\\\"?\\\":void 0===Symbol.keyFor(e)?`!${t}`:`#${t}`)(e,e.description),W=Object.defineProperty,N=Object.assign,J=Array.isArray,q=ArrayBuffer.isView,z=(e,t)=>[e,t],K=e=>e,G={},V=e=>(t,n=new Map)=>{for(let r=0,s=t.length;r<s;r++)t[r]=e(t[r],n);return t},X=([e,t])=>0===e?t:H(t),Y=e=>\\\"string\\\"==typeof e?z(0,e):z(16,U(e)),Z=(e,t)=>{for(let n=e.push,r=0,s=t.length;r<s;r+=32767)n.apply(e,t.subarray(r,r+32767))},Q=new ArrayBuffer(8),ee=new DataView(Q),te=new Uint8Array(Q),ne=(e,t,n)=>(e.set(t,n),n),re=e=>{te[0]=e[ae++],te[1]=e[ae++],te[2]=e[ae++],te[3]=e[ae++],te[4]=e[ae++],te[5]=e[ae++],te[6]=e[ae++],te[7]=e[ae++]},se=e=>(te[0]=e[ae++],te[1]=e[ae++],te[2]=e[ae++],te[3]=e[ae++],ee.getUint32(0,!0)),oe=(e,t)=>{switch(e[ae++]){case m:return re(e),ee.getFloat64(0,!0);case g:return e[ae++];case P:{const n=ne(t,ae-1,{});for(let r=0,s=se(e);r<s;r++)n[oe(e,t)]=oe(e,t);return n}case j:{const n=ne(t,ae-1,[]);for(let r=0,s=se(e);r<s;r++)n.push(oe(e,t));return n}case T:{const n=ae-1,r=oe(e,t);return ne(t,n,new globalThis[r](oe(e,t)))}case B:{const n=ae-1,r=se(e);return ne(t,n,e.slice(ae,ae+=r).buffer)}case S:{const n=ae-1,r=se(e);return ne(t,n,L.decode(e.slice(ae,ae+=r)))}case $:return ne(t,ae-1,new Date(oe(e,t)));case M:{const n=ne(t,ae-1,new Map);for(let r=0,s=se(e);r<s;r++)n.set(oe(e,t),oe(e,t));return n}case D:{const n=ne(t,ae-1,new Set);for(let r=0,s=se(e);r<s;r++)n.add(oe(e,t));return n}case F:{const n=oe(e,t),r=oe(e,t),s=oe(e,t),o=new(globalThis[n]||Error)(r);return ne(t,ae-1,W(o,\\\"stack\\\",{value:s}))}case R:{const n=oe(e,t),r=oe(e,t);return ne(t,ae-1,new RegExp(n,r))}case f:return!1;case d:return!0;case w:return NaN;case _:return 1/0;case b:return-1/0;case A:return 0;case E:return-0;case y:return null;case v:return re(e),ee.getBigInt64(0,!0);case k:return re(e),ee.getBigUint64(0,!0);case x:return H(oe(e,t));case O:return t.get(se(e));default:return}};let ae=0;const ie=e=>(ae=0,oe(e,new Map)),ce=({byteOffset:e=0}={})=>(t,n)=>ie(new Uint8Array(n,e,t));let le=0;const ue=le++,pe=le++,fe=le++,de=le++,he=le++,ye=le++,me=le++,ge=le++,we=le++,_e=le++,be=le++,Ae=le++,Ee=le++,ve=le++,ke=le++,Se=le++,xe=le++,je=le++,{getPrototypeOf:Be}=Object,{construct:$e}=Reflect,{toStringTag:Fe}=Symbol,{toString:Me}=G,Pe=(e,t=Me.call(e).slice(8,-1))=>t in globalThis?t:Pe(Be(e)||G),Re=(e,t=e[Fe])=>t in globalThis?t:Re($e(Be(e.constructor),[0])),De=(e,t)=>new ArrayBuffer(e,{maxByteLength:t}),Te=([e,t],n)=>{const r=n?e.byteLength:e.length;if(n){if(t){const n=De(r,t);new Uint8Array(n).set(new Uint8Array(e)),e=n}}else{const n=t?De(r,t):new ArrayBuffer(r);new Uint8Array(n).set(e),e=n}return e};const Oe=/\\\\[('|\\\")?(.+?)\\\\1\\\\]/g,Le=(e,t)=>e?.[t];const{preventExtensions:Ce}=Object;var Ie=({reflect:e=K,transform:t=K,released:n=K,buffer:r=!1}=G)=>{const s=V(X),o=V(Y),a=e=>{if(!J(e))return e;const[t,n]=e;if(1&t)return l(e,t,n);switch(t){case 2:return S;case 0:return n;case 16:return H(n);case 32:return BigInt(n);case 68:return(([e,t,n,r],s)=>{const o=Te(t,s),a=globalThis[e];return r?new a(o,n,r):new a(o,n)})(n,r);case 64:return Te(n,r)}},i=(e,n=new Map)=>{switch(typeof e){case\\\"object\\\":{if(null===e)break;if(e===globalThis)return v;if(k in e)return g;let r=n.get(e);if(!r){const s=t(e);if(w||!m.has(s)){if(J(s)){const t=[];r=z(4,t),n.set(e,r);for(let e=0,r=s.length;e<r;e++)t[e]=i(s[e],n);return r}if(!(q(s)||s instanceof ArrayBuffer||\\\"Object\\\"!==Pe(s))){const t={};r=z(2,t),n.set(e,r);for(const e in s)t[e]=i(s[e],n);return r}}r=z(0,s),n.set(e,r)}return r}case\\\"function\\\":{if(k in e)return g;let r=n.get(e);if(!r){const s=t(e);r=z(8,_(s)),n.set(e,r)}return r}case\\\"symbol\\\":return z(16,U(e))}return e},c=V(i),l=(e,t,n)=>{let r=E.get(n),s=r?.deref();return s||(r&&x.unregister(r),s=new(3===t?d:5===t?h:y)(e,n),r=new WeakRef(s),E.set(n,r),x.register(s,n,r)),s},u=e=>{switch(typeof e){case\\\"object\\\":if(null===e)break;case\\\"function\\\":return k in e;default:return!1}};class p{constructor(e){this._=e}get(t,n){return a(e(_e,this._,Y(n)))}set(t,n,r){return e(xe,this._,Y(n),i(r))}ownKeys(t){return s(e(ke,this._),E)}getOwnPropertyDescriptor(t,n){const r=a(e(be,this._,Y(n)));if(r)for(const e in r)r[e]=a(r[e]);return r}defineProperty(t,n,r){return e(ge,this._,Y(n),i(r))}deleteProperty(t,n){return e(we,this._,Y(n))}getPrototypeOf(t){return a(e(Ae,this._))}setPrototypeOf(t,n){return e(je,this._,i(n))}isExtensible(t){return e(ve,this._)}preventExtensions(t){return Ce(t)&&e(Se,this._)}}const f=(t,n,r)=>r===k?!!(g=t):e(Ee,n,Y(r));class d extends p{constructor(e,t){return new Proxy({_:e},super(t))}has(e,t){return f(e._,this._,t)}}class h extends p{constructor(e,t){return new Proxy(e,super(t))}has(e,t){return f(e,this._,t)}}class y extends p{constructor(e,t){return new Proxy(He.bind(e),super(t))}has(e,t){return f(e(),this._,t)}construct(t,n){return a(e(me,this._,c(n)))}apply(t,n,r){const s=new Map;return a(e(ye,this._,i(n,s),c(r,s)))}get(e,t){switch(t){case\\\"apply\\\":return(t,n)=>this.apply(e,t,n);case\\\"call\\\":return(t,...n)=>this.apply(e,t,n);default:return super.get(e,t)}}}let m,g,w=!0;const{id:_,ref:b,unref:A}=((e=0,t=new Map,n=new Map)=>({clear:()=>{t.clear(),n.clear()},id:r=>{let s=n.get(r);if(void 0===s){for(;t.has(s=e++););t.set(s,r),n.set(r,s)}return s},ref:e=>t.get(e),unref:e=>(n.delete(t.get(e)),t.delete(e))}))(),E=new Map,v=z(2,null),k=Symbol(\\\"reflected-ffi\\\"),S=new d(v,null),x=new FinalizationRegistry(t=>{E.delete(t),e(ue,t)});return{global:S,isProxy:u,assign(t,...n){const r=u(t),s=N(r?{}:t,...n);return r&&e(pe,g[1],i(s)),t},direct:e=>(w&&(w=!1,m=new WeakSet),m.add(e),e),evaluate:(t,...n)=>a(e(fe,null,function(e=this){return String(e).replace(/^(async\\\\s*)?(\\\\bfunction\\\\b)?(.*?)\\\\(/,(e,t,n,r)=>r&&!n?`${t||\\\"\\\"}function ${r}(`:e)}(t),c(n))),gather(t,...n){const r=u(t),s=r?a:e=>t[e];r&&(n=e(de,g[1],o(n,E)));for(let e=0;e<n.length;e++)n[e]=s(n[e]);return n},query:(t,n)=>u(t)?a(e(he,g[1],n)):((e,t)=>t.replace(Oe,\\\".$2\\\").split(\\\".\\\").reduce(Le,e))(t,n),reflect(e,t,...r){switch(e){case ye:{const[e,n]=r;for(let e=0,t=n.length;e<t;e++)n[e]=a(n[e]);return i(Reflect.apply(b(t),a(e),n))}case ue:return n(b(t)),A(t)}}}};function He(){return this}var Ue=Promise.withResolvers.bind(Promise),We=(e=e=>e)=>{const t=new Map;let n=0;return[()=>{let r;do{r=e(n++)}while(t.has(r));const s=Ue();return t.set(r,s),[r,s.promise]},(e,n,r)=>{const s=t.get(e);t.delete(e),r?s?.reject(r):s?.resolve(n)}]};const Ne=[],Je=new WeakSet,qe=(...e)=>(Je.add(e),e);let{SharedArrayBuffer:ze}=globalThis,Ke=!0;try{new ze(4,{maxByteLength:8})}catch(e){Ke=!1,ze=class extends ArrayBuffer{get growable(){return super.resizable}grow(e){super.resize(e)}}}const{create:Ge}=Object,Ve=`coincident-${Ke?crypto.randomUUID():Math.random().toString(36).substring(2)}`,Xe=2*Int32Array.BYTES_PER_ELEMENT,Ye={byteOffset:Xe},Ze=(e,t,n)=>{const r=\\\"then\\\"!==t;return r&&(e[t]=n),r};const{isArray:Qe}=Array,{isView:et}=ArrayBuffer,{values:tt}=Object,[nt,rt]=We();let[st,ot]=nt(),at=()=>ot,{Atomics:it,SharedArrayBuffer:ct,postMessage:lt}=globalThis;if(Ke)rt(st);else{ct=ze;const e=new Map,t=(e,...t)=>{e.addEventListener(...t)},n=(e,t)=>{for(const e in t)t[e]={value:t[e],configurable:!0,writable:!0};return Object.create(e,t)};if(\\\"importScripts\\\"in globalThis){const r=(t,n,s)=>{if(s&&\\\"object\\\"==typeof s&&!t.has(s))if(t.add(s),et(s)){if(s instanceof Int32Array&&s.buffer instanceof ct){const t=h++;return e.set(s,t),[p,t,s,n]}}else{const e=Qe(s)?s:tt(s);for(let s=0;s<e.length;s++){const o=r(t,n,e[s]);if(o)return o}}},s=e=>function t(n,...s){if(d){const t=r(new Set,n,n);e.call(this,t||n,...s)}else ot.then(()=>t(n,...s))};lt=s(lt);const{prototype:o}=globalThis.MessagePort;o.postMessage=s(o.postMessage),t(globalThis,\\\"message\\\",e=>{let{data:t}=e;Qe(t)&&\\\"string\\\"==typeof t.at(1)&&e.stopImmediatePropagation(),rt(st,t)},{once:!0});const{wait:a}=it,{parse:i}=JSON,c=e=>({value:e,async:!0}),l=(t,n)=>{const r=new XMLHttpRequest;return r.open(\\\"POST\\\",`${f}?sabayon`,n),r.send(`[\\\"${p}\\\",${e.get(t)}]`),r},u=(t,n)=>(t.set(i(n.responseText)),e.delete(t),\\\"ok\\\");it=n(it,{wait:(t,...n)=>e.has(t)?u(t,l(t,!1)):a(t,...n),waitAsync:(t,...n)=>{if(e.has(t)){const{promise:e,resolve:n}=Ue(),r=l(t,!0);return r.onloadend=()=>n(u(t,r)),c(e)}return a(t,...n)}});let p,f,d=!1,h=Math.random();ot=ot.then(e=>{[p,f]=e,d=!0})}else{const n=Ve,r=new BroadcastChannel(\\\"dc78209b-186c-4f83-80e9-406becb7d9f3\\\");r.onmessage=async t=>{const[s,o,a]=t.data;if(o===n)for(const[t,[n,o]]of e)if(n===a){await o.promise,e.delete(t);let n=t.length;for(;n--&&!t[n];);r.postMessage([s,t.slice(0,n+1)]);break}};const{notify:s}=it;it=Object.create(it,{notify:{configurable:!0,writable:!0,value:(t,...n)=>{const r=e.get(t);return r?(r[1].resolve(),0):s(t,...n)}}});let o=\\\"\\\",a=null;const i=(e,n)=>{let r,s=!0;e.getRegistration(o).then(t=>t??e.register(o,n)).then(function n(a){const{controller:i}=e;if(s=s&&!!i,r=a.installing||a.waiting||a.active,\\\"activated\\\"===r.state){if(s){if(i.scriptURL===o)return rt(st);a.unregister()}location.reload()}else t(r,\\\"statechange\\\",()=>n(a),{once:!0})})};at=(e,t)=>(a||(o=new URL(e,location.href).href,i(navigator.serviceWorker,t),a=ot),a)}}const ut=Ue();addEventListener(\\\"message\\\",e=>{(e=>{e.stopImmediatePropagation(),e.preventDefault()})(e);const[t,n]=e.data;ut.resolve({ID:t,SW:n,channel:e.ports[0]})},{once:!0});var pt=async e=>{const{ID:t,SW:n,channel:r}=await at().then(()=>ut.promise),s=!!t,o=Ke||!!n,a=e?.transform,i=(e?.decoder||ce)(Ye),c=!1!==e?.transfer;let l,u,p;if(o){const t=new ct(e?.minByteLength||32767,{maxByteLength:e?.maxByteLength||16777216});l=new Int32Array(t),({pause:u,wait:p}=it),!u||s||t instanceof ArrayBuffer||(p=(e,t)=>{for(;e[t]<1;)u()})}const[f,d]=We(String),h=new Map,y=Ge(null),m=new Proxy(y,{get(e,n){if(\\\"then\\\"===n)return;let u=h.get(n);return u||h.set(n,u=(...e)=>{const u=((e,t)=>{let n=Ne;return e&&Je.has(t.at(-1)||Ne)&&(n=t.pop(),Je.delete(n)),n})(c,e),d=[l,n,a?e.map(a):e];if(o){s?lt({ID:t,data:d},u):r.postMessage(d,u),p(l,0),l[0]=0;const e=l[1]?i(l[1],l.buffer):void 0;if(e instanceof Error)throw e;return e}{const[e,t]=f();return d[0]=e,r.postMessage(d,u),t}}),u},set:Ze});return r.onmessage=async({data:e})=>{\\\"string\\\"==typeof e[0]?d.apply(null,e):(await(async(e,t,n)=>{try{const r=await t[e[1]].apply(null,e[2]);e[1]=n?n(r):r,e[2]=null}catch(t){e[2]=t}})(e,y,a),r.postMessage(e))},{native:Ke,proxy:m,sync:o,transfer:qe}};const ft={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},dt=new WeakMap,ht=e=>{const t=e||console,n={buffered:mt,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return dt.set(t,n),t}}},yt=new TextDecoder,mt=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(yt.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},gt=(e,...t)=>ft[typeof e](e,...t),{isArray:wt}=Array,{assign:_t,create:bt,defineProperty:At,entries:Et}=Object,{all:vt,resolve:kt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),St=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function xt(e){return e.startsWith(\\\".\\\")?St(e,this):e}const jt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Bt=e=>Function(`'use strict';return (${e})`)(),$t=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Ft=Symbol.for(\\\"polyscript.js_modules\\\"),Mt=new Map;At(globalThis,Ft,{value:Mt}),new Proxy(Mt,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Pt=(e,t)=>!t.startsWith(\\\"_\\\"),Rt=(e,t)=>new Proxy(e,{has:Pt,get:(e,n)=>e[t][n]}),Dt=(e,t)=>import(e).then(e=>{Mt.set(t,{...e})}),Tt=e=>new Promise((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(_t(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))}),Ot=e=>/\\\\.css$/i.test(new URL(e).pathname),Lt=(e,t)=>e.has(t),Ct=e=>[...e.keys()];var It=(e,t,n,r)=>{const s=globalThis[Ft];if(n)for(let[e,t]of Et(n)){let n=s.get(t);n&&!wt(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:Lt,ownKeys:Ct,get:(e,s)=>{let o=e.get(s);if(wt(o)){let a=o;o=null;for(let e of a)e=St(e,r),Ot(e)?n.importCSS(e):(n.importJS(e,s),o=t[Ft].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Ht=new Map,Ut=e=>Ht.get(e),Wt=(e,t)=>{try{return Function(\\\"require\\\",t)(Ut)}catch(t){dt.get(e).stderr(t)}};var Nt={type:\\\"dummy\\\",module:()=>\\\"data:text/javascript,\\\",engine:e=>ht().get(e),registerJSModule(e,t,n){Ht.set(t,n)},run:Wt,runAsync:Wt,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(Ut,n)}catch(t){dt.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Jt=Object.getOwnPropertyDescriptors(Response.prototype),qt=e=>\\\"function\\\"==typeof e,zt={get:(e,t)=>Jt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!qt(r)?e.then(e=>e[t]):(...n)=>e.then(e=>e[t](...n)))(e,t,Jt[t]):((e,t)=>qt(t)?t.bind(e):t)(e,e[t])};var Kt=(e,...t)=>new Proxy(fetch(e,...t),zt);const Gt=!globalThis.window,Vt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):Yt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},Xt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},Yt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},Zt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},Qt=e=>{const t=e.map(e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\")).filter(e=>\\\"\\\"!==e&&\\\".\\\"!==e).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},en=(e,t)=>Kt(St(e,t)).arrayBuffer(),tn=(e,t,n,r)=>vt((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap(({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(wt(r))return r.map(n=>({url:Qt([e,n]),path:Qt([t,n])}));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:Qt([t,s])}]})})(n).map(({url:n,path:s})=>en(n,r).then(n=>e.writeFile(t,s,n)))),nn=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,rn=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)}),sn=(e,t,n,r)=>vt((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of Et(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,rn(o,t))}else{const e=rn(s,t),a=nn(e,rn(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map(({url:n,path:s})=>en(n,r).then(r=>e.writeFile(t,s,r,n)))),on=({main:e,worker:t},n)=>{const r=[];if(t&&Gt)for(let[e,s]of Et(t))e=St(e,n),r.push(Dt(e,s));if(e&&!Gt)for(let[t,s]of Et(e))t=St(t,n),Ot(t)?Tt(t):r.push(Dt(t,s));return vt(r)},an=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},{isNaN:cn,isFinite:ln,isInteger:un}=Number,{ownKeys:pn}=Reflect,{is:fn}=Object,dn=(e,t,n)=>{const r=n.get(e),s=!r;return s?(ee.setUint32(0,t.length,!0),n.set(e,[te[0],te[1],te[2],te[3]])):t.push(O,r[0],r[1],r[2],r[3]),s},hn=(e,t,n)=>{ee.setUint32(0,n,!0),e.push(t,te[0],te[1],te[2],te[3])},yn=(e,t,n)=>{switch(typeof e){case\\\"number\\\":e&&ln(e)?un(e)&&e<256&&-1<e?t.push(g,e):(ee.setFloat64(0,e,!0),t.push(m,te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7])):cn(e)?t.push(w):e?t.push(e<0?b:_):t.push(fn(e,0)?A:E);break;case\\\"object\\\":switch(!0){case null===e:t.push(y);break;case!dn(e,t,n):break;case J(e):{const r=e.length;hn(t,j,r);for(let s=0;s<r;s++)yn(e[s],t,n);break}case q(e):if(t.push(T),yn(Re(e),t,n),e=e.buffer,!dn(e,t,n))break;case e instanceof ArrayBuffer:{const n=new Uint8Array(e);hn(t,B,n.length),mn(t,n);break}case e instanceof Date:t.push($),yn(e.getTime(),t,n);break;case e instanceof Map:hn(t,M,e.size);for(const[r,s]of e)yn(r,t,n),yn(s,t,n);break;case e instanceof Set:hn(t,D,e.size);for(const r of e)yn(r,t,n);break;case e instanceof Error:t.push(F),yn(e.name,t,n),yn(e.message,t,n),yn(e.stack,t,n);break;case e instanceof RegExp:t.push(R),yn(e.source,t,n),yn(e.flags,t,n);break;default:if(\\\"toJSON\\\"in e){const r=e.toJSON();yn(r===e?null:r,t,n)}else{const r=pn(e),s=r.length;hn(t,P,s);for(let o=0;o<s;o++){const s=r[o];yn(s,t,n),yn(e[s],t,n)}}}break;case\\\"string\\\":if(dn(e,t,n)){const n=C.encode(e);hn(t,S,n.length),mn(t,n)}break;case\\\"boolean\\\":t.push(e?d:f);break;case\\\"symbol\\\":t.push(x),yn(U(e),t,n);break;case\\\"bigint\\\":{let n=v;9223372036854775807n<e?(ee.setBigUint64(0,e,!0),n=k):ee.setBigInt64(0,e,!0),t.push(n,te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7]);break}default:t.push(h)}};let mn=Z;const gn={parse:ie,stringify:e=>{const t=[];return mn=Z,yn(e,t,new Map),t}},wn=new WeakMap,_n=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await sn(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await tn(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await on(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},bn=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await wn.get(e)(t),t.map(t=>e.pyimport(t))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=gn),e.registerJsModule(t,n)},An=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},En=(e,t,...n)=>{try{return e.runPython(gt(t),...n)}catch(t){dt.get(e).stderr(t)}},vn=async(e,t,...n)=>{try{return await e.runPythonAsync(gt(t),...n)}catch(t){dt.get(e).stderr(t)}},kn=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){dt.get(e).stderr(t)}};var Sn=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const xn=async e=>(await import(\\\"./toml-BK2RWy-G.js\\\")).parse(e);async function jn(e,t){return new Promise((n,r)=>{e.syncfs(t,e=>{e?r(e):n()})})}function Bn(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await $n(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach(function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)}),i.sort();const c=[];if(Object.keys(o.entries).forEach(function(e){n.entries[e]||(c.push(e),a++)}),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):Yt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await jn(t,!0),{syncfs:async()=>await jn(t,!1)}}}const $n=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},Fn=(e,t)=>{try{e.mkdir(t)}catch(e){}},Mn=an(\\\"mpy\\\");var Pn={type:\\\"micropython\\\",module:(e=\\\"1.25.0\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=ht({stderr:mt(console.error),stdout:mt(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),Mn(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=Rn.bind(this,i,r);return wn.set(i,c),await _n(this,Mn,i,t,r),this.writeFile(i,\\\"./mip.py\\\",Sn),t.packages&&(Mn(\\\"Loading packages\\\"),await c(t.packages.map(xt,r)),Mn(\\\"Loaded packages\\\")),Mn(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=Bn(i._module)),i},registerJSModule:bn,run:En,runAsync:vn,runEvent:kn,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=An(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-BKVoQflw.js\\\").then(async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)Fn(s,i);else{Fn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()})}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return Vt(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return Vt(i,t,n)}};async function Rn(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=St(s,t),r=await Kt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const Dn={dict_converter:Object.fromEntries},{stringify:Tn}=JSON,{apply:On}=Reflect,Ln=Function.prototype,Cn=e=>function(...t){return On(e,this,t)};let In,Hn;const Un=e=>{const t=new WeakMap,n=n=>{for(let r,s=0;s<n.length;s++)switch(typeof(r=n[s])){case\\\"object\\\":if(null===r)break;case\\\"function\\\":if(In in r&&!r[In].shared?.gcRegistered){e=!1;let o=t.get(r)?.deref();if(!o){o=Hn(r);const e=new WeakRef(o);t.set(r,e),t.set(o,e)}n[s]=o,e=!0}}};Object.defineProperties(Ln,{apply:{value(t,r){return e&&n(r),On(this,t,r)}},call:{value(t,...r){return e&&n(r),On(this,t,r)}}})},Wn=an(\\\"py\\\"),Nn=new WeakMap;var Jn={type:\\\"pyodide\\\",module:(e=\\\"0.27.7\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){Wn(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;s&&(s=s.map(xt,r)),Wn(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=new i(a),l={indexURL:a},u=\\\"never\\\"!==t.packages_cache;if(await c.sync(),u){if(s){s=s.sort();const e=Tn(s);if(c.has(e)){const t=new Blob([c.get(e)],{type:\\\"application/json\\\"});l.lockFileURL=URL.createObjectURL(t),l.packages=s.map(e=>e.split(/[>=<]=/)[0]),s=null}}}else c.clear();Wn(\\\"Loaded Storage\\\");const{stderr:p,stdout:f,get:d}=ht(),h=await d(e({stderr:p,stdout:f,...l}));t.debug&&h.setDebug(!0);const y=zn.bind(h);return o&&Nn.set(h,o),wn.set(h,y),await _n(this,Wn,h,t,r),s&&await y(s,c,u),await c.close(),l.lockFileURL&&URL.revokeObjectURL(l.lockFileURL),Wn(\\\"Loaded Pyodide\\\"),\\\"auto\\\"===t.experimental_create_proxy&&(h.runPython([\\\"import js\\\",\\\"from pyodide.ffi import to_js\\\",\\\"o=js.Object.fromEntries\\\",\\\"js.experimental_create_proxy=lambda r:to_js(r,dict_converter=o)\\\"].join(\\\";\\\"),{globals:h.toPy({})}),Hn=globalThis.experimental_create_proxy,delete globalThis.experimental_create_proxy,[In]=Reflect.ownKeys(Hn).filter(e=>\\\"symbol\\\"==typeof e&&\\\"Symbol(pyproxy.attrs)\\\"===String(e)),Un(!0)),h},registerJSModule:bn,run:Cn(En),runAsync:Cn(vn),runEvent:Cn(kn),transform:(e,t)=>On(qn,e,[t]),writeFile:(e,t,n,r)=>{const s=An(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return Vt({FS:o,PATH:a,PATH_FS:i},t,n)}};function qn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(Dn);if(e instanceof Map)return new Map([...e.entries()]);if(wt(e))return e.map(qn,this)}return e}async function zn(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,Wn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(Nn.has(this)&&o.set_index_urls(Nn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(Tn(e),n)}o.destroy()}const Kn=\\\"ruby-wasm-wasi\\\",Gn=Kn.replace(/\\\\W+/g,\\\"_\\\");var Vn={type:Kn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await Kt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await sn(this,a,t.files,r),t.fetch&&await tn(this,a,t.fetch,r),t.js_modules&&await on(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Gn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(gt(t),...n),runAsync:(e,t,...n)=>e.evalAsync(gt(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Gn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${Kn}`)}};var Xn={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=ht(),c=await i((new e).createEngine());return c.global.getTable(t.Base,e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)}),n.files&&await sn(this,c,n.files,s),n.fetch&&await tn(this,c,n.fetch,s),n.js_modules&&await on(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(gt(t),...n)}catch(t){dt.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(gt(t),...n)}catch(t){dt.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){dt.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(Yt(e,Xt(t)),t=Zt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const Yn=new WeakMap,Zn=new FinalizationRegistry(e=>e()),Qn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=Yn.get(e),{output:o,result:a}=await n.captureR(gt(t));for(const{type:e,data:t}of o)s[e](t);return Zn.register(a,r),a};var er={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.5.1\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=ht(),o=new e.WebR;await s(o.init().then(()=>o));const a=await new o.Shelter;return Yn.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:dt.get(o)}),t.files&&await sn(this,o,t.files,r),t.fetch&&await tn(this,o,t.fetch,r),t.js_modules&&await on(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:Qn,runAsync:Qn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const tr=new Map,nr=new Map,rr=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=tr.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then(r=>(nr.set(t,e),s(r,e,n,o)))}}),sr=e=>{for(const t of[].concat(e.type))tr.set(t,e)};for(const e of[Nt,Pn,Jn,Vn,Xn,er])sr(e);const{parse:or}=JSON,ar=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[St(e),n]})(e,t);return\\\"json\\\"===s?n=Kt(r).json():\\\"toml\\\"===s?n=Kt(r).text().then(xn):\\\"string\\\"===s?n=ir(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=ir(n)),[n,e=r]},ir=e=>{try{return or(e)}catch(t){return xn(e)}},cr=\\\"BeforeRun\\\",lr=\\\"AfterRun\\\",ur=[`code${cr}`,`code${cr}Async`,`code${lr}`,`code${lr}Async`],pr=[\\\"onWorker\\\",\\\"onReady\\\",`on${cr}`,`on${cr}Async`,`on${lr}`,`on${lr}Async`];function fr(e,t){const{run:n,runAsync:r}=tr.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const dr=(e,t,n,r,s,o)=>{if(s||o){const a=fr.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let hr,yr,mr;const gr=(e,t)=>{addEventListener(e,t||(async t=>{try{await hr,yr(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{proxy:wr,sync:_r,native:br,window:Ar,isWindowProxy:Er,ffi:vr}=await(async e=>{const t=await pt({...e,decoder:e?.decoder||ce}),n=Ie({...e,buffer:!0,reflect:t.proxy[l]});return t.proxy[u]=n.reflect,{...t,window:n.global,isWindowProxy:n.isProxy,ffi:{assign:n.assign,direct:n.direct,evaluate:n.evaluate,gather:n.gather,query:n.query}}})({transfer:!1,transform:e=>mr?mr(e):e}),kr={polyfill:_r,sync:wr,window:br||_r?Ar:null,isWindowProxy:Er,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};gr(\\\"message\\\",({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{hr=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:f,async:d}=e,h=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),y=await((e,t,n,r={})=>(t&&([r,t]=ar(t,n,r)),kt(r).then(n=>rr[e](n,t))))(h,t,n,f),{js_modules:m}=nr.get(h),g=m?.main,w=bt(tr.get(l)),_=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:dt.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(w,u||l,f||{},y);let b=\\\"run\\\";if(d&&(b+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of ur){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&d||!s&&!d)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,$t(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,$t(t),...o);return r&&await s(e,r,...o),a}})(w,b,n,r);for(const n of pr.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&d||!s&&!d){const s=Bt(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}dr(w,_,kr,d,e,t)}let A,E,v,k=null,S=\\\"\\\";(br||_r)&&(({CustomEvent:A,document:E}=Ar),k=o&&E.getElementById(o)||null,v=e=>jt(k,u||l,e,!0,A));const x=It(Ar,wr,g,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Rt(r,e));t.registerJSModule(n,s,r)})(l,w,y,x),w.registerJSModule(y,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:kr,currentScript:k,config:_.config,js_modules:x,ffi:vr,get target(){return!S&&k&&(\\\"SCRIPT\\\"===c?k.after(_t(Ar.document.createElement(`script-${u||l}`),{id:S=`${o}-target`})):(S=o,k.replaceChildren(),k.style.display=\\\"block\\\")),S}}),yr=w.runEvent.bind(w,y),mr=w.transform.bind(w,y),k&&v(\\\"ready\\\"),s?.onReady&&Bt(s?.onReady).call(w,fr.call(w,_,y),kr),await w[b](y,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(w.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";y.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&y.runPython([`from ${e} import xworker as ${t}`,...r.map(e=>`${t}.sync.${e} = ${e}`),`del ${t}`].join(\\\"\\\\n\\\"))}return k&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),y}catch(e){postMessage(e)}})(),gr(\\\"error\\\"),gr(\\\"message\\\"),gr(\\\"messageerror\\\"),(br||_r)&&addEventListener(\\\"py:progress\\\",({type:e,detail:t})=>{Ar.dispatchEvent(new Ar.CustomEvent(e,{detail:t}))})});\\n\".replace(re,place)],{type:'text/javascript'})), ...args)\n/* c8 ignore stop */\n","import local from 'reflected-ffi/local';\nimport patchEvent from 'reflected-ffi/utils/events';\nimport { encoder as directEncoder } from 'reflected-ffi/encoder';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport coincident from '../main.js';\n\nexport default options => {\n  const esm = options?.import;\n  const exports = coincident({\n    ...options,\n    encoder: options?.encoder || directEncoder,\n  });\n\n  /** @type {Worker & { direct: <T>(value: T) => T, proxy: Record<string, function> }} */\n  class Worker extends exports.Worker {\n    #terminate;\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n      const { direct, reflect, terminate } = local({\n        ...options,\n        buffer: true,\n        reflect: proxy[WORKER],\n        remote(event) { if (event instanceof Event) patchEvent(event); },\n        module: options?.import || esm || (name => import(new URL(name, location).href)),\n      });\n\n      this.#terminate = terminate;\n      this.direct = direct;\n\n      proxy[MAIN] = reflect;\n    }\n    terminate() {\n      this.#terminate();\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:text/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","//@ts-check\r\n\r\nimport {\r\n  FALSE,\r\n  TRUE,\r\n\r\n  NULL,\r\n\r\n  NUMBER,\r\n  UI8,\r\n  NAN,\r\n  INFINITY,\r\n  N_INFINITY,\r\n  ZERO,\r\n  N_ZERO,\r\n\r\n  BIGINT,\r\n  BIGUINT,\r\n  STRING,\r\n  SYMBOL,\r\n\r\n  ARRAY,\r\n  BUFFER,\r\n  DATE,\r\n  ERROR,\r\n  MAP,\r\n  OBJECT,\r\n  REGEXP,\r\n  SET,\r\n  VIEW,\r\n\r\n  RECURSION\r\n} from './types.js';\r\n\r\nimport { decoder as textDecoder } from '../utils/text.js';\r\nimport { defineProperty } from '../utils/index.js';\r\nimport { fromSymbol } from '../utils/symbol.js';\r\nimport { dv, u8a8 } from './views.js';\r\n\r\n/** @typedef {Map<number, any>} Cache */\r\n\r\n/**\r\n * @param {Cache} cache\r\n * @param {number} index\r\n * @param {any} value\r\n * @returns {any}\r\n */\r\nconst $ = (cache, index, value) => {\r\n  cache.set(index, value);\r\n  return value;\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} input\r\n */\r\nconst number = input => {\r\n  u8a8[0] = input[i++];\r\n  u8a8[1] = input[i++];\r\n  u8a8[2] = input[i++];\r\n  u8a8[3] = input[i++];\r\n  u8a8[4] = input[i++];\r\n  u8a8[5] = input[i++];\r\n  u8a8[6] = input[i++];\r\n  u8a8[7] = input[i++];\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} input\r\n * @returns {number}\r\n */\r\nconst size = input => {\r\n  u8a8[0] = input[i++];\r\n  u8a8[1] = input[i++];\r\n  u8a8[2] = input[i++];\r\n  u8a8[3] = input[i++];\r\n  return dv.getUint32(0, true);\r\n};\r\n\r\n/**\r\n * @param {Uint8Array} input\r\n * @param {Cache} cache\r\n * @returns {any}\r\n */\r\nconst deflate = (input, cache) => {\r\n  switch (input[i++]) {\r\n    case NUMBER: {\r\n      number(input);\r\n      return dv.getFloat64(0, true);\r\n    }\r\n    case UI8: return input[i++];\r\n    case OBJECT: {\r\n      const object = $(cache, i - 1, {});\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        object[deflate(input, cache)] = deflate(input, cache);\r\n      return object;\r\n    }\r\n    case ARRAY: {\r\n      const array = $(cache, i - 1, []);\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        array.push(deflate(input, cache));\r\n      return array;\r\n    }\r\n    case VIEW: {\r\n      const index = i - 1;\r\n      const name = deflate(input, cache);\r\n      return $(cache, index, new globalThis[name](deflate(input, cache)));\r\n    }\r\n    case BUFFER: {\r\n      const index = i - 1;\r\n      const length = size(input);\r\n      return $(cache, index, input.slice(i, i += length).buffer);\r\n    }\r\n    case STRING: {\r\n      const index = i - 1;\r\n      const length = size(input);\r\n      // this could be a subarray but it's not supported on the Web and\r\n      // it wouldn't work with arrays instead of typed arrays.\r\n      return $(cache, index, textDecoder.decode(input.slice(i, i += length)));\r\n    }\r\n    case DATE: {\r\n      return $(cache, i - 1, new Date(deflate(input, cache)));\r\n    }\r\n    case MAP: {\r\n      const map = $(cache, i - 1, new Map);\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        map.set(deflate(input, cache), deflate(input, cache));\r\n      return map;\r\n    }\r\n    case SET: {\r\n      const set = $(cache, i - 1, new Set);\r\n      for (let j = 0, length = size(input); j < length; j++)\r\n        set.add(deflate(input, cache));\r\n      return set;\r\n    }\r\n    case ERROR: {\r\n      const name = deflate(input, cache);\r\n      const message = deflate(input, cache);\r\n      const stack = deflate(input, cache);\r\n      const Class = globalThis[name] || Error;\r\n      const error = new Class(message);\r\n      return $(cache, i - 1, defineProperty(error, 'stack', { value: stack }));\r\n    }\r\n    case REGEXP: {\r\n      const source = deflate(input, cache);\r\n      const flags = deflate(input, cache);\r\n      return $(cache, i - 1, new RegExp(source, flags));\r\n    }\r\n    case FALSE: return false;\r\n    case TRUE: return true;\r\n    case NAN: return NaN;\r\n    case INFINITY: return Infinity;\r\n    case N_INFINITY: return -Infinity;\r\n    case ZERO: return 0;\r\n    case N_ZERO: return -0;\r\n    case NULL: return null;\r\n    case BIGINT: return (number(input), dv.getBigInt64(0, true));\r\n    case BIGUINT: return (number(input), dv.getBigUint64(0, true));\r\n    case SYMBOL: return fromSymbol(deflate(input, cache));\r\n    case RECURSION: return cache.get(size(input));\r\n    // this covers functions too\r\n    default: return undefined;\r\n  }\r\n};\r\n\r\nlet i = 0;\r\n\r\n/**\r\n * @param {Uint8Array} value\r\n * @returns {any}\r\n */\r\nexport const decode = value => {\r\n  i = 0;\r\n  return deflate(value, new Map);\r\n};\r\n\r\n/**\r\n * @param {{ byteOffset?: number }} [options]\r\n * @returns {(length: number, buffer: ArrayBufferLike) => any}\r\n */\r\nexport const decoder = ({ byteOffset = 0 } = {}) => (length, buffer) => decode(\r\n  new Uint8Array(buffer, byteOffset, length)\r\n);\r\n","import * as DIRECT from 'reflected-ffi/direct';\nconst JSON = { parse: DIRECT.decode, stringify: DIRECT.encode };\n\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.25.0') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\nconst { apply } = Reflect;\nconst FunctionPrototype = Function.prototype;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst overrideMethod = method => function (...args) {\n    return apply(method, this, args);\n};\n\nlet pyproxy, to_js;\nconst override = intercept => {\n\n    const proxies = new WeakMap;\n\n    const patch = args => {\n        for (let arg, i = 0; i < args.length; i++) {\n            switch (typeof(arg = args[i])) {\n                case 'object':\n                    if (arg === null) break;\n                    // falls through\n                case 'function': {\n                    if (pyproxy in arg && !arg[pyproxy].shared?.gcRegistered) {\n                        intercept = false;\n                        let proxy = proxies.get(arg)?.deref();\n                        if (!proxy) {\n                            proxy = to_js(arg);\n                            const wr = new WeakRef(proxy);\n                            proxies.set(arg, wr);\n                            proxies.set(proxy, wr);\n                        }\n                        args[i] = proxy;\n                        intercept = true;\n                    }\n                    break;\n                }\n            }\n        }\n    };\n\n    // the patch\n    Object.defineProperties(FunctionPrototype, {\n        apply: {\n            value(context, args) {\n                if (intercept) patch(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (intercept) patch(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.7') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        if (config.debug) interpreter.setDebug(true);\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        if (config.experimental_create_proxy === 'auto') {\n            interpreter.runPython([\n                'import js',\n                'from pyodide.ffi import to_js',\n                'o=js.Object.fromEntries',\n                'js.experimental_create_proxy=lambda r:to_js(r,dict_converter=o)'\n            ].join(';'), { globals: interpreter.toPy({}) });\n            to_js = globalThis.experimental_create_proxy;\n            delete globalThis.experimental_create_proxy;\n            [pyproxy] = Reflect.ownKeys(to_js).filter(\n                k => (\n                    typeof k === 'symbol' &&\n                    String(k) === 'Symbol(pyproxy.attrs)'\n                )\n            );\n            override(true);\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => apply(transform, interpreter, [value]),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\nconst fr = new FinalizationRegistry(fn => fn());\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  fr.register(result, destroy);\n  return result;\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.5.1') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            ffi: {\n                direct: worker.direct,\n            },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import withResolvers from '@webreflection/utils/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","target","IDBMap","EventTarget","db","options","transaction","what","how","t","this","Promise","onsuccess","onerror","objectStore","constructor","name","super","resolve","reject","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","startsWith","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","callback","context","call","has","getKey","getAllKeys","set","put","values","Symbol","toStringTag","IDBMapSync","Map","queue","sync","withResolvers$1","withResolvers","workers","ignore","Set","workersHandler","freeze","_","promise","w","UNREF","ASSIGN","EVALUATE","GATHER","QUERY","APPLY","CONSTRUCT","DEFINE_PROPERTY","DELETE_PROPERTY","GET","GET_OWN_PROPERTY_DESCRIPTOR","GET_PROTOTYPE_OF","HAS","IS_EXTENSIBLE","OWN_KEYS","PREVENT_EXTENSIONS","SET","SET_PROTOTYPE_OF","symbols","Reflect","ownKeys","String","fromSymbol","slice","for","toSymbol","description","keyFor","asSymbol","defineProperty","fromArray","Array","from","isArray","isView","ArrayBuffer","tv","identity","object","loopValues","asValue","arr","cache","fromKey","toKey","output","$","apply","subarray","getPrototypeOf","construct","toString","toTag","ref","globalThis","toBuffer","Uint8Array","resizable","maxByteLength","brackets","query","replace","split","reduce","deleteProperty","getOwnPropertyDescriptor","isExtensible","preventExtensions","setPrototypeOf","local","reflect","transform","remote","module","import","buffer","fromValue","v","cached","fromValues","wr","weakRefs","fn","deref","fr","unregister","toValue","WeakRef","register","globalTarget","hasDirect","BUFFER","BYTES_PER_ELEMENT","byteOffset","byteLength","toView","REMOTE","id","fromKeys","toKeys","unref","ids","refs","uid","heap","FinalizationRegistry","WeakSet","add","method","isGlobal","descriptor","body","Function","terminate","addEventListener","eventsHandler","WeakMap","invoke","concat","console","log","arguments","FALSE","TRUE","UNDEFINED","NULL","NUMBER","UI8","NAN","INFINITY","N_INFINITY","ZERO","N_ZERO","BIGINT","BIGUINT","STRING","SYMBOL","ARRAY","DATE","ERROR","MAP","OBJECT","REGEXP","VIEW","RECURSION","Stack","self","offset","l","o","last","splice","grow","decoder","TextDecoder","encoder","TextEncoder","dv","DataView","u8a8","isNaN","isFinite","isInteger","Number","is","process","unknown","setUint32","inflate","setFloat64","ui8a","pushView","Date","getTime","Error","stack","RegExp","source","flags","json","toJSON","encoded","textEncoder","encode","setBigUint64","setBigInt64","CHANNEL","MAIN","WORKER","nextResolver","as","error","nothing","buffers","SharedArrayBuffer","SAB","native","growable","newLength","resize","create","ID","crypto","randomUUID","Math","random","substring","defaults","Int32Array","proxied","ok","next","bootstrap","Atomics","MessageChannel","Worker","views","addListener","extend","literal","configurable","writable","intercept","data","view","UID","array","details","interceptor","postMessage","rest","ready","MessagePort","at","stopImmediatePropagation","once","wait","parse","JSON","Async","async","Request","xhr","XMLHttpRequest","SW","send","responseText","waitAsync","onloadend","bc","BroadcastChannel","onmessage","swid","wid","vid","interceptData","port1","port2","scriptURL","notify","serviceWorker","activate","swc","c","getRegistration","controller","installing","waiting","active","state","location","reload","serviceWorkerURL","URL","href","navigator","info","coincident$1","checkTransferred","transfer","sabayon.Worker","url","sabayon.Atomics","channel","sabayon.MessageChannel","callbacks","OK","sabayon.register","resolving","proxy","cb","check","pop","transferred.get","setTimeout","warn","clearTimeout","deadlock","preventDefault","stop","i32","transferred.set","re","place","q","f","esm","exports","coincident","directEncoder","currentTarget","methods","patchEvent","io","stdio","localIO","buffered","stderr","stdout","engine","interpreter","EOL","maybeUI8","decode","registry","require","run","code","dummy","registerJSModule","runAsync","runEvent","writeFile","dedent","string","s","content","line","trim","test","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","absoluteURL","base","fixedRelative","nodeInfo","node","tag","tagName","dispatch","worker","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","isSync","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","filter","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","createProgress","index","number","getUint32","deflate","getFloat64","j","textDecoder","NaN","Infinity","getBigInt64","getBigUint64","stringify","loader","loadProgress","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","globals","mip","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","populate","getLocalSet","getRemoteSet","dst","reconcile","e","isRealDir","toAbsolute","join2","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","entry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","createWritable","write","removeRemoteEntry","removeEntry","total","e2","sort","remove","reverse","relPath","normalize","NATIVEFS_ASYNC","TypeError","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","toJsOptions","dict_converter","fromEntries","FunctionPrototype","overrideMethod","pyproxy","to_js","override","proxies","patch","arg","shared","gcRegistered","indexURLs","pyodide","loadPyodide","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","debug","setDebug","revokeObjectURL","experimental_create_proxy","toPy","unpackArchive","ffi","_log","loadPackage","micropip","set_index_urls","keep_going","frozen","destroy","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","global","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","captureR","webr","WebR","Shelter","evalRVoid","env","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","service_worker","isHook","Hook","resolver","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","wn","sw","versionValue","configValue","workerName","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","listener","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","known","cfg","u","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","symbol","stickyModule","$customObserver","dontBother","indexOf","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,34,35,36,39,51]}