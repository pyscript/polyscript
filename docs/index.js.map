{"version":3,"file":"index.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../esm/workers.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/coincident/esm/channel.js","../node_modules/proxy-target/esm/types.js","../node_modules/proxy-target/esm/traps.js","../node_modules/coincident/esm/shared/traps.js","../node_modules/coincident/esm/bridge.js","../node_modules/coincident/esm/index.js","../node_modules/proxy-target/esm/utils.js","../node_modules/proxy-target/esm/array.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/esm/shared/utils.js","../node_modules/coincident/esm/shared/main.js","../node_modules/coincident/esm/window/main.js","../node_modules/coincident/esm/window/thread.js","../node_modules/coincident/esm/shared/thread.js","../node_modules/coincident/esm/shared/worker.js","../node_modules/coincident/esm/window.js","../esm/worker/xworker.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../esm/interpreter/_io.js","../esm/utils.js","../esm/interpreter/_utils.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../esm/interpreter/_python.js","../esm/python/mip.js","../esm/3rd-party.js","../esm/interpreter/micropython.js","../esm/interpreter/pyodide.js","../esm/interpreter/ruby-wasm-wasi.js","../esm/interpreter/wasmoon.js","../esm/interpreter/webr.js","../esm/interpreters.js","../esm/loader.js","../node_modules/to-json-callback/esm/index.js","../esm/hooks.js","../esm/worker/hook.js","../esm/worker/class.js","../esm/errors.js","../esm/worker/url.js","../esm/script-handler.js","../esm/listeners.js","../esm/xworker.js","../esm/custom.js","../esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nexport const CHANNEL = '64e10b34-2bf7-4616-9668-f99de5aa046e';\n\nexport const MAIN = 'M' + CHANNEL;\nexport const THREAD = 'T' + CHANNEL;\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DELETE = 'delete';\n","// The goal of this file is to normalize SAB\n// at least in main -> worker() use cases.\n// This still cannot possibly solve the sync\n// worker -> main() use case if SharedArrayBuffer\n// is not available or usable.\n\nimport {CHANNEL} from './channel.js';\n\nconst {isArray} = Array;\n\nlet {SharedArrayBuffer, window} = globalThis;\nlet {notify, wait, waitAsync} = Atomics;\nlet postPatched = null;\n\n// This is needed for some version of Firefox\nif (!waitAsync) {\n  waitAsync = buffer => ({\n    value: new Promise(onmessage => {\n      // encodeURIComponent('onmessage=({data:b})=>(Atomics.wait(b,0),postMessage(0))')\n      let w = new Worker('data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))');\n      w.onmessage = onmessage;\n      w.postMessage(buffer);\n    })\n  });\n}\n\n// Monkey-patch SharedArrayBuffer if needed\ntry {\n  new SharedArrayBuffer(4);\n}\ncatch (_) {\n  SharedArrayBuffer = ArrayBuffer;\n\n  const ids = new WeakMap;\n  // patch only main -> worker():async use case\n  if (window) {\n    const resolvers = new Map;\n    const {prototype: {postMessage}} = Worker;\n\n    const listener = event => {\n      const details = event.data?.[CHANNEL];\n      if (!isArray(details)) {\n        event.stopImmediatePropagation();\n        const { id, sb } = details;\n        resolvers.get(id)(sb);\n      }\n    };\n\n    postPatched = function (data, ...rest) {\n      const details = data?.[CHANNEL];\n      if (isArray(details)) {\n        const [id, sb] = details;\n        ids.set(sb, id);\n        this.addEventListener('message', listener);\n      }\n      return postMessage.call(this, data, ...rest);\n    };\n\n    waitAsync = sb => ({\n      value: new Promise(resolve => {\n        resolvers.set(ids.get(sb), resolve);\n      }).then(buff => {\n        resolvers.delete(ids.get(sb));\n        ids.delete(sb);\n        for (let i = 0; i < buff.length; i++) sb[i] = buff[i];\n        return 'ok';\n      })\n    });\n  }\n  else {\n    const as = (id, sb) => ({[CHANNEL]: { id, sb }});\n\n    notify = sb => {\n      postMessage(as(ids.get(sb), sb));\n    };\n\n    addEventListener('message', event => {\n      const details = event.data?.[CHANNEL];\n      if (isArray(details)) {\n        const [id, sb] = details;\n        ids.set(sb, id);\n      }\n    });\n  }\n}\n\nexport {SharedArrayBuffer, isArray, notify, postPatched, wait, waitAsync};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {FUNCTION} from 'proxy-target/types';\n\nimport {CHANNEL} from './channel.js';\nimport {GET, HAS, SET} from './shared/traps.js';\n\nimport {SharedArrayBuffer, isArray, notify, postPatched, wait, waitAsync} from './bridge.js';\n\n// just minifier friendly for Blob Workers' cases\nconst {Int32Array, Map, Uint16Array} = globalThis;\n\n// common constants / utilities for repeated operations\nconst {BYTES_PER_ELEMENT: I32_BYTES} = Int32Array;\nconst {BYTES_PER_ELEMENT: UI16_BYTES} = Uint16Array;\n\nconst waitInterrupt = (sb, delay, handler) => {\n  while (wait(sb, 0, 0, delay) === 'timed-out')\n    handler();\n};\n\n// retain buffers to transfer\nconst buffers = new WeakSet;\n\n// retain either main threads or workers global context\nconst context = new WeakMap;\n\nconst syncResult = {value: {then: fn => fn()}};\n\n// used to generate a unique `id` per each worker `postMessage` \"transaction\"\nlet uid = 0;\n\n/**\n * @typedef {Object} Interrupt used to sanity-check interrupts while waiting synchronously.\n * @prop {function} [handler] a callback invoked every `delay` milliseconds.\n * @prop {number} [delay=42] define `handler` invokes in terms of milliseconds.\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * @param {globalThis | Worker} self the context in which code should run\n * @param {{parse: (serialized: string) => any, stringify: (serializable: any) => string, transform?: (value:any) => any, interrupt?: () => void | Interrupt}} [JSON] an optional `JSON` like interface to `parse` or `stringify` content with extra `transform` ability.\n * @returns {ProxyHandler<globalThis> | ProxyHandler<Worker>}\n */\nconst coincident = (self, {parse = JSON.parse, stringify = JSON.stringify, transform, interrupt} = JSON) => {\n  // create a Proxy once for the given context (globalThis or Worker instance)\n  if (!context.has(self)) {\n    // ensure no SAB gets a chance to pass through this call\n    const sendMessage = postPatched || self.postMessage;\n    // ensure the CHANNEL and data are posted correctly\n    const post = (transfer, ...args) => sendMessage.call(self, {[CHANNEL]: args}, {transfer});\n\n    const handler = typeof interrupt === FUNCTION ? interrupt : interrupt?.handler;\n    const delay = interrupt?.delay || 42;\n    const decoder = new TextDecoder('utf-16');\n\n    // automatically uses sync wait (worker -> main)\n    // or fallback to async wait (main -> worker)\n    const waitFor = (isAsync, sb) => isAsync ?\n      waitAsync(sb, 0) :\n      ((handler ? waitInterrupt(sb, delay, handler) : wait(sb, 0)), syncResult);\n\n    // prevent Harakiri https://github.com/WebReflection/coincident/issues/18\n    let seppuku = false;\n\n    context.set(self, new Proxy(new Map, {\n      // there is very little point in checking prop in proxy for this very specific case\n      // and I don't want to orchestrate a whole roundtrip neither, as stuff would fail\n      // regardless if from Worker we access non existent Main callback, and vice-versa.\n      // This is here mostly to guarantee that if such check is performed, at least the\n      // get trap goes through and then it's up to developers guarantee they are accessing\n      // stuff that actually exists elsewhere.\n      [HAS]: (_, action) => typeof action === 'string' && !action.startsWith('_'),\n\n      // worker related: get any utility that should be available on the main thread\n      [GET]: (_, action) => action === 'then' ? null : ((...args) => {\n        // transaction id\n        const id = uid++;\n\n        // first contact: just ask for how big the buffer should be\n        // the value would be stored at index [1] while [0] is just control\n        let sb = new Int32Array(new SharedArrayBuffer(I32_BYTES * 2));\n\n        // if a transfer list has been passed, drop it from args\n        let transfer = [];\n        if (buffers.has(args.at(-1) || transfer))\n          buffers.delete(transfer = args.pop());\n\n        // ask for invoke with arguments and wait for it\n        post(transfer, id, sb, action, transform ? args.map(transform) : args);\n\n        // helps deciding how to wait for results\n        const isAsync = self !== globalThis;\n\n        // warn users about possible deadlock still allowing them\n        // to explicitly `proxy.invoke().then(...)` without blocking\n        let deadlock = 0;\n        if (seppuku && isAsync)\n          deadlock = setTimeout(console.warn, 1000, `💀🔒 - Possible deadlock if proxy.${action}(...args) is awaited`);\n\n        return waitFor(isAsync, sb).value.then(() => {\n          clearTimeout(deadlock);\n\n          // commit transaction using the returned / needed buffer length\n          const length = sb[1];\n\n          // filter undefined results\n          if (!length) return;\n\n          // calculate the needed ui16 bytes length to store the result string\n          const bytes = UI16_BYTES * length;\n\n          // round up to the next amount of bytes divided by 4 to allow i32 operations\n          sb = new Int32Array(new SharedArrayBuffer(bytes + (bytes % I32_BYTES)));\n\n          // ask for results and wait for it\n          post([], id, sb);\n          return waitFor(isAsync, sb).value.then(() => parse(\n            decoder.decode(new Uint16Array(sb.buffer).slice(0, length)))\n          );\n        });\n      }),\n\n      // main thread related: react to any utility a worker is asking for\n      [SET](actions, action, callback) {\n        const type = typeof callback;\n        if (type !== FUNCTION)\n          throw new Error(`Unable to assign ${action} as ${type}`);\n        // lazy event listener and logic handling, triggered once by setters actions\n        if (!actions.size) {\n          // maps results by `id` as they are asked for\n          const results = new Map;\n          // add the event listener once (first defined setter, all others work the same)\n          self.addEventListener('message', async (event) => {\n            // grub the very same library CHANNEL; ignore otherwise\n            const details = event.data?.[CHANNEL];\n            if (isArray(details)) {\n              // if early enough, avoid leaking data to other listeners\n              event.stopImmediatePropagation();\n              const [id, sb, ...rest] = details;\n              let error;\n              // action available: it must be defined/known on the main thread\n              if (rest.length) {\n                const [action, args] = rest;\n                if (actions.has(action)) {\n                  seppuku = true;\n                  try {\n                    // await for result either sync or async and serialize it\n                    const result = await actions.get(action)(...args);\n                    if (result !== void 0) {\n                      const serialized = stringify(transform ? transform(result) : result);\n                      // store the result for \"the very next\" event listener call\n                      results.set(id, serialized);\n                      // communicate the required SharedArrayBuffer length out of the\n                      // resulting serialized string\n                      sb[1] = serialized.length;\n                    }\n                  }\n                  catch (_) {\n                    error = _;\n                  }\n                  finally {\n                    seppuku = false;\n                  }\n                }\n                // unknown action should be notified as missing on the main thread\n                else {\n                  error = new Error(`Unsupported action: ${action}`);\n                }\n                // unlock the wait lock later on\n                sb[0] = 1;\n              }\n              // no action means: get results out of the well known `id`\n              // wait lock automatically unlocked here as no `0` value would\n              // possibly ever land at index `0`\n              else {\n                const result = results.get(id);\n                results.delete(id);\n                // populate the SharedArrayBuffer with utf-16 chars code\n                for (let ui16a = new Uint16Array(sb.buffer), i = 0; i < result.length; i++)\n                  ui16a[i] = result.charCodeAt(i);\n              }\n              // release te worker waiting either the length or the result\n              notify(sb, 0);\n              if (error) throw error;\n            }\n          });\n        }\n        // store this action callback allowing the setter in the process\n        return !!actions.set(action, callback);\n      }\n    }));\n  }\n  return context.get(self);\n};\n\ncoincident.transfer = (...args) => (buffers.add(args), args);\n\nexport default coincident;\n","import { BIGINT, BOOLEAN, FUNCTION, NULL, NUMBER, OBJECT, STRING, SYMBOL, UNDEFINED } from './types.js';\n\nconst { isArray } = Array;\n\nexport { isArray };\n\nexport const invoke = value => /** @type {Function} */ (value)();\n\n/**\n * @template Value\n * @param {string} type\n * @param {Value} value\n * @returns {Value}\n */\nexport const reviver = (type, value) => value;\n\n/**\n * @template V\n * @typedef {[V]} Arr\n */\n\n/**\n * @template V\n * @typedef {() => V} Ctx\n */\n\n/**\n * @template T, V\n * @typedef {{t:T, v:V}} Obj\n */\n\n/**\n * @template V\n * @typedef {V extends bigint ? BIGINT : V extends boolean ? BOOLEAN : V extends null ? NULL : V extends number ? NUMBER : V extends string ? STRING : V extends symbol ? SYMBOL : V extends undefined ? UNDEFINED : V extends object ? OBJECT : never} TypeOf\n */\n\n/**\n * @template T, V\n * @param {T} t\n * @param {V} v\n * @returns {Obj<T, V>}\n */\nexport const obj = (t, v) => ({t, v});\n\n/**\n * @template V\n * @param {V} value\n * @returns {Ctx<V>}\n */\nexport const bound = value => Context.bind(value);\n\n/**\n * @template V, T\n * @param {V} value\n * @returns {V extends Ctx<T> ? ReturnType<V> : V}\n */\nexport const unbound = value => (\n  typeof value === FUNCTION ? invoke(value) : value\n);\n\n// This is needed to unlock *both* apply and construct\n// traps otherwise one of these might fail.\n// The 'use strict' directive is needed to allow\n// also primitive types to be bound.\nfunction Context() {\n  'use strict';\n  return this;\n}\n\n// TODO: is this really needed in here?\n// const { hasOwn } = Object;\n// const isConstructable = value => hasOwn(value, 'prototype');\n// const isFunction = value => typeof value === FUNCTION;\n","import { ARRAY, FUNCTION, NULL, OBJECT } from './types.js';\nimport { isArray, reviver, obj } from './utils.js';\n\nexport { bound, unbound } from './utils.js';\n\n/**\n * @template V\n * @typedef {import(\"./utils.js\").Arr<V>} Arr\n */\n\n/**\n * @template T, V\n * @typedef {import(\"./utils.js\").Obj<T, V>} Obj\n */\n\n/**\n * @template V\n * @typedef {import(\"./utils.js\").TypeOf<V>} TypeOf\n */\n\n/**\n * @template W, T, V\n * @typedef {W extends Function ? W : W extends Arr<V> ? W[0] : W extends Obj<T, V> ? W[\"v\"] : never} ValueOf\n */\n\n/**\n * @template {string} T\n * @template V\n * @param {T} type\n * @param {V} value\n * @returns {T extends typeof ARRAY ? Arr<V> : Obj<T, V>}\n */\nexport const target = (type, value) =>\n// @see https://github.com/microsoft/TypeScript/issues/33014\n// @ts-ignore\n(\n  type === ARRAY ?\n    (/** @type {Arr<V>} */ ([value])) :\n    obj(type, value)\n);\n\n/**\n * @template W, T, V\n * @param {W} wrap\n * @param {typeof reviver} [revive]\n * @returns\n */\nexport const unwrap = (wrap, revive = reviver) => {\n  /** @type {string} */\n  let type = typeof wrap, value = wrap;\n  if (type === OBJECT) {\n    if (isArray(wrap)) {\n      type = ARRAY;\n      value = wrap.at(0);\n    }\n    else\n      ({ t: type, v: value } = /** @type {Obj<string, any>} */ (wrap));\n  }\n  return revive(type, /** @type {ValueOf<W, T, V>} */ (value));\n};\n\nconst resolver = (type, value) => (\n  type === FUNCTION ? value : target(type, value)\n);\n\n/**\n * @template V\n * @param {V} value\n * @param {Function} [resolve]\n * @returns {V extends Function ? V : V extends Array ? Arr<V> : Obj<TypeOf<V>, V>}\n */\nexport const wrap = (value, resolve = resolver) => {\n  const type = value === null ? NULL : typeof value;\n  return resolve(type === OBJECT && isArray(value) ? ARRAY : type, value);\n};\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    if (debug) console.debug(`Held value ${String(held)} not relevant anymore`);\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","import { target as tv, wrap } from 'proxy-target/array';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  BOOLEAN,\n  NUMBER,\n  STRING,\n  UNDEFINED,\n  BIGINT,\n  SYMBOL,\n  NULL,\n} from 'proxy-target/types';\n\nconst {\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n} = Reflect;\n\nconst { assign, create } = Object;\n\nexport const TypedArray = getPrototypeOf(Int8Array);\n\nexport {\n  assign,\n  create,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n};\n\nexport const augment = (descriptor, how) => {\n  const {get, set, value} = descriptor;\n  if (get) descriptor.get = how(get);\n  if (set) descriptor.set = how(set);\n  if (value) descriptor.value = how(value);\n  return descriptor;\n};\n\nexport const asEntry = transform => value => wrap(value, (type, value) => {\n  switch (type) {\n    case NULL:\n      return tv(NULL, value);\n    case OBJECT:\n      if (value === globalThis)\n        return tv(type, null);\n    case ARRAY:\n    case FUNCTION:\n      return transform(type, value);\n    case BOOLEAN:\n    case NUMBER:\n    case STRING:\n    case UNDEFINED:\n    case BIGINT:\n      return tv(type, value);\n    case SYMBOL: {\n      // handle known symbols\n      if (symbols.has(value))\n        return tv(type, symbols.get(value));\n      // handle `Symbol.for('...')` cases\n      let key = Symbol.keyFor(value);\n      if (key)\n        return tv(type, `.${key}`);\n    }\n  }\n  throw new TypeError(`Unable to handle this ${type}: ${String(value)}`);\n});\n\nconst symbols = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const symbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of symbols) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const transform = o => o;\n","import { target as tv, unwrap } from 'proxy-target/array';\nimport { create as createGCHook } from 'gc-hook';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'proxy-target/types';\n\nimport {\n  TypedArray,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf,\n\n  assign,\n  create,\n  augment,\n  asEntry,\n  symbol,\n  transform\n} from './utils.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default (name, patch) => {\n  const eventsHandler = patch && new WeakMap;\n\n  // patch once main UI tread\n  if (patch) {\n    const { addEventListener } = EventTarget.prototype;\n    // this should never be on the way as it's extremely light and fast\n    // but it's necessary to allow \"preventDefault\" or other event invokes at distance\n    defineProperty(EventTarget.prototype, 'addEventListener', {\n      value(type, listener, ...options) {\n        if (options.at(0)?.invoke) {\n          if (!eventsHandler.has(this))\n            eventsHandler.set(this, new Map);\n          eventsHandler.get(this).set(type, [].concat(options[0].invoke));\n          delete options[0].invoke;\n        }\n        return addEventListener.call(this, type, listener, ...options);\n      }\n    });\n  }\n\n  const handleEvent = patch && (event => {\n    const {currentTarget, target, type} = event;\n    for (const method of eventsHandler.get(currentTarget || target)?.get(type) || [])\n      event[method]();\n  });\n\n  return function (thread, MAIN, THREAD, ...args) {\n    let id = 0, $ = this?.transform || transform;\n    const ids = new Map;\n    const values = new Map;\n\n    const {[THREAD]: __thread__} = thread;\n\n    const global = args.length ? assign(create(globalThis), ...args) : globalThis;\n\n    const result = asEntry((type, value) => {\n      if (!ids.has(value)) {\n        let sid;\n        // a bit apocalyptic scenario but if this main runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (values.has(sid = id++));\n        ids.set(value, sid);\n        values.set(sid, type === FUNCTION ? value : $(value));\n      }\n      return tv(type, ids.get(value));\n    });\n\n    const onGarbageCollected = value => {\n      __thread__(DELETE, tv(STRING, value));\n    };\n\n    const asValue = (type, value) => {\n      switch (type) {\n        case OBJECT:\n          if (value == null) return global;\n        case ARRAY:\n          if (typeof value === NUMBER) return values.get(value);\n          if (!(value instanceof TypedArray)) {\n            for (const key in value)\n              value[key] = target(value[key]);\n          }\n          return value;\n        case FUNCTION:\n          if (typeof value === STRING) {\n            const retained = values.get(value)?.deref();\n            if (retained) return retained;\n            const cb = function (...args) {\n              if (patch && args.at(0) instanceof Event) handleEvent(...args);\n              return __thread__(\n                APPLY,\n                tv(FUNCTION, value),\n                result(this),\n                args.map(result)\n              );\n            };\n            values.set(value, new WeakRef(cb));\n            return createGCHook(value, onGarbageCollected, {\n              return: cb,\n              token: false,\n            });\n          }\n          return values.get(value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    };\n\n    const target = entry => unwrap(entry, asValue);\n\n    const trapsHandler = {\n      [APPLY]: (target, thisArg, args) => result(target.apply(thisArg, args)),\n      [CONSTRUCT]: (target, args) => result(new target(...args)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => result(defineProperty(target, name, descriptor)),\n      [DELETE_PROPERTY]: (target, name) => result(deleteProperty(target, name)),\n      [GET_PROTOTYPE_OF]: target => result(getPrototypeOf(target)),\n      [GET]: (target, name) => result(target[name]),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = getOwnPropertyDescriptor(target, name);\n        return descriptor ? tv(OBJECT, augment(descriptor, result)) : tv(UNDEFINED, descriptor);\n      },\n      [HAS]: (target, name) => result(name in target),\n      [IS_EXTENSIBLE]: target => result(isExtensible(target)),\n      [OWN_KEYS]: target => tv(ARRAY, ownKeys(target).map(result)),\n      [PREVENT_EXTENSION]: target => result(preventExtensions(target)),\n      [SET]: (target, name, value) => result(set(target, name, value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(setPrototypeOf(target, proto)),\n      [DELETE](id) {\n        ids.delete(values.get(id));\n        values.delete(id);\n      }\n    };\n\n    thread[MAIN] = (trap, entry, ...args) => {\n      switch (trap) {\n        case APPLY:\n          args[0] = target(args[0]);\n          args[1] = args[1].map(target);\n          break;\n        case CONSTRUCT:\n          args[0] = args[0].map(target);\n          break;\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args;\n          args[0] = target(name);\n          const {get, set, value} = descriptor;\n          if (get) descriptor.get = target(get);\n          if (set) descriptor.set = target(set);\n          if (value) descriptor.value = target(value);\n          break;\n        }\n        default:\n          args = args.map(target);\n          break;\n      }\n      return trapsHandler[trap](target(entry), ...args);\n    };\n\n    return {\n      proxy: thread,\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: () => false\n    };\n  };\n};\n","import main from '../shared/main.js';\n\nexport default main('Window', true);\n","import thread from '../shared/thread.js';\n\nexport default thread('Window');\n","import { target as tv, unwrap, bound, unbound } from 'proxy-target/array';\nimport { create as createGCHook } from 'gc-hook';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n} from 'proxy-target/types';\n\nimport {\n  TypedArray,\n  augment,\n  asEntry,\n  symbol,\n  transform,\n} from './utils.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default name => {\n  let id = 0;\n  const ids = new Map;\n  const values = new Map;\n\n  const __proxy__ = Symbol();\n\n  return function (main, MAIN, THREAD) {\n    const $ = this?.transform || transform;\n    const { [MAIN]: __main__ } = main;\n\n    const proxies = new Map;\n\n    const onGarbageCollected = value => {\n      proxies.delete(value);\n      __main__(DELETE, argument(value));\n    };\n\n    const argument = asEntry(\n      (type, value) => {\n        if (__proxy__ in value)\n          return unbound(value[__proxy__]);\n        if (type === FUNCTION) {\n          value = $(value);\n          if (!values.has(value)) {\n            let sid;\n            // a bit apocalyptic scenario but if this thread runs forever\n            // and the id does a whole int32 roundtrip we might have still\n            // some reference dangling around\n            while (values.has(sid = String(id++)));\n            ids.set(value, sid);\n            values.set(sid, value);\n          }\n          return tv(type, ids.get(value));\n        }\n        if (!(value instanceof TypedArray)) {\n          value = $(value);\n          for(const key in value)\n            value[key] = argument(value[key]);\n        }\n        return tv(type, value);\n      }\n    );\n\n    const register = (entry, type, value) => {\n      const retained = proxies.get(value)?.deref();\n      if (retained) return retained;\n      const target = type === FUNCTION ? bound(entry) : entry;\n      const proxy = new Proxy(target, proxyHandler);\n      proxies.set(value, new WeakRef(proxy));\n      return createGCHook(value, onGarbageCollected, {\n        return: proxy,\n        token: false,\n      });\n    };\n\n    const fromEntry = entry => unwrap(entry, (type, value) => {\n      switch (type) {\n        case OBJECT:\n          if (value === null) return globalThis;\n        case ARRAY:\n          return typeof value === NUMBER ? register(entry, type, value) : value;\n        case FUNCTION:\n          return typeof value === STRING ? values.get(value) : register(entry, type, value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    });\n\n    const result = (TRAP, target, ...args) => fromEntry(__main__(TRAP, unbound(target), ...args));\n\n    const proxyHandler = {\n      [APPLY]: (target, thisArg, args) => result(APPLY, target, argument(thisArg), args.map(argument)),\n      [CONSTRUCT]: (target, args) => result(CONSTRUCT, target, args.map(argument)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => {\n        const { get, set, value } = descriptor;\n        if (typeof get === FUNCTION) descriptor.get = argument(get);\n        if (typeof set === FUNCTION) descriptor.set = argument(set);\n        if (typeof value === FUNCTION) descriptor.value = argument(value);\n        return result(DEFINE_PROPERTY, target, argument(name), descriptor);\n      },\n      [DELETE_PROPERTY]: (target, name) => result(DELETE_PROPERTY, target, argument(name)),\n      [GET_PROTOTYPE_OF]: target => result(GET_PROTOTYPE_OF, target),\n      [GET]: (target, name) => name === __proxy__ ? target : result(GET, target, argument(name)),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = result(GET_OWN_PROPERTY_DESCRIPTOR, target, argument(name));\n        return descriptor && augment(descriptor, fromEntry);\n      },\n      [HAS]: (target, name) => name === __proxy__ || result(HAS, target, argument(name)),\n      [IS_EXTENSIBLE]: target => result(IS_EXTENSIBLE, target),\n      [OWN_KEYS]: target => result(OWN_KEYS, target).map(fromEntry),\n      [PREVENT_EXTENSION]: target => result(PREVENT_EXTENSION, target),\n      [SET]: (target, name, value) => result(SET, target, argument(name), argument(value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(SET_PROTOTYPE_OF, target, argument(proto)),\n    };\n\n    main[THREAD] = (trap, entry, ctx, args) => {\n      switch (trap) {\n        case APPLY:\n          return fromEntry(entry).apply(fromEntry(ctx), args.map(fromEntry));\n        case DELETE: {\n          const id = fromEntry(entry);\n          ids.delete(values.get(id));\n          values.delete(id);\n        }\n      }\n    };\n\n    const global = new Proxy(tv(OBJECT, null), proxyHandler);\n\n    return {\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: value => typeof value === OBJECT && !!value && __proxy__ in value,\n      proxy: main\n    };\n  };\n};\n","import {FUNCTION} from 'proxy-target/types';\nexport default typeof Worker === FUNCTION ? Worker : class {};\n","import {MAIN, THREAD} from './channel.js';\nimport $coincident from './index.js';\nimport main from './window/main.js';\nimport thread from './window/thread.js';\nimport Worker from './shared/worker.js';\n\nconst proxies = new WeakMap;\n\n/**\n * @typedef {object} Coincident\n * @property {ProxyHandler<globalThis>} proxy\n * @property {ProxyHandler<Window>} window\n * @property {(value: any) => boolean} isWindowProxy\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * In workers, returns a `{proxy, window, isWindowProxy}` namespace to reach main globals synchronously.\n * @param {Worker | globalThis} self the context in which code should run\n * @returns {ProxyHandler<Worker> | Coincident}\n */\nconst coincident = (self, ...args) => {\n  const proxy = $coincident(self, ...args);\n  if (!proxies.has(proxy)) {\n    const util = self instanceof Worker ? main : thread;\n    proxies.set(proxy, util.call(args.at(0), proxy, MAIN, THREAD));\n  }\n  return proxies.get(proxy);\n}\n\ncoincident.transfer = $coincident.transfer;\n\nexport default coincident;\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nexport default () => new Worker(URL.createObjectURL(new Blob([\"const e=\\\"object\\\"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of i)e[s(t)]=s(n);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of i)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:n}=i;return r(new e[t](n),o)}case 8:return r(BigInt(i),o);case\\\"BigInt\\\":return r(Object(BigInt(i)),o)}return r(new e[a](i),o)};return s})(new Map,t)(0),n=\\\"\\\",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case\\\"Array\\\":return[1,n];case\\\"Object\\\":return[2,n];case\\\"Date\\\":return[3,n];case\\\"RegExp\\\":return[4,n];case\\\"Map\\\":return[5,n];case\\\"Set\\\":return[6,n]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),i=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const i=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,p]=o(r);switch(l){case 0:{let t=r;switch(p){case\\\"bigint\\\":l=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+p);t=null;break;case\\\"undefined\\\":return i([-1],r)}return i([l,t],r)}case 1:{if(p)return i([p,[...r]],r);const e=[],t=i([l,e],r);for(const t of r)e.push(c(t));return t}case 2:{if(p)switch(p){case\\\"BigInt\\\":return i([p,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([p,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return c(r.toJSON());const n=[],u=i([l,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([c(t),c(r[t])]);return u}case 3:return i([l,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return i([l,{source:e,flags:t}],r)}case 5:{const t=[],n=i([l,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([c(n),c(s)]);return n}case 6:{const t=[],n=i([l,t],r);for(const n of r)!e&&a(o(n))||t.push(c(n));return n}}const{message:u}=r;return i([l,{name:p,message:u}],r)};return c})(!(t||n),!!t,new Map,r)(e),r},{parse:c,stringify:l}=JSON,p={json:!0,lossy:!0};var u=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,p))});const f=\\\"64e10b34-2bf7-4616-9668-f99de5aa046e\\\",d=\\\"M\\\"+f,h=\\\"T\\\"+f,g=\\\"array\\\",y=\\\"function\\\",w=\\\"null\\\",m=\\\"number\\\",_=\\\"object\\\",b=\\\"string\\\",E=\\\"symbol\\\",v=\\\"undefined\\\",k=\\\"apply\\\",x=\\\"construct\\\",T=\\\"defineProperty\\\",S=\\\"deleteProperty\\\",A=\\\"get\\\",j=\\\"getOwnPropertyDescriptor\\\",$=\\\"getPrototypeOf\\\",O=\\\"has\\\",R=\\\"isExtensible\\\",P=\\\"ownKeys\\\",N=\\\"preventExtensions\\\",M=\\\"set\\\",I=\\\"setPrototypeOf\\\",F=\\\"delete\\\",{isArray:W}=Array;let{SharedArrayBuffer:H,window:D}=globalThis,{notify:C,wait:L,waitAsync:B}=Atomics,U=null;B||(B=e=>({value:new Promise((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))\\\");n.onmessage=t,n.postMessage(e)}))}));try{new H(4)}catch(e){H=ArrayBuffer;const t=new WeakMap;if(D){const e=new Map,{prototype:{postMessage:n}}=Worker,r=t=>{const n=t.data?.[f];if(!W(n)){t.stopImmediatePropagation();const{id:r,sb:s}=n;e.get(r)(s)}};U=function(e,...s){const o=e?.[f];if(W(o)){const[e,n]=o;t.set(n,e),this.addEventListener(\\\"message\\\",r)}return n.call(this,e,...s)},B=n=>({value:new Promise((r=>{e.set(t.get(n),r)})).then((r=>{e.delete(t.get(n)),t.delete(n);for(let e=0;e<r.length;e++)n[e]=r[e];return\\\"ok\\\"}))})}else{const e=(e,t)=>({[f]:{id:e,sb:t}});C=n=>{postMessage(e(t.get(n),n))},addEventListener(\\\"message\\\",(e=>{const n=e.data?.[f];if(W(n)){const[e,r]=n;t.set(r,e)}}))}}\\n/*! (c) Andrea Giammarchi - ISC */const{Int32Array:q,Map:J,Uint16Array:z}=globalThis,{BYTES_PER_ELEMENT:G}=q,{BYTES_PER_ELEMENT:K}=z,Y=new WeakSet,X=new WeakMap,V={value:{then:e=>e()}};let Z=0;const Q=(e,{parse:t=JSON.parse,stringify:n=JSON.stringify,transform:r,interrupt:s}=JSON)=>{if(!X.has(e)){const o=U||e.postMessage,a=(t,...n)=>o.call(e,{[f]:n},{transfer:t}),i=typeof s===y?s:s?.handler,c=s?.delay||42,l=new TextDecoder(\\\"utf-16\\\"),p=(e,t)=>e?B(t,0):(i?((e,t,n)=>{for(;\\\"timed-out\\\"===L(e,0,0,t);)n()})(t,c,i):L(t,0),V);let u=!1;X.set(e,new Proxy(new J,{[O]:(e,t)=>\\\"string\\\"==typeof t&&!t.startsWith(\\\"_\\\"),[A]:(n,s)=>\\\"then\\\"===s?null:(...n)=>{const o=Z++;let i=new q(new H(2*G)),c=[];Y.has(n.at(-1)||c)&&Y.delete(c=n.pop()),a(c,o,i,s,r?n.map(r):n);const f=e!==globalThis;let d=0;return u&&f&&(d=setTimeout(console.warn,1e3,`💀🔒 - Possible deadlock if proxy.${s}(...args) is awaited`)),p(f,i).value.then((()=>{clearTimeout(d);const e=i[1];if(!e)return;const n=K*e;return i=new q(new H(n+n%G)),a([],o,i),p(f,i).value.then((()=>t(l.decode(new z(i.buffer).slice(0,e)))))}))},[M](t,s,o){const a=typeof o;if(a!==y)throw new Error(`Unable to assign ${s} as ${a}`);if(!t.size){const s=new J;e.addEventListener(\\\"message\\\",(async e=>{const o=e.data?.[f];if(W(o)){e.stopImmediatePropagation();const[a,i,...c]=o;let l;if(c.length){const[e,o]=c;if(t.has(e)){u=!0;try{const c=await t.get(e)(...o);if(void 0!==c){const e=n(r?r(c):c);s.set(a,e),i[1]=e.length}}catch(e){l=e}finally{u=!1}}else l=new Error(`Unsupported action: ${e}`);i[0]=1}else{const e=s.get(a);s.delete(a);for(let t=new z(i.buffer),n=0;n<e.length;n++)t[n]=e.charCodeAt(n)}if(C(i,0),l)throw l}}))}return!!t.set(s,o)}}))}return X.get(e)};Q.transfer=(...e)=>(Y.add(e),e);const{isArray:ee}=Array,te=(e,t)=>t,ne=e=>typeof e===y?(e=>e())(e):e;function re(){return this}const se=(e,t)=>e===g?[t]:{t:e,v:t},oe=(e,t=te)=>{let n=typeof e,r=e;return n===_&&(ee(e)?(n=g,r=e.at(0)):({t:n,v:r}=e)),t(n,r)},ae=(e,t)=>e===y?t:se(e,t),ie=(e,t=ae)=>{const n=null===e?w:typeof e;return t(n===_&&ee(e)?g:n,e)},ce=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),le=Object.create(null),pe=(e,t,{debug:n,handler:r,return:s,token:o=e}=le)=>{const a=s||new Proxy(e,r||le),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),ce.register(...i),a},{defineProperty:ue,deleteProperty:fe,getOwnPropertyDescriptor:de,getPrototypeOf:he,isExtensible:ge,ownKeys:ye,preventExtensions:we,set:me,setPrototypeOf:_e}=Reflect,{assign:be,create:Ee}=Object,ve=he(Int8Array),ke=(e,t)=>{const{get:n,set:r,value:s}=e;return n&&(e.get=t(n)),r&&(e.set=t(r)),s&&(e.value=t(s)),e},xe=e=>t=>ie(t,((t,n)=>{switch(t){case w:return se(w,n);case _:if(n===globalThis)return se(t,null);case g:case y:return e(t,n);case\\\"boolean\\\":case m:case b:case v:case\\\"bigint\\\":return se(t,n);case E:{if(Te.has(n))return se(t,Te.get(n));let e=Symbol.keyFor(n);if(e)return se(t,`.${e}`)}}throw new TypeError(`Unable to handle this ${t}: ${String(n)}`)})),Te=new Map(ye(Symbol).filter((e=>typeof Symbol[e]===E)).map((e=>[Symbol[e],e]))),Se=e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of Te)if(n===e)return t},Ae=e=>e;var je=((e,t)=>{const n=new WeakMap;{const{addEventListener:e}=EventTarget.prototype;ue(EventTarget.prototype,\\\"addEventListener\\\",{value(t,r,...s){return s.at(0)?.invoke&&(n.has(this)||n.set(this,new Map),n.get(this).set(t,[].concat(s[0].invoke)),delete s[0].invoke),e.call(this,t,r,...s)}})}return function(t,r,s,...o){let a=0,i=this?.transform||Ae;const c=new Map,l=new Map,{[s]:p}=t,u=o.length?be(Ee(globalThis),...o):globalThis,f=xe(((e,t)=>{if(!c.has(t)){let n;for(;l.has(n=a++););c.set(t,n),l.set(n,e===y?t:i(t))}return se(e,c.get(t))})),d=e=>{p(F,se(b,e))},h=(e,t)=>{switch(e){case _:if(null==t)return u;case g:if(typeof t===m)return l.get(t);if(!(t instanceof ve))for(const e in t)t[e]=w(t[e]);return t;case y:if(typeof t===b){const e=l.get(t)?.deref();if(e)return e;const r=function(...e){return e.at(0)instanceof Event&&(e=>{const{currentTarget:t,target:r,type:s}=e;for(const o of n.get(t||r)?.get(s)||[])e[o]()})(...e),p(k,se(y,t),f(this),e.map(f))};return l.set(t,new WeakRef(r)),pe(t,d,{return:r,token:!1})}return l.get(t);case E:return Se(t)}return t},w=e=>oe(e,h),W={[k]:(e,t,n)=>f(e.apply(t,n)),[x]:(e,t)=>f(new e(...t)),[T]:(e,t,n)=>f(ue(e,t,n)),[S]:(e,t)=>f(fe(e,t)),[$]:e=>f(he(e)),[A]:(e,t)=>f(e[t]),[j]:(e,t)=>{const n=de(e,t);return n?se(_,ke(n,f)):se(v,n)},[O]:(e,t)=>f(t in e),[R]:e=>f(ge(e)),[P]:e=>se(g,ye(e).map(f)),[N]:e=>f(we(e)),[M]:(e,t,n)=>f(me(e,t,n)),[I]:(e,t)=>f(_e(e,t)),[F](e){c.delete(l.get(e)),l.delete(e)}};return t[r]=(e,t,...n)=>{switch(e){case k:n[0]=w(n[0]),n[1]=n[1].map(w);break;case x:n[0]=n[0].map(w);break;case T:{const[e,t]=n;n[0]=w(e);const{get:r,set:s,value:o}=t;r&&(t.get=w(r)),s&&(t.set=w(s)),o&&(t.value=w(o));break}default:n=n.map(w)}return W[e](w(t),...n)},{proxy:t,[e.toLowerCase()]:u,[`is${e}Proxy`]:()=>!1}}})(\\\"Window\\\"),$e=(e=>{let t=0;const n=new Map,r=new Map,s=Symbol();return function(o,a,i){const c=this?.transform||Ae,{[a]:l}=o,p=new Map,u=e=>{p.delete(e),l(F,f(e))},f=xe(((e,o)=>{if(s in o)return ne(o[s]);if(e===y){if(o=c(o),!r.has(o)){let e;for(;r.has(e=String(t++)););n.set(o,e),r.set(e,o)}return se(e,n.get(o))}if(!(o instanceof ve)){o=c(o);for(const e in o)o[e]=f(o[e])}return se(e,o)})),d=(e,t,n)=>{const r=p.get(n)?.deref();if(r)return r;const s=t===y?(e=>re.bind(e))(e):e,o=new Proxy(s,v);return p.set(n,new WeakRef(o)),pe(n,u,{return:o,token:!1})},h=e=>oe(e,((t,n)=>{switch(t){case _:if(null===n)return globalThis;case g:return typeof n===m?d(e,t,n):n;case y:return typeof n===b?r.get(n):d(e,t,n);case E:return Se(n)}return n})),w=(e,t,...n)=>h(l(e,ne(t),...n)),v={[k]:(e,t,n)=>w(k,e,f(t),n.map(f)),[x]:(e,t)=>w(x,e,t.map(f)),[T]:(e,t,n)=>{const{get:r,set:s,value:o}=n;return typeof r===y&&(n.get=f(r)),typeof s===y&&(n.set=f(s)),typeof o===y&&(n.value=f(o)),w(T,e,f(t),n)},[S]:(e,t)=>w(S,e,f(t)),[$]:e=>w($,e),[A]:(e,t)=>t===s?e:w(A,e,f(t)),[j]:(e,t)=>{const n=w(j,e,f(t));return n&&ke(n,h)},[O]:(e,t)=>t===s||w(O,e,f(t)),[R]:e=>w(R,e),[P]:e=>w(P,e).map(h),[N]:e=>w(N,e),[M]:(e,t,n)=>w(M,e,f(t),f(n)),[I]:(e,t)=>w(I,e,f(t))};o[i]=(e,t,s,o)=>{switch(e){case k:return h(t).apply(h(s),o.map(h));case F:{const e=h(t);n.delete(r.get(e)),r.delete(e)}}};const W=new Proxy(se(_,null),v);return{[e.toLowerCase()]:W,[`is${e}Proxy`]:e=>typeof e===_&&!!e&&s in e,proxy:o}}})(\\\"Window\\\"),Oe=typeof Worker===y?Worker:class{};const Re=new WeakMap,Pe=(e,...t)=>{const n=Q(e,...t);if(!Re.has(n)){const r=e instanceof Oe?je:$e;Re.set(n,r.call(t.at(0),n,d,h))}return Re.get(n)};Pe.transfer=Q.transfer;const Ne={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Me=new WeakMap,Ie=e=>{const t=e||console,n={buffered:We,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Me.set(t,n),t}}},Fe=new TextDecoder,We=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(Fe.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},He=(e,...t)=>Ne[typeof e](e,...t),{isArray:De}=Array,{assign:Ce,create:Le,defineProperties:Be,defineProperty:Ue,entries:qe}=Object,{all:Je,resolve:ze}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Ge=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,Ke=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Ye=e=>Function(`'use strict';return (${e})`)(),Xe=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Ve=Symbol.for(\\\"polyscript.js_modules\\\"),Ze=new Map;Ue(globalThis,Ve,{value:Ze}),new Proxy(Ze,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Qe=(e,t)=>!t.startsWith(\\\"_\\\"),et=(e,t)=>new Proxy(e,{has:Qe,get:(e,n)=>e[t][n]}),tt=(e,t)=>import(e).then((e=>{Ze.set(t,{...e})})),nt=e=>new Promise(((t,n)=>{document.querySelector(`link[href=\\\"${e}\\\"]`)&&t(),document.head.append(Ce(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),rt=e=>/\\\\.css/i.test(new URL(e).pathname),st=(e,t)=>e.has(t),ot=e=>[...e.keys()];var at=(e,t,n,r)=>{const s=globalThis[Ve];if(n)for(let[e,t]of qe(n)){let n=s.get(t);n&&!De(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:st,ownKeys:ot,get:(e,s)=>{let o=e.get(s);if(De(o)){let a=o;o=null;for(let e of a)e=Ge(e,r),rt(e)?n.importCSS(e):(n.importJS(e,s),o=t[Ve].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const it=Object.getOwnPropertyDescriptors(Response.prototype),ct=e=>\\\"function\\\"==typeof e,lt={get:(e,t)=>it.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!ct(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,it[t]):((e,t)=>ct(t)?t.bind(e):t)(e,e[t])};var pt=(e,...t)=>new Proxy(fetch(e,...t),lt);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const ut=!globalThis.window,ft=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):ht(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},dt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},ht=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},gt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},yt=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},wt=(e,t)=>pt(Ge(e,t)).arrayBuffer(),mt=(e,t,n,r)=>Je((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(De(r))return r.map((n=>({url:yt([e,n]),path:yt([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:yt([t,s])}]}))})(n).map((({url:n,path:s})=>wt(n,r).then((n=>e.writeFile(t,s,n)))))),_t=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,bt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),Et=(e,t,n,r)=>Je((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of qe(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,bt(o,t))}else{const e=bt(s,t),a=_t(e,bt(o||\\\"./\\\",t));if(n.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>wt(n,r).then((r=>e.writeFile(t,s,r,n)))))),vt=({main:e,worker:t},n)=>{const r=[];if(t&&ut)for(let[e,s]of qe(t))e=Ge(e,n),r.push(tt(e,s));if(e&&!ut)for(let[t,s]of qe(e))t=Ge(t,n),rt(t)?nt(t):r.push(tt(t,s));return Je(r)},{assign:kt}=Object,xt=\\\"entries\\\",Tt=\\\"readonly\\\",St=\\\"readwrite\\\",At={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},jt=({target:{result:e}})=>e;class $t extends EventTarget{#e;#t;#n;async#r(e,t){const n=(await this.#e).transaction(xt,t,this.#t);return new Promise(((t,r)=>kt(e(n.objectStore(xt)),{onsuccess:t,onerror:r})))}constructor(e,{durability:t=At.durability,prefix:n=At.prefix}=At){super(),this.#n=n,this.#t={durability:t},this.#e=new Promise(((t,n)=>{kt(indexedDB.open(`${this.#n}/${e}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(xt),n.oncomplete=()=>t(e)},onsuccess(e){t(jt(e))},onerror(e){n(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(e){const{type:t,message:n,isTrusted:r}=e;return super.dispatchEvent(r?kt(new Event(t),{message:n}):e)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),Tt).then(jt)}async clear(){await this.#r((e=>e.clear()),St)}async delete(e){await this.#r((t=>t.delete(e)),St)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),Tt).then(jt)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),Tt).then(jt)}async keys(){return await this.#r((e=>e.getAllKeys()),Tt).then(jt)}async set(e,t){return await this.#r((n=>n.put(t,e)),St),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class Ot extends Map{#s;#o;constructor(...e){super(),this.#s=new $t(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}const Rt=new WeakMap,Pt=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await Rt.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new Ot(e);return await t.sync(),t},n.JSON=u),e.registerJsModule(t,n)},Nt=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},Mt=(e,t,...n)=>{try{return e.runPython(He(t),...n)}catch(t){Me.get(e).stderr(t)}},It=async(e,t,...n)=>{try{return await e.runPythonAsync(He(t),...n)}catch(t){Me.get(e).stderr(t)}},Ft=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Me.get(e).stderr(t)}};var Wt=(new TextEncoder).encode('from uio import StringIO\\\\nimport sys\\\\n\\\\nclass Response:\\\\n    def __init__(self, f):\\\\n        self.raw = f\\\\n        self.encoding = \\\"utf-8\\\"\\\\n        self._cached = None\\\\n\\\\n    def close(self):\\\\n        if self.raw:\\\\n            self.raw.close()\\\\n            self.raw = None\\\\n        self._cached = None\\\\n\\\\n    @property\\\\n    def content(self):\\\\n        if self._cached is None:\\\\n            try:\\\\n                self._cached = self.raw.read()\\\\n            finally:\\\\n                self.raw.close()\\\\n                self.raw = None\\\\n        return self._cached\\\\n\\\\n    @property\\\\n    def text(self):\\\\n        return str(self.content, self.encoding)\\\\n\\\\n    def json(self):\\\\n        import ujson\\\\n\\\\n        return ujson.loads(self.content)\\\\n\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ntry:\\\\n    import js\\\\nexcept Exception as err:\\\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\n\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ndef request(\\\\n    method,\\\\n    url,\\\\n    data=None,\\\\n    json=None,\\\\n    headers={},\\\\n    stream=None,\\\\n    auth=None,\\\\n    timeout=None,\\\\n    parse_headers=True,\\\\n):\\\\n    from js import XMLHttpRequest\\\\n\\\\n    xhr = XMLHttpRequest.new()\\\\n    xhr.withCredentials = False\\\\n\\\\n    if auth is not None:\\\\n        import ubinascii\\\\n\\\\n        username, password = auth\\\\n        xhr.open(method, url, False, username, password)\\\\n    else:\\\\n        xhr.open(method, url, False)\\\\n\\\\n    for name, value in headers.items():\\\\n        if name.lower() not in HEADERS_TO_IGNORE:\\\\n            xhr.setRequestHeader(name, value)\\\\n\\\\n    if timeout:\\\\n        xhr.timeout = int(timeout * 1000)\\\\n\\\\n    if json is not None:\\\\n        assert data is None\\\\n        import ujson\\\\n\\\\n        data = ujson.dumps(json)\\\\n        # s.write(b\\\"Content-Type: application/json\\\\\\\\r\\\\\\\\n\\\")\\\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\\\n\\\\n    xhr.send(data)\\\\n\\\\n    # Emulates the construction process in the original urequests\\\\n    resp = Response(StringIO(xhr.responseText))\\\\n    resp.status_code = xhr.status\\\\n    resp.reason = xhr.statusText\\\\n    resp.headers = xhr.getAllResponseHeaders()\\\\n\\\\n    return resp\\\\n\\\\n\\\\n# Other methods - head, post, put, patch, delete - are not used by\\\\n# mip and therefore not included\\\\n\\\\n\\\\ndef get(url, **kw):\\\\n    return request(\\\"GET\\\", url, **kw)\\\\n\\\\n\\\\n# Content below this line is from the Micropython MIP package and is covered\\\\n# by the applicable MIT license:\\\\n# \\\\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\\\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\\\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\\\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\\\n# DEALINGS IN THE SOFTWARE.\\\\n\\\\n# MicroPython package installer\\\\n# MIT license; Copyright (c) 2022 Jim Mussared\\\\n\\\\n\\\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\\\n_CHUNK_SIZE = 128\\\\n\\\\n\\\\n# This implements os.makedirs(os.dirname(path))\\\\ndef _ensure_path_exists(path):\\\\n    import os\\\\n\\\\n    split = path.split(\\\"/\\\")\\\\n\\\\n    # Handle paths starting with \\\"/\\\".\\\\n    if not split[0]:\\\\n        split.pop(0)\\\\n        split[0] = \\\"/\\\" + split[0]\\\\n\\\\n    prefix = \\\"\\\"\\\\n    for i in range(len(split) - 1):\\\\n        prefix += split[i]\\\\n        try:\\\\n            os.stat(prefix)\\\\n        except:\\\\n            os.mkdir(prefix)\\\\n        prefix += \\\"/\\\"\\\\n\\\\n\\\\n# Copy from src (stream) to dest (function-taking-bytes)\\\\ndef _chunk(src, dest):\\\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\\\n    while True:\\\\n        n = src.readinto(buf)\\\\n        if n == 0:\\\\n            break\\\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\\\n\\\\n\\\\n# Check if the specified path exists and matches the hash.\\\\ndef _check_exists(path, short_hash):\\\\n    import os\\\\n\\\\n    try:\\\\n        import binascii\\\\n        import hashlib\\\\n\\\\n        with open(path, \\\"rb\\\") as f:\\\\n            hs256 = hashlib.sha256()\\\\n            _chunk(f, hs256.update)\\\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\\\n            return existing_hash == short_hash\\\\n    except:\\\\n        return False\\\\n\\\\n\\\\ndef _rewrite_url(url, branch=None):\\\\n    if not branch:\\\\n        branch = \\\"HEAD\\\"\\\\n    if url.startswith(\\\"github:\\\"):\\\\n        url = url[7:].split(\\\"/\\\")\\\\n        url = (\\\\n            \\\"https://raw.githubusercontent.com/\\\"\\\\n            + url[0]\\\\n            + \\\"/\\\"\\\\n            + url[1]\\\\n            + \\\"/\\\"\\\\n            + branch\\\\n            + \\\"/\\\"\\\\n            + \\\"/\\\".join(url[2:])\\\\n        )\\\\n    return url\\\\n\\\\n\\\\ndef _download_file(url, dest):\\\\n    response = get(url)\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\\\n            return False\\\\n\\\\n        print(\\\"Copying:\\\", dest)\\\\n        _ensure_path_exists(dest)\\\\n        with open(dest, \\\"wb\\\") as f:\\\\n            _chunk(response.raw, f.write)\\\\n\\\\n        return True\\\\n    finally:\\\\n        response.close()\\\\n\\\\n\\\\ndef _install_json(package_json_url, index, target, version, mpy):\\\\n    response = get(_rewrite_url(package_json_url, version))\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Package not found:\\\", package_json_url)\\\\n            return False\\\\n\\\\n        package_json = response.json()\\\\n    finally:\\\\n        response.close()\\\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if _check_exists(fs_target_path, short_hash):\\\\n            print(\\\"Exists:\\\", fs_target_path)\\\\n        else:\\\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\\\n            if not _download_file(file_url, fs_target_path):\\\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\\\n                return False\\\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\\\n            return False\\\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\\\n        if not _install_package(dep, index, target, dep_version, mpy):\\\\n            return False\\\\n    return True\\\\n\\\\n\\\\ndef _install_package(package, index, target, version, mpy):\\\\n    if (\\\\n        package.startswith(\\\"http://\\\")\\\\n        or package.startswith(\\\"https://\\\")\\\\n        or package.startswith(\\\"github:\\\")\\\\n    ):\\\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\\\n            return _download_file(\\\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\\\n            )\\\\n        else:\\\\n            if not package.endswith(\\\".json\\\"):\\\\n                if not package.endswith(\\\"/\\\"):\\\\n                    package += \\\"/\\\"\\\\n                package += \\\"package.json\\\"\\\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\\\n    else:\\\\n        if not version:\\\\n            version = \\\"latest\\\"\\\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\\\n\\\\n        mpy_version = (\\\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\\\n        )\\\\n\\\\n        # WARNING: mpy_version fails miserably with 1.22.0-380\\\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, \\\"py\\\", package, version)\\\\n\\\\n    return _install_json(package, index, target, version, mpy)\\\\n\\\\n\\\\ndef install(package, index=None, target=None, version=None, mpy=True):\\\\n    if not target:\\\\n        for p in sys.path:\\\\n            if p.endswith(\\\"/lib\\\"):\\\\n                target = p\\\\n                break\\\\n        else:\\\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\\\n            return\\\\n\\\\n    if not index:\\\\n        index = _PACKAGE_INDEX\\\\n\\\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\\\n        print(\\\"Done\\\")\\\\n    else:\\\\n        print(\\\"Package may be partially installed\\\")\\\\n');const Ht=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e),Dt=(e,t)=>{try{e.mkdir(t)}catch(e){}};var Ct={type:\\\"micropython\\\",module:(e=\\\"1.24.0-preview-47\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=Ie({stderr:We(console.error),stdout:We(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=Lt.bind(this,i,r);return Rt.set(i,c),t.files&&await Et(this,i,t.files,r),t.fetch&&await mt(this,i,t.fetch,r),t.js_modules&&await vt(t.js_modules,r),this.writeFile(i,\\\"./mip.py\\\",Wt),t.packages&&await c(t.packages),i},registerJSModule:Pt,run:Mt,runAsync:It,runEvent:Ft,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=Nt(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-BxogYCy6.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)Dt(s,i);else{Dt(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return ft(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return ft(i,t,n)}};async function Lt(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Ge(s,t),r=await pt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const Bt={dict_converter:Object.fromEntries};let Ut=!1;const qt=e=>(...t)=>{try{return Ut=!0,e(...t)}finally{Ut=!1}};let Jt=!1;const zt=()=>{if(Jt)return;Jt=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){Ut=!1;let o=e.get(s)?.deref();if(!o)try{o=pe(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),Ut=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return Ut&&n(t),s(this,e,t)}},call:{value(e,...t){return Ut&&n(t),s(this,e,t)}}})};var Gt={type:\\\"pyodide\\\",module:(e=\\\"0.26.1\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){ut||\\\"auto\\\"!==t.experimental_create_proxy||zt();const{stderr:s,stdout:o,get:a}=Ie(),i=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=await a(e({stderr:s,stdout:o,indexURL:i})),l=Kt.bind(c);return Rt.set(c,l),t.files&&await Et(this,c,t.files,r),t.fetch&&await mt(this,c,t.fetch,r),t.js_modules&&await vt(t.js_modules,r),t.packages&&await l(t.packages),c},registerJSModule:Pt,run:qt(Mt),runAsync:qt(It),runEvent:qt(Ft),transform:({ffi:{PyProxy:e}},t)=>t instanceof e?t.toJs(Bt):t,writeFile:(e,t,n,r)=>{const s=Nt(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return ft({FS:o,PATH:a,PATH_FS:i},t,n)}};async function Kt(e){await this.loadPackage(\\\"micropip\\\");const t=this.pyimport(\\\"micropip\\\");await t.install(e,{keep_going:!0}),t.destroy()}const Yt=\\\"ruby-wasm-wasi\\\",Xt=Yt.replace(/\\\\W+/g,\\\"_\\\");var Vt={type:Yt,experimental:!0,module:(e=\\\"2.6.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await pt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await Et(this,a,t.files,r),t.fetch&&await mt(this,a,t.fetch,r),t.js_modules&&await vt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Xt}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(He(t),...n),runAsync:(e,t,...n)=>e.evalAsync(He(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Xt}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${Yt}`)}};var Zt={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=Ie(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await Et(this,c,n.files,s),n.fetch&&await mt(this,c,n.fetch,s),n.js_modules&&await vt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(He(t),...n)}catch(t){Me.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(He(t),...n)}catch(t){Me.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Me.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(ht(e,dt(t)),t=gt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const Qt=new WeakMap,en=async(e,t)=>{const{shelter:n,destroy:r,io:s}=Qt.get(e),{output:o,result:a}=await n.captureR(He(t));for(const{type:e,data:t}of o)s[e](t);return pe(a,r,{token:!1})};var tn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.3.3\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=Ie(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return Qt.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:Me.get(o)}),t.files&&await Et(this,o,t.files,r),t.fetch&&await mt(this,o,t.fetch,r),t.js_modules&&await vt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:en,runAsync:en,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const nn=new Map,rn=new Map,sn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=nn.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|https?:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(rn.set(t,e),s(r,e,n,o))))}}),on=e=>{for(const t of[].concat(e.type))nn.set(t,e)};for(const e of[Ct,Gt,Vt,Zt,tn])on(e);const{parse:an}=JSON,cn=e=>{try{return an(e)}catch(t){return Ht(e)}},ln=(e,t,n,r={})=>{if(t){const[e,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Ge(e),n]})(t,n);\\\"json\\\"===s?r=pt(e).json():\\\"toml\\\"===s?r=pt(e).text().then(Ht):\\\"string\\\"===s?r=cn(t):\\\"object\\\"===s&&t?r=t:\\\"txt\\\"===s&&\\\"string\\\"==typeof r&&(r=cn(r)),t=e}return ze(r).then((n=>sn[e](n,t)))},pn=\\\"BeforeRun\\\",un=\\\"AfterRun\\\",fn=[`code${pn}`,`code${pn}Async`,`code${un}`,`code${un}Async`],dn=[\\\"onWorker\\\",\\\"onReady\\\",`on${pn}`,`on${pn}Async`,`on${un}`,`on${un}Async`];function hn(e,t){const{run:n,runAsync:r}=nn.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const gn=(e,t,n,r,s,o)=>{if(s||o){const a=hn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}},yn=\\\"SharedArrayBuffer\\\";let wn,mn,_n;const bn=(e,t)=>{addEventListener(e,t||(async t=>{try{await wn,mn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:En,stringify:vn}=u,{proxy:kn,window:xn,isWindowProxy:Tn}=Pe(self,{parse:En,stringify:vn,transform:e=>_n?_n(e):e}),Sn={sync:kn,window:xn,isWindowProxy:Tn,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};bn(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{wn=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:p,named:u,async:f}=e,d=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(i,l),h=await ln(d,t,n,p),{js_modules:g,sync_main_only:y}=rn.get(d),w=g?.main;let m=!y;try{new SharedArrayBuffer(4),m=!0}catch(e){if(m){const e=`Unable to use ${yn}`;if(!u||!1===y)throw new Error([`${e} due insecure environment.`,`Please read requirements in MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/${yn}#security_requirements`].join(\\\"\\\\n\\\"));console.warn(`${e}. Fallback to async only interaction.`)}m=!1}const _=Le(nn.get(i)),b=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Me.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(_,c||i,p||{},h);let E=\\\"run\\\";if(f&&(E+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of fn){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,Xe(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,Xe(t),...o);return r&&await s(e,r,...o),a}})(_,E,n,r);for(const n of dn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=Ye(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}gn(_,b,Sn,f,e,t)}let v,k,x,T=null,S=\\\"\\\";m&&(({CustomEvent:v,document:k}=xn),T=o&&k.getElementById(o)||null,x=e=>Ke(T,c||i,e,!0,v));const A=at(xn,kn,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,et(r,e));t.registerJSModule(n,s,r)})(i,_,h,A),_.registerJSModule(h,\\\"polyscript\\\",{xworker:Sn,currentScript:T,config:b.config,js_modules:A,get target(){return!S&&T&&(\\\"SCRIPT\\\"===a?T.after(Ce(k.createElement(`script-${c||i}`),{id:S=`${o}-target`})):(S=o,T.replaceChildren(),T.style.display=\\\"block\\\")),S}}),mn=_.runEvent.bind(_,h),_n=_.transform.bind(_,h),T&&x(\\\"ready\\\"),s?.onReady&&Ye(s?.onReady).call(_,hn.call(_,b,h),Sn),await _[E](h,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(_.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";h.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&h.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return T&&x(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),h}catch(e){postMessage(e)}})(),bn(\\\"error\\\"),bn(\\\"message\\\"),bn(\\\"messageerror\\\")}));\\n\".replace(re,place)],{type:'application/javascript'})),{type:'module'})\n/* c8 ignore stop */\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[href=\"${href}\"]`)) onload();\n    document.head.append(\n        assign(\n            document.createElement('link'),\n            { rel: 'stylesheet', href, onload, onerror },\n        )\n    )\n});\n\nexport const isCSS = source => /\\.css/i.test(new URL(source).pathname);\n/* c8 ignore stop */\n\nexport {\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n/* c8 ignore stop */\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","import * as JSON from '@ungap/structured-clone/json';\nimport IDBMapSync from '@webreflection/idb-map/sync';\nimport { dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"from uio import StringIO\\nimport sys\\n\\nclass Response:\\n    def __init__(self, f):\\n        self.raw = f\\n        self.encoding = \\\"utf-8\\\"\\n        self._cached = None\\n\\n    def close(self):\\n        if self.raw:\\n            self.raw.close()\\n            self.raw = None\\n        self._cached = None\\n\\n    @property\\n    def content(self):\\n        if self._cached is None:\\n            try:\\n                self._cached = self.raw.read()\\n            finally:\\n                self.raw.close()\\n                self.raw = None\\n        return self._cached\\n\\n    @property\\n    def text(self):\\n        return str(self.content, self.encoding)\\n\\n    def json(self):\\n        import ujson\\n\\n        return ujson.loads(self.content)\\n\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ntry:\\n    import js\\nexcept Exception as err:\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\n\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ndef request(\\n    method,\\n    url,\\n    data=None,\\n    json=None,\\n    headers={},\\n    stream=None,\\n    auth=None,\\n    timeout=None,\\n    parse_headers=True,\\n):\\n    from js import XMLHttpRequest\\n\\n    xhr = XMLHttpRequest.new()\\n    xhr.withCredentials = False\\n\\n    if auth is not None:\\n        import ubinascii\\n\\n        username, password = auth\\n        xhr.open(method, url, False, username, password)\\n    else:\\n        xhr.open(method, url, False)\\n\\n    for name, value in headers.items():\\n        if name.lower() not in HEADERS_TO_IGNORE:\\n            xhr.setRequestHeader(name, value)\\n\\n    if timeout:\\n        xhr.timeout = int(timeout * 1000)\\n\\n    if json is not None:\\n        assert data is None\\n        import ujson\\n\\n        data = ujson.dumps(json)\\n        # s.write(b\\\"Content-Type: application/json\\\\r\\\\n\\\")\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\n\\n    xhr.send(data)\\n\\n    # Emulates the construction process in the original urequests\\n    resp = Response(StringIO(xhr.responseText))\\n    resp.status_code = xhr.status\\n    resp.reason = xhr.statusText\\n    resp.headers = xhr.getAllResponseHeaders()\\n\\n    return resp\\n\\n\\n# Other methods - head, post, put, patch, delete - are not used by\\n# mip and therefore not included\\n\\n\\ndef get(url, **kw):\\n    return request(\\\"GET\\\", url, **kw)\\n\\n\\n# Content below this line is from the Micropython MIP package and is covered\\n# by the applicable MIT license:\\n# \\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\n# DEALINGS IN THE SOFTWARE.\\n\\n# MicroPython package installer\\n# MIT license; Copyright (c) 2022 Jim Mussared\\n\\n\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\n_CHUNK_SIZE = 128\\n\\n\\n# This implements os.makedirs(os.dirname(path))\\ndef _ensure_path_exists(path):\\n    import os\\n\\n    split = path.split(\\\"/\\\")\\n\\n    # Handle paths starting with \\\"/\\\".\\n    if not split[0]:\\n        split.pop(0)\\n        split[0] = \\\"/\\\" + split[0]\\n\\n    prefix = \\\"\\\"\\n    for i in range(len(split) - 1):\\n        prefix += split[i]\\n        try:\\n            os.stat(prefix)\\n        except:\\n            os.mkdir(prefix)\\n        prefix += \\\"/\\\"\\n\\n\\n# Copy from src (stream) to dest (function-taking-bytes)\\ndef _chunk(src, dest):\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\n    while True:\\n        n = src.readinto(buf)\\n        if n == 0:\\n            break\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\n\\n\\n# Check if the specified path exists and matches the hash.\\ndef _check_exists(path, short_hash):\\n    import os\\n\\n    try:\\n        import binascii\\n        import hashlib\\n\\n        with open(path, \\\"rb\\\") as f:\\n            hs256 = hashlib.sha256()\\n            _chunk(f, hs256.update)\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\n            return existing_hash == short_hash\\n    except:\\n        return False\\n\\n\\ndef _rewrite_url(url, branch=None):\\n    if not branch:\\n        branch = \\\"HEAD\\\"\\n    if url.startswith(\\\"github:\\\"):\\n        url = url[7:].split(\\\"/\\\")\\n        url = (\\n            \\\"https://raw.githubusercontent.com/\\\"\\n            + url[0]\\n            + \\\"/\\\"\\n            + url[1]\\n            + \\\"/\\\"\\n            + branch\\n            + \\\"/\\\"\\n            + \\\"/\\\".join(url[2:])\\n        )\\n    return url\\n\\n\\ndef _download_file(url, dest):\\n    response = get(url)\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\n            return False\\n\\n        print(\\\"Copying:\\\", dest)\\n        _ensure_path_exists(dest)\\n        with open(dest, \\\"wb\\\") as f:\\n            _chunk(response.raw, f.write)\\n\\n        return True\\n    finally:\\n        response.close()\\n\\n\\ndef _install_json(package_json_url, index, target, version, mpy):\\n    response = get(_rewrite_url(package_json_url, version))\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Package not found:\\\", package_json_url)\\n            return False\\n\\n        package_json = response.json()\\n    finally:\\n        response.close()\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if _check_exists(fs_target_path, short_hash):\\n            print(\\\"Exists:\\\", fs_target_path)\\n        else:\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\n            if not _download_file(file_url, fs_target_path):\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\n                return False\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\n            return False\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\n        if not _install_package(dep, index, target, dep_version, mpy):\\n            return False\\n    return True\\n\\n\\ndef _install_package(package, index, target, version, mpy):\\n    if (\\n        package.startswith(\\\"http://\\\")\\n        or package.startswith(\\\"https://\\\")\\n        or package.startswith(\\\"github:\\\")\\n    ):\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\n            return _download_file(\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\n            )\\n        else:\\n            if not package.endswith(\\\".json\\\"):\\n                if not package.endswith(\\\"/\\\"):\\n                    package += \\\"/\\\"\\n                package += \\\"package.json\\\"\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\n    else:\\n        if not version:\\n            version = \\\"latest\\\"\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\n\\n        mpy_version = (\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\n        )\\n\\n        # WARNING: mpy_version fails miserably with 1.22.0-380\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, \\\"py\\\", package, version)\\n\\n    return _install_json(package, index, target, version, mpy)\\n\\n\\ndef install(package, index=None, target=None, version=None, mpy=True):\\n    if not target:\\n        for p in sys.path:\\n            if p.endswith(\\\"/lib\\\"):\\n                target = p\\n                break\\n        else:\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\n            return\\n\\n    if not index:\\n        index = _PACKAGE_INDEX\\n\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\n        print(\\\"Done\\\")\\n    else:\\n        print(\\\"Package may be partially installed\\\")\\n\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { getFormat, loader, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nexport default {\n    type,\n    module: (version = '1.24.0-preview-47') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) await py_imports(config.packages);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { getFormat, loader, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n/* c8 ignore stop */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '0.26.1') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        const { stderr, stdout, get } = stdio();\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, indexURL }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        loader.set(interpreter, py_imports);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        if (config.packages) await py_imports(config.packages);\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: ({ ffi: { PyProxy } }, value) => (\n        value instanceof PyProxy ?\n            value.toJs(toJsOptions) :\n            value\n    ),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages) {\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    await micropip.install(packages, { keep_going: true });\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.6.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.3.3') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that convertion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(rest) \n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        const [absolute, type] = getConfigURLAndType(config, configURL);\n        if (type === 'json') {\n            options = fetch(absolute).json();\n        } else if (type === 'toml') {\n            options = fetch(absolute).text().then(toml);\n        } else if (type === 'string') {\n            options = parseString(config);\n        } else if (type === 'object' && config) {\n            options = config;\n        } else if (type === 'txt' && typeof options === 'string') {\n            options = parseString(options);\n        }\n        config = absolute;\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport fetch from '@webreflection/fetch';\nimport coincident from 'coincident/window';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n */\n\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        const worker = xworker();\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            });\n\n        const sync = assign(\n            coincident(worker, JSON).proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) =>\n                    bootstrap.then(() =>\n                        postMessage.call(worker, data, ...rest),\n                    ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        const result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        if (isAsync) result.then(done);\n        else done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: { async: isAsync, config, env, name: wn, target, version },\n            src,\n            type,\n        } = script;\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        /* c8 ignore start */\n        const url = workerURL(script);\n        if (url) {\n            const workerName = wn?.value;\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                async: !!isAsync,\n                config: configValue,\n                named: !!workerName,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, !!isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { JSModules, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    const workerName = node.getAttribute('name');\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        version,\n                        configURL,\n                        type: runtime,\n                        custom: type,\n                        config: node.getAttribute('config') || config || {},\n                        async: node.hasAttribute('async'),\n                        named: !!workerName,\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","import stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { CUSTOM_SELECTORS, handleCustomType } from './custom.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport { customObserver as $customObserver, define as $define, whenDefined as $whenDefined } from './custom.js';\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport { customObserver, define, whenDefined, env, Hook, XWorker };\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","Object","getOwnPropertyDescriptors","Response","prototype","isFunction","value","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","workers","Map","map","name","has","set","Promise","withResolvers","ignore","Set","workersHandler","freeze","_","promise","w","sync","env","self","globalThis","deserialize","serialized","$","as","out","index","unpair","type","arr","object","key","Date","source","flags","RegExp","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","CHANNEL","MAIN","THREAD","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","APPLY","CONSTRUCT","DEFINE_PROPERTY","DELETE_PROPERTY","GET","GET_OWN_PROPERTY_DESCRIPTOR","GET_PROTOTYPE_OF","HAS","IS_EXTENSIBLE","OWN_KEYS","PREVENT_EXTENSION","SET","SET_PROTOTYPE_OF","DELETE","isArray","Array","SharedArrayBuffer","window","notify","wait","waitAsync","Atomics","postPatched","buffer","onmessage","Worker","postMessage","ArrayBuffer","ids","WeakMap","resolvers","listener","event","details","data","stopImmediatePropagation","id","sb","rest","this","addEventListener","resolve","buff","delete","length","Int32Array","Uint16Array","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","buffers","WeakSet","context","syncResult","fn","uid","coincident","transform","interrupt","sendMessage","post","transfer","delay","decoder","TextDecoder","waitFor","isAsync","waitInterrupt","seppuku","action","startsWith","at","pop","deadlock","setTimeout","console","warn","clearTimeout","bytes","decode","actions","callback","Error","size","results","async","error","ui16a","charCodeAt","reviver","unbound","invoke","Context","target","t","v","unwrap","wrap","revive","resolver","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","create","hold","return","token","register","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","setPrototypeOf","Reflect","assign","TypedArray","Int8Array","augment","descriptor","how","asEntry","tv","symbols","Symbol","keyFor","filter","s","symbol","for","o","main","patch","eventsHandler","EventTarget","concat","thread","values","__thread__","global","sid","asValue","retained","deref","cb","Event","currentTarget","method","handleEvent","WeakRef","createGCHook","trapsHandler","thisArg","apply","proto","trap","proxy","toLowerCase","__proxy__","__main__","proxies","argument","bound","proxyHandler","fromEntry","TRAP","ctx","Worker$1","$coincident","util","url","re","place","q","f","URL","href","a","b","c","reject","dedent","string","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","io","stdio","localIO","buffered","stderr","stdout","log","engine","interpreter","EOL","maybeUI8","Uint8Array","splice","tpl","unescape","un","defineProperties","all","absoluteURL","base","location","nodeInfo","node","tag","tagName","dispatch","what","worker","CE","CustomEvent","dispatchEvent","bubbles","detail","createResolved","module","config","run","code","runAsync","runEvent","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","registerJSModule","importJS","import","esm","importCSS","onload","onerror","querySelector","head","append","createElement","rel","isCSS","pathname","RUNNING_IN_WORKER","writeFile","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","promises","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","IDBMap","db","transaction","onsuccess","objectStore","constructor","super","indexedDB","open","onupgradeneeded","objectStoreNames","createObjectStore","oncomplete","boundDispatch","isTrusted","close","store","count","clear","forEach","getKey","getAllKeys","put","toStringTag","IDBMapSync","queue","loader","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","globals","mip","TextEncoder","encode","toml","text","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","PyProxy","toJs","_module","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","getData","TMP","mpyPackage","install","toJsOptions","dict_converter","fromEntries","overrideFunction","overrideMethod","overridden","applyOverride","onGC","destroy","patchArgs","copy","Function","pyodide","loadPyodide","experimental_create_proxy","indexURL","ffi","unpackArchive","loadPackage","micropip","keep_going","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","configs","selectors","prefixes","getConfigURLAndType","configURL","parseString","getRuntime","absolute","getRuntimeID","toJSONCallback","beforeRun","afterRun","js","resolved","polluteJS","ref","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","createObjectURL","isHook","Hook","bootstrap","ready","writable","configurable","isError","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","element","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handle","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","body","wn","versionValue","configValue","workerName","named","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","getAttribute","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","known","XW","custom","hasAttribute","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","stickyModule","$customObserver","dontBother","indexOf","remove","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,32,33,44]}